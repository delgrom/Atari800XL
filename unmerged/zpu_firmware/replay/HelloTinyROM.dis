
HelloTinyROM.elf:     file format elf32-zpu

Disassembly of section .fixed_vectors:

00000000 <_start>:
   0:	0b          	nop
   1:	0b          	nop
   2:	0b          	nop
   3:	89          	im 9
   4:	ab          	im 43
   5:	04          	poppc
   6:	0b          	nop
   7:	0b          	nop
   8:	0b          	nop
   9:	0b          	nop
   a:	0b          	nop
   b:	0b          	nop
   c:	0b          	nop
   d:	0b          	nop
   e:	0b          	nop
   f:	0b          	nop
  10:	0b          	nop
  11:	0b          	nop
  12:	0b          	nop
  13:	0b          	nop
  14:	0b          	nop
  15:	0b          	nop
  16:	0b          	nop
  17:	0b          	nop
  18:	0b          	nop
  19:	0b          	nop
  1a:	0b          	nop
  1b:	0b          	nop
  1c:	0b          	nop
  1d:	0b          	nop
  1e:	0b          	nop
  1f:	0b          	nop
  20:	0b          	nop
  21:	0b          	nop
  22:	0b          	nop
  23:	0b          	nop
	...

00000040 <_loadh>:
  40:	71          	loadsp 4
  41:	fd          	im -3
  42:	06          	and
  43:	08          	load
  44:	72          	loadsp 8
  45:	83          	im 3
  46:	06          	and
  47:	09          	not
  48:	81          	im 1
  49:	05          	add
  4a:	82          	im 2
  4b:	05          	add
  4c:	83          	im 3
  4d:	2b          	ashiftleft
  4e:	2a          	lshiftright
  4f:	83          	im 3
  50:	ff          	im -1
  51:	ff          	im -1
  52:	06          	and
  53:	52          	storesp 8
  54:	04          	poppc
	...

00000060 <_storeh>:
  60:	71          	loadsp 4
  61:	fd          	im -3
  62:	06          	and
  63:	08          	load
  64:	83          	im 3
  65:	ff          	im -1
  66:	ff          	im -1
  67:	73          	loadsp 12
  68:	83          	im 3
  69:	06          	and
  6a:	09          	not
  6b:	81          	im 1
  6c:	05          	add
  6d:	82          	im 2
  6e:	05          	add
  6f:	83          	im 3
  70:	2b          	ashiftleft
  71:	2b          	ashiftleft
  72:	09          	not
  73:	06          	and
  74:	73          	loadsp 12
  75:	83          	im 3
  76:	ff          	im -1
  77:	ff          	im -1
  78:	0b          	nop
  79:	0b          	nop
  7a:	0b          	nop
  7b:	0b          	nop
  7c:	83          	im 3
  7d:	a7          	im 39
  7e:	04          	poppc
	...

00000080 <_lessthan>:
  80:	72          	loadsp 8
  81:	09          	not
  82:	81          	im 1
  83:	05          	add
  84:	72          	loadsp 8
  85:	05          	add
  86:	73          	loadsp 12
  87:	73          	loadsp 12
  88:	09          	not
  89:	06          	and
  8a:	09          	not
  8b:	06          	and
  8c:	73          	loadsp 12
  8d:	09          	not
  8e:	73          	loadsp 12
  8f:	06          	and
  90:	07          	or
  91:	0a          	flip
  92:	81          	im 1
  93:	06          	and
  94:	53          	storesp 12
  95:	51          	storesp 4
  96:	04          	poppc
	...

000000a0 <_lessthanorequal>:
  a0:	72          	loadsp 8
  a1:	72          	loadsp 8
  a2:	24          	lessthan
  a3:	73          	loadsp 12
  a4:	73          	loadsp 12
  a5:	2e          	eq
  a6:	07          	or
  a7:	53          	storesp 12
  a8:	51          	storesp 4
  a9:	04          	poppc
	...

000000c0 <_ulessthan>:
  c0:	71          	loadsp 4
  c1:	73          	loadsp 12
  c2:	71          	loadsp 4
  c3:	09          	not
  c4:	71          	loadsp 4
  c5:	06          	and
  c6:	81          	im 1
  c7:	06          	and
  c8:	30          	neg
  c9:	72          	loadsp 8
  ca:	0a          	flip
  cb:	10          	addsp 0
  cc:	0a          	flip
  cd:	72          	loadsp 8
  ce:	0a          	flip
  cf:	10          	addsp 0
  d0:	0a          	flip
  d1:	31          	sub
  d2:	05          	add
  d3:	0a          	flip
  d4:	81          	im 1
  d5:	06          	and
  d6:	51          	storesp 4
  d7:	51          	storesp 4
  d8:	53          	storesp 12
  d9:	51          	storesp 4
  da:	04          	poppc
  db:	00          	breakpoint
  dc:	00          	breakpoint
  dd:	00          	breakpoint
	...

000000e0 <_ulessthanorequal>:
  e0:	72          	loadsp 8
  e1:	72          	loadsp 8
  e2:	26          	ulessthan
  e3:	73          	loadsp 12
  e4:	73          	loadsp 12
  e5:	2e          	eq
  e6:	07          	or
  e7:	53          	storesp 12
  e8:	51          	storesp 4
  e9:	04          	poppc
	...

00000100 <_swap>:
	...

00000120 <_slowmult>:
 120:	0b          	nop
 121:	0b          	nop
 122:	0b          	nop
 123:	88          	im 8
 124:	bc          	im 60
 125:	04          	poppc
	...

00000140 <_lshiftright>:
 140:	72          	loadsp 8
 141:	0a          	flip
 142:	72          	loadsp 8
 143:	2b          	ashiftleft
 144:	0a          	flip
 145:	53          	storesp 12
 146:	51          	storesp 4
 147:	04          	poppc
	...

00000160 <_ashiftleft>:
 160:	72          	loadsp 8
 161:	72          	loadsp 8
 162:	9f          	im 31
 163:	06          	and
 164:	09          	not
 165:	81          	im 1
 166:	05          	add
 167:	0b          	nop
 168:	0b          	nop
 169:	0b          	nop
 16a:	88          	im 8
 16b:	9f          	im 31
 16c:	05          	add
 16d:	04          	poppc
	...

00000180 <_ashiftright>:
 180:	72          	loadsp 8
 181:	72          	loadsp 8
 182:	2a          	lshiftright
 183:	ff          	im -1
 184:	73          	loadsp 12
 185:	9f          	im 31
 186:	06          	and
 187:	2a          	lshiftright
 188:	09          	not
 189:	74          	loadsp 16
 18a:	09          	not
 18b:	0a          	flip
 18c:	81          	im 1
 18d:	06          	and
 18e:	ff          	im -1
 18f:	05          	add
 190:	06          	and
 191:	07          	or
 192:	53          	storesp 12
 193:	51          	storesp 4
 194:	04          	poppc
	...

000001a0 <_call>:
 1a0:	71          	loadsp 4
 1a1:	71          	loadsp 4
 1a2:	53          	storesp 12
 1a3:	51          	storesp 4
 1a4:	02          	pushsp
 1a5:	0d          	popsp
 1a6:	04          	poppc

000001a7 <_storehtail>:
 1a7:	06          	and
 1a8:	73          	loadsp 12
 1a9:	83          	im 3
 1aa:	06          	and
 1ab:	09          	not
 1ac:	81          	im 1
 1ad:	05          	add
 1ae:	82          	im 2
 1af:	05          	add
 1b0:	83          	im 3
 1b1:	2b          	ashiftleft
 1b2:	0b          	nop
 1b3:	2b          	ashiftleft
 1b4:	07          	or
 1b5:	72          	loadsp 8
 1b6:	fc          	im -4
 1b7:	06          	and
 1b8:	0c          	store
 1b9:	51          	storesp 4
 1ba:	51          	storesp 4
 1bb:	04          	poppc
 1bc:	00          	breakpoint
 1bd:	00          	breakpoint
	...

000001c0 <_eq>:
 1c0:	72          	loadsp 8
 1c1:	09          	not
 1c2:	81          	im 1
 1c3:	05          	add
 1c4:	72          	loadsp 8
 1c5:	05          	add
 1c6:	09          	not
 1c7:	70          	loadsp 0
 1c8:	81          	im 1
 1c9:	05          	add
 1ca:	09          	not
 1cb:	06          	and
 1cc:	0a          	flip
 1cd:	81          	im 1
 1ce:	06          	and
 1cf:	53          	storesp 12
 1d0:	51          	storesp 4
 1d1:	04          	poppc
	...

000001e0 <_neq>:
 1e0:	72          	loadsp 8
 1e1:	09          	not
 1e2:	81          	im 1
 1e3:	05          	add
 1e4:	72          	loadsp 8
 1e5:	05          	add
 1e6:	09          	not
 1e7:	70          	loadsp 0
 1e8:	81          	im 1
 1e9:	05          	add
 1ea:	09          	not
 1eb:	06          	and
 1ec:	0a          	flip
 1ed:	09          	not
 1ee:	81          	im 1
 1ef:	06          	and
 1f0:	53          	storesp 12
 1f1:	51          	storesp 4
 1f2:	04          	poppc
	...

00000200 <_neg>:
 200:	71          	loadsp 4
 201:	09          	not
 202:	81          	im 1
 203:	05          	add
 204:	52          	storesp 8
 205:	04          	poppc
	...

00000220 <_sub>:
 220:	72          	loadsp 8
 221:	72          	loadsp 8
 222:	09          	not
 223:	81          	im 1
 224:	05          	add
 225:	05          	add
 226:	53          	storesp 12
 227:	51          	storesp 4
 228:	04          	poppc
	...

00000240 <_xor>:
 240:	72          	loadsp 8
 241:	09          	not
 242:	72          	loadsp 8
 243:	06          	and
 244:	73          	loadsp 12
 245:	73          	loadsp 12
 246:	09          	not
 247:	06          	and
 248:	07          	or
 249:	53          	storesp 12
 24a:	51          	storesp 4
 24b:	04          	poppc
	...

00000260 <_loadb>:
 260:	71          	loadsp 4
 261:	fc          	im -4
 262:	06          	and
 263:	08          	load
 264:	72          	loadsp 8
 265:	83          	im 3
 266:	06          	and
 267:	09          	not
 268:	81          	im 1
 269:	05          	add
 26a:	83          	im 3
 26b:	05          	add
 26c:	10          	addsp 0
 26d:	10          	addsp 0
 26e:	10          	addsp 0
 26f:	2a          	lshiftright
 270:	81          	im 1
 271:	ff          	im -1
 272:	06          	and
 273:	52          	storesp 8
 274:	04          	poppc
	...

00000280 <_storeb>:
 280:	71          	loadsp 4
 281:	fc          	im -4
 282:	06          	and
 283:	08          	load
 284:	0b          	nop
 285:	0b          	nop
 286:	0b          	nop
 287:	92          	im 18
 288:	b8          	im 56
 289:	73          	loadsp 12
 28a:	83          	im 3
 28b:	06          	and
 28c:	10          	addsp 0
 28d:	10          	addsp 0
 28e:	05          	add
 28f:	08          	load
 290:	06          	and
 291:	0b          	nop
 292:	0b          	nop
 293:	0b          	nop
 294:	88          	im 8
 295:	a2          	im 34
 296:	04          	poppc
	...

000002a0 <_div>:
 2a0:	0b          	nop
 2a1:	0b          	nop
 2a2:	0b          	nop
 2a3:	88          	im 8
 2a4:	fe          	im -2
 2a5:	04          	poppc
	...

000002c0 <_mod>:
 2c0:	0b          	nop
 2c1:	0b          	nop
 2c2:	0b          	nop
 2c3:	88          	im 8
 2c4:	d8          	im -40
 2c5:	04          	poppc
	...

000002e0 <_eqbranch>:
 2e0:	72          	loadsp 8
 2e1:	09          	not
 2e2:	70          	loadsp 0
 2e3:	81          	im 1
 2e4:	05          	add
 2e5:	09          	not
 2e6:	06          	and
 2e7:	0a          	flip
 2e8:	81          	im 1
 2e9:	06          	and
 2ea:	ff          	im -1
 2eb:	05          	add
 2ec:	70          	loadsp 0
 2ed:	54          	storesp 16
 2ee:	71          	loadsp 4
 2ef:	06          	and
 2f0:	73          	loadsp 12
 2f1:	09          	not
 2f2:	72          	loadsp 8
 2f3:	74          	loadsp 16
 2f4:	05          	add
 2f5:	ff          	im -1
 2f6:	05          	add
 2f7:	06          	and
 2f8:	07          	or
 2f9:	51          	storesp 4
 2fa:	51          	storesp 4
 2fb:	51          	storesp 4
 2fc:	04          	poppc
 2fd:	00          	breakpoint
	...

00000300 <_neqbranch>:
 300:	72          	loadsp 8
 301:	09          	not
 302:	70          	loadsp 0
 303:	81          	im 1
 304:	05          	add
 305:	09          	not
 306:	06          	and
 307:	0a          	flip
 308:	09          	not
 309:	81          	im 1
 30a:	06          	and
 30b:	ff          	im -1
 30c:	05          	add
 30d:	70          	loadsp 0
 30e:	54          	storesp 16
 30f:	71          	loadsp 4
 310:	06          	and
 311:	73          	loadsp 12
 312:	09          	not
 313:	72          	loadsp 8
 314:	74          	loadsp 16
 315:	05          	add
 316:	ff          	im -1
 317:	05          	add
 318:	06          	and
 319:	07          	or
 31a:	51          	storesp 4
 31b:	51          	storesp 4
 31c:	51          	storesp 4
 31d:	04          	poppc
	...

00000320 <_poppcrel>:
 320:	05          	add
 321:	ff          	im -1
 322:	05          	add
 323:	04          	poppc
	...

00000340 <_config>:
 340:	81          	im 1
 341:	0b          	nop
 342:	92          	im 18
 343:	c8          	im -56
 344:	0c          	store
 345:	51          	storesp 4
 346:	04          	poppc
	...

0000035d <_pushpc>:
 35d:	71          	loadsp 4
 35e:	81          	im 1
 35f:	05          	add
 360:	52          	storesp 8
 361:	04          	poppc
	...

0000037d <_syscall_emulate>:
	...

0000039d <_pushspadd>:
 39d:	02          	pushsp
 39e:	84          	im 4
 39f:	05          	add
 3a0:	72          	loadsp 8
 3a1:	10          	addsp 0
 3a2:	10          	addsp 0
 3a3:	05          	add
 3a4:	52          	storesp 8
 3a5:	04          	poppc
	...

000003bd <_halfmult>:
	...

000003dd <_callpcrel>:
 3dd:	71          	loadsp 4
 3de:	71          	loadsp 4
 3df:	05          	add
 3e0:	ff          	im -1
 3e1:	05          	add
 3e2:	71          	loadsp 4
 3e3:	53          	storesp 12
 3e4:	51          	storesp 4
 3e5:	02          	pushsp
 3e6:	0d          	popsp
 3e7:	04          	poppc
	...
Disassembly of section .text:

00000400 <_ashiftleftBegin>:
 400:	10          	addsp 0
 401:	10          	addsp 0
 402:	10          	addsp 0
 403:	10          	addsp 0
 404:	10          	addsp 0
 405:	10          	addsp 0
 406:	10          	addsp 0
 407:	10          	addsp 0
 408:	10          	addsp 0
 409:	10          	addsp 0
 40a:	10          	addsp 0
 40b:	10          	addsp 0
 40c:	10          	addsp 0
 40d:	10          	addsp 0
 40e:	10          	addsp 0
 40f:	10          	addsp 0
 410:	10          	addsp 0
 411:	10          	addsp 0
 412:	10          	addsp 0
 413:	10          	addsp 0
 414:	10          	addsp 0
 415:	10          	addsp 0
 416:	10          	addsp 0
 417:	10          	addsp 0
 418:	10          	addsp 0
 419:	10          	addsp 0
 41a:	10          	addsp 0
 41b:	10          	addsp 0
 41c:	10          	addsp 0
 41d:	10          	addsp 0
 41e:	10          	addsp 0

0000041f <_ashiftleftEnd>:
 41f:	53          	storesp 12
 420:	51          	storesp 4
 421:	04          	poppc

00000422 <_storebtail>:
 422:	73          	loadsp 12
 423:	81          	im 1
 424:	ff          	im -1
 425:	06          	and
 426:	73          	loadsp 12
 427:	83          	im 3
 428:	06          	and
 429:	09          	not
 42a:	81          	im 1
 42b:	05          	add
 42c:	83          	im 3
 42d:	05          	add
 42e:	10          	addsp 0
 42f:	10          	addsp 0
 430:	10          	addsp 0
 431:	2b          	ashiftleft
 432:	07          	or
 433:	72          	loadsp 8
 434:	fc          	im -4
 435:	06          	and
 436:	0c          	store
 437:	51          	storesp 4
 438:	51          	storesp 4
 439:	04          	poppc

0000043a <_syscall>:
 43a:	3c          	syscall
 43b:	04          	poppc

0000043c <_slowmultImpl>:
 43c:	72          	loadsp 8
 43d:	72          	loadsp 8
 43e:	80          	im 0
 43f:	72          	loadsp 8
 440:	81          	im 1
 441:	06          	and
 442:	ff          	im -1
 443:	05          	add
 444:	09          	not
 445:	72          	loadsp 8
 446:	06          	and
 447:	05          	add
 448:	71          	loadsp 4
 449:	10          	addsp 0
 44a:	52          	storesp 8
 44b:	72          	loadsp 8
 44c:	0a          	flip
 44d:	10          	addsp 0
 44e:	0a          	flip
 44f:	53          	storesp 12
 450:	72          	loadsp 8
 451:	ed          	im -19
 452:	38          	neqbranch
 453:	51          	storesp 4
 454:	51          	storesp 4
 455:	53          	storesp 12
 456:	51          	storesp 4
 457:	04          	poppc

00000458 <___mod>:
 458:	83          	im 3
 459:	e0          	im -32
 45a:	80          	im 0
 45b:	08          	load
 45c:	83          	im 3
 45d:	e0          	im -32
 45e:	84          	im 4
 45f:	08          	load
 460:	83          	im 3
 461:	e0          	im -32
 462:	88          	im 8
 463:	08          	load
 464:	75          	loadsp 20
 465:	75          	loadsp 20
 466:	8f          	im 15
 467:	82          	im 2
 468:	2d          	call
 469:	50          	storesp 0
 46a:	50          	storesp 0
 46b:	83          	im 3
 46c:	e0          	im -32
 46d:	80          	im 0
 46e:	08          	load
 46f:	56          	storesp 24
 470:	83          	im 3
 471:	e0          	im -32
 472:	88          	im 8
 473:	0c          	store
 474:	83          	im 3
 475:	e0          	im -32
 476:	84          	im 4
 477:	0c          	store
 478:	83          	im 3
 479:	e0          	im -32
 47a:	80          	im 0
 47b:	0c          	store
 47c:	51          	storesp 4
 47d:	04          	poppc

0000047e <___div>:
 47e:	83          	im 3
 47f:	e0          	im -32
 480:	80          	im 0
 481:	08          	load
 482:	83          	im 3
 483:	e0          	im -32
 484:	84          	im 4
 485:	08          	load
 486:	83          	im 3
 487:	e0          	im -32
 488:	88          	im 8
 489:	08          	load
 48a:	75          	loadsp 20
 48b:	75          	loadsp 20
 48c:	8d          	im 13
 48d:	96          	im 22
 48e:	2d          	call
 48f:	50          	storesp 0
 490:	50          	storesp 0
 491:	83          	im 3
 492:	e0          	im -32
 493:	80          	im 0
 494:	08          	load
 495:	56          	storesp 24
 496:	83          	im 3
 497:	e0          	im -32
 498:	88          	im 8
 499:	0c          	store
 49a:	83          	im 3
 49b:	e0          	im -32
 49c:	84          	im 4
 49d:	0c          	store
 49e:	83          	im 3
 49f:	e0          	im -32
 4a0:	80          	im 0
 4a1:	0c          	store
 4a2:	51          	storesp 4
 4a3:	04          	poppc
	...

000004a6 <_boot>:
 4a6:	80          	im 0
 4a7:	04          	poppc

000004a8 <_break>:
 4a8:	89          	im 9
 4a9:	a8          	im 40
 4aa:	04          	poppc

000004ab <_premain>:
 4ab:	89          	im 9
 4ac:	a8          	im 40
 4ad:	0b          	nop
 4ae:	8c          	im 12
 4af:	d8          	im -40
 4b0:	04          	poppc

000004b1 <wait_us>:
#include "led.h"

void
wait_us(int unsigned num)
{
 4b1:	83          	im 3
 4b2:	e0          	im -32
 4b3:	8c          	im 12
 4b4:	08          	load
 4b5:	02          	pushsp
 4b6:	83          	im 3
 4b7:	e0          	im -32
 4b8:	8c          	im 12
 4b9:	0c          	store
 4ba:	fe          	im -2
 4bb:	3d          	pushspadd
 4bc:	0d          	popsp

000004bd <.LM2>:
	// 28ish
	int unsigned cycles = num*28;
 4bd:	83          	im 3
 4be:	e0          	im -32
 4bf:	8c          	im 12
 4c0:	08          	load
 4c1:	88          	im 8
 4c2:	05          	add
 4c3:	08          	load
 4c4:	70          	loadsp 0
 4c5:	70          	loadsp 0
 4c6:	83          	im 3
 4c7:	2b          	ashiftleft
 4c8:	70          	loadsp 0
 4c9:	73          	loadsp 12
 4ca:	31          	sub
 4cb:	70          	loadsp 0
 4cc:	82          	im 2
 4cd:	2b          	ashiftleft
 4ce:	70          	loadsp 0
 4cf:	83          	im 3
 4d0:	e0          	im -32
 4d1:	8c          	im 12
 4d2:	08          	load
 4d3:	fc          	im -4
 4d4:	05          	add
 4d5:	0c          	store

000004d6 <.LM3>:
	*zpu_pause = cycles;
 4d6:	92          	im 18
 4d7:	d4          	im -44
 4d8:	08          	load
 4d9:	83          	im 3
 4da:	e0          	im -32
 4db:	8c          	im 12
 4dc:	08          	load
 4dd:	fc          	im -4
 4de:	05          	add
 4df:	08          	load
 4e0:	71          	loadsp 4
 4e1:	0c          	store
 4e2:	51          	storesp 4
 4e3:	51          	storesp 4
 4e4:	51          	storesp 4
 4e5:	51          	storesp 4
 4e6:	52          	storesp 8
 4e7:	52          	storesp 8

000004e8 <.LM4>:
}
 4e8:	84          	im 4
 4e9:	3d          	pushspadd
 4ea:	0d          	popsp
 4eb:	83          	im 3
 4ec:	e0          	im -32
 4ed:	8c          	im 12
 4ee:	0c          	store
 4ef:	04          	poppc

000004f0 <clear_64k_ram>:

void clear_64k_ram()
{
 4f0:	83          	im 3
 4f1:	e0          	im -32
 4f2:	8c          	im 12
 4f3:	08          	load
 4f4:	02          	pushsp
 4f5:	83          	im 3
 4f6:	e0          	im -32
 4f7:	8c          	im 12
 4f8:	0c          	store
 4f9:	ff          	im -1
 4fa:	3d          	pushspadd
 4fb:	0d          	popsp

000004fc <.LM6>:
	int i=0;
 4fc:	80          	im 0
 4fd:	0b          	nop
 4fe:	83          	im 3
 4ff:	e0          	im -32
 500:	8c          	im 12
 501:	08          	load
 502:	fc          	im -4
 503:	05          	add
 504:	0c          	store

00000505 <.LM7>:
	// sdram from 8MB to 16MB
	// sram from 0x200000 

	*zpu_ledr = 0xf0f0f0f0;
 505:	92          	im 18
 506:	e4          	im -28
 507:	08          	load
 508:	51          	storesp 4
 509:	ff          	im -1
 50a:	87          	im 7
 50b:	c3          	im -61
 50c:	e1          	im -31
 50d:	f0          	im -16
 50e:	71          	loadsp 4
 50f:	0c          	store

00000510 <.LM8>:
	*zpu_ledg = 0x0;
 510:	92          	im 18
 511:	e0          	im -32
 512:	08          	load
 513:	51          	storesp 4
 514:	80          	im 0
 515:	71          	loadsp 4
 516:	0c          	store

00000517 <.LM9>:
	//wait_us(200000);
	
	for (i=0x200000; i!=0x210000; i+=1)
 517:	88          	im 8
 518:	80          	im 0
 519:	0a          	flip
 51a:	0b          	nop
 51b:	83          	im 3
 51c:	e0          	im -32
 51d:	8c          	im 12
 51e:	08          	load
 51f:	fc          	im -4
 520:	05          	add
 521:	0c          	store

00000522 <.L3>:
 522:	83          	im 3
 523:	e0          	im -32
 524:	8c          	im 12
 525:	08          	load
 526:	fc          	im -4
 527:	05          	add
 528:	08          	load
 529:	81          	im 1
 52a:	84          	im 4
 52b:	80          	im 0
 52c:	80          	im 0
 52d:	2e          	eq
 52e:	9e          	im 30
 52f:	38          	neqbranch

00000530 <.LM10>:
	{
		// TODO - use short!
		*(unsigned char volatile *)(i) = 0x0000;
 530:	83          	im 3
 531:	e0          	im -32
 532:	8c          	im 12
 533:	08          	load
 534:	fc          	im -4
 535:	05          	add
 536:	08          	load
 537:	51          	storesp 4
 538:	80          	im 0
 539:	71          	loadsp 4
 53a:	34          	storeb

0000053b <.LM11>:
 53b:	83          	im 3
 53c:	e0          	im -32
 53d:	8c          	im 12
 53e:	08          	load
 53f:	fc          	im -4
 540:	05          	add
 541:	08          	load
 542:	81          	im 1
 543:	05          	add
 544:	83          	im 3
 545:	e0          	im -32
 546:	8c          	im 12
 547:	08          	load
 548:	fc          	im -4
 549:	05          	add
 54a:	0c          	store
 54b:	d6          	im -42
 54c:	39          	poppcrel

0000054d <.L4>:
	}

	*zpu_ledr = 0x55555555;
 54d:	92          	im 18
 54e:	e4          	im -28
 54f:	08          	load
 550:	51          	storesp 4
 551:	85          	im 5
 552:	aa          	im 42
 553:	d5          	im -43
 554:	aa          	im 42
 555:	d5          	im -43
 556:	71          	loadsp 4
 557:	0c          	store

00000558 <.LM13>:
	*zpu_ledg = 0x55555555;
 558:	92          	im 18
 559:	e0          	im -32
 55a:	08          	load
 55b:	51          	storesp 4
 55c:	85          	im 5
 55d:	aa          	im 42
 55e:	d5          	im -43
 55f:	aa          	im 42
 560:	d5          	im -43
 561:	71          	loadsp 4
 562:	0c          	store

00000563 <.LM14>:

	for (i=0x800000; i!=0x810000; i+=4)
 563:	82          	im 2
 564:	80          	im 0
 565:	0a          	flip
 566:	0b          	nop
 567:	83          	im 3
 568:	e0          	im -32
 569:	8c          	im 12
 56a:	08          	load
 56b:	fc          	im -4
 56c:	05          	add
 56d:	0c          	store

0000056e <.L6>:
 56e:	83          	im 3
 56f:	e0          	im -32
 570:	8c          	im 12
 571:	08          	load
 572:	fc          	im -4
 573:	05          	add
 574:	08          	load
 575:	84          	im 4
 576:	84          	im 4
 577:	80          	im 0
 578:	80          	im 0
 579:	2e          	eq
 57a:	9e          	im 30
 57b:	38          	neqbranch

0000057c <.LM15>:
	{
		*(unsigned int volatile *)(i) = 0x00000000;
 57c:	83          	im 3
 57d:	e0          	im -32
 57e:	8c          	im 12
 57f:	08          	load
 580:	fc          	im -4
 581:	05          	add
 582:	08          	load
 583:	51          	storesp 4
 584:	80          	im 0
 585:	71          	loadsp 4
 586:	0c          	store

00000587 <.LM16>:
 587:	83          	im 3
 588:	e0          	im -32
 589:	8c          	im 12
 58a:	08          	load
 58b:	fc          	im -4
 58c:	05          	add
 58d:	08          	load
 58e:	84          	im 4
 58f:	05          	add
 590:	83          	im 3
 591:	e0          	im -32
 592:	8c          	im 12
 593:	08          	load
 594:	fc          	im -4
 595:	05          	add
 596:	0c          	store
 597:	d6          	im -42
 598:	39          	poppcrel

00000599 <.L7>:
	}

	*zpu_ledr = 0;
 599:	92          	im 18
 59a:	e4          	im -28
 59b:	08          	load
 59c:	51          	storesp 4
 59d:	80          	im 0
 59e:	71          	loadsp 4
 59f:	0c          	store

000005a0 <.LM18>:
	*zpu_ledg = 0xf0f0f0f0;
 5a0:	92          	im 18
 5a1:	e0          	im -32
 5a2:	08          	load
 5a3:	51          	storesp 4
 5a4:	ff          	im -1
 5a5:	87          	im 7
 5a6:	c3          	im -61
 5a7:	e1          	im -31
 5a8:	f0          	im -16
 5a9:	71          	loadsp 4
 5aa:	0c          	store

000005ab <.LM19>:
	//wait_us(200000);
	return;
}
 5ab:	83          	im 3
 5ac:	3d          	pushspadd
 5ad:	0d          	popsp
 5ae:	83          	im 3
 5af:	e0          	im -32
 5b0:	8c          	im 12
 5b1:	0c          	store
 5b2:	04          	poppc

000005b3 <reset_6502>:

void reset_6502(unsigned int reset_n)
{
 5b3:	83          	im 3
 5b4:	e0          	im -32
 5b5:	8c          	im 12
 5b6:	08          	load
 5b7:	02          	pushsp
 5b8:	83          	im 3
 5b9:	e0          	im -32
 5ba:	8c          	im 12
 5bb:	0c          	store
 5bc:	fe          	im -2
 5bd:	3d          	pushspadd
 5be:	0d          	popsp

000005bf <.LM21>:
	int prev = *zpu_config;
 5bf:	92          	im 18
 5c0:	d0          	im -48
 5c1:	08          	load
 5c2:	70          	loadsp 0
 5c3:	08          	load
 5c4:	83          	im 3
 5c5:	e0          	im -32
 5c6:	8c          	im 12
 5c7:	08          	load
 5c8:	fc          	im -4
 5c9:	05          	add
 5ca:	0c          	store
 5cb:	51          	storesp 4

000005cc <.LM22>:
	if (reset_n == 1)
 5cc:	83          	im 3
 5cd:	e0          	im -32
 5ce:	8c          	im 12
 5cf:	08          	load
 5d0:	88          	im 8
 5d1:	05          	add
 5d2:	08          	load
 5d3:	81          	im 1
 5d4:	2e          	eq
 5d5:	09          	not
 5d6:	81          	im 1
 5d7:	06          	and
 5d8:	95          	im 21
 5d9:	38          	neqbranch

000005da <.LM23>:
		*zpu_config = prev&~(1<<7);
 5da:	92          	im 18
 5db:	d0          	im -48
 5dc:	08          	load
 5dd:	83          	im 3
 5de:	e0          	im -32
 5df:	8c          	im 12
 5e0:	08          	load
 5e1:	fc          	im -4
 5e2:	05          	add
 5e3:	08          	load
 5e4:	fe          	im -2
 5e5:	ff          	im -1
 5e6:	06          	and
 5e7:	70          	loadsp 0
 5e8:	72          	loadsp 8
 5e9:	0c          	store
 5ea:	52          	storesp 8
 5eb:	52          	storesp 8
 5ec:	93          	im 19
 5ed:	39          	poppcrel

000005ee <.L10>:
	else
		*zpu_config = prev|(1<<7);
 5ee:	92          	im 18
 5ef:	d0          	im -48
 5f0:	08          	load
 5f1:	83          	im 3
 5f2:	e0          	im -32
 5f3:	8c          	im 12
 5f4:	08          	load
 5f5:	fc          	im -4
 5f6:	05          	add
 5f7:	08          	load
 5f8:	81          	im 1
 5f9:	80          	im 0
 5fa:	07          	or
 5fb:	70          	loadsp 0
 5fc:	72          	loadsp 8
 5fd:	0c          	store
 5fe:	52          	storesp 8
 5ff:	52          	storesp 8

00000600 <.L9>:
	// USES ASHIFTLEFT even with it disabled!! *reset_6502 = reset_n<<7;
}
 600:	84          	im 4
 601:	3d          	pushspadd
 602:	0d          	popsp
 603:	83          	im 3
 604:	e0          	im -32
 605:	8c          	im 12
 606:	0c          	store
 607:	04          	poppc

00000608 <pause_6502>:

void pause_6502(unsigned int pause)
{
 608:	83          	im 3
 609:	e0          	im -32
 60a:	8c          	im 12
 60b:	08          	load
 60c:	02          	pushsp
 60d:	83          	im 3
 60e:	e0          	im -32
 60f:	8c          	im 12
 610:	0c          	store
 611:	fe          	im -2
 612:	3d          	pushspadd
 613:	0d          	popsp

00000614 <.LM27>:
	int prev = *zpu_config;
 614:	92          	im 18
 615:	d0          	im -48
 616:	08          	load
 617:	70          	loadsp 0
 618:	08          	load
 619:	83          	im 3
 61a:	e0          	im -32
 61b:	8c          	im 12
 61c:	08          	load
 61d:	fc          	im -4
 61e:	05          	add
 61f:	0c          	store
 620:	51          	storesp 4

00000621 <.LM28>:
	if (pause == 0)
 621:	83          	im 3
 622:	e0          	im -32
 623:	8c          	im 12
 624:	08          	load
 625:	88          	im 8
 626:	05          	add
 627:	08          	load
 628:	95          	im 21
 629:	38          	neqbranch

0000062a <.LM29>:
		*zpu_config = prev&~(1<<6);
 62a:	92          	im 18
 62b:	d0          	im -48
 62c:	08          	load
 62d:	83          	im 3
 62e:	e0          	im -32
 62f:	8c          	im 12
 630:	08          	load
 631:	fc          	im -4
 632:	05          	add
 633:	08          	load
 634:	ff          	im -1
 635:	bf          	im 63
 636:	06          	and
 637:	70          	loadsp 0
 638:	72          	loadsp 8
 639:	0c          	store
 63a:	52          	storesp 8
 63b:	52          	storesp 8
 63c:	93          	im 19
 63d:	39          	poppcrel

0000063e <.L13>:
	else
		*zpu_config = prev|(1<<6);
 63e:	92          	im 18
 63f:	d0          	im -48
 640:	08          	load
 641:	83          	im 3
 642:	e0          	im -32
 643:	8c          	im 12
 644:	08          	load
 645:	fc          	im -4
 646:	05          	add
 647:	08          	load
 648:	80          	im 0
 649:	c0          	im -64
 64a:	07          	or
 64b:	70          	loadsp 0
 64c:	72          	loadsp 8
 64d:	0c          	store
 64e:	52          	storesp 8
 64f:	52          	storesp 8

00000650 <.L12>:
	// USES ASHIFTLEFT even with it disabled!! *reset_6502 = reset_n<<7;
}
 650:	84          	im 4
 651:	3d          	pushspadd
 652:	0d          	popsp
 653:	83          	im 3
 654:	e0          	im -32
 655:	8c          	im 12
 656:	0c          	store
 657:	04          	poppc

00000658 <main>:

int main(void)
{
 658:	83          	im 3
 659:	e0          	im -32
 65a:	8c          	im 12
 65b:	08          	load
 65c:	02          	pushsp
 65d:	83          	im 3
 65e:	e0          	im -32
 65f:	8c          	im 12
 660:	0c          	store
 661:	fd          	im -3
 662:	3d          	pushspadd
 663:	0d          	popsp

00000664 <.LM33>:
	unsigned int i=0;
 664:	80          	im 0
 665:	0b          	nop
 666:	83          	im 3
 667:	e0          	im -32
 668:	8c          	im 12
 669:	08          	load
 66a:	fc          	im -4
 66b:	05          	add
 66c:	0c          	store

0000066d <.LM34>:
	unsigned char temp = 0;
 66d:	80          	im 0
 66e:	0b          	nop
 66f:	83          	im 3
 670:	e0          	im -32
 671:	8c          	im 12
 672:	08          	load
 673:	f8          	im -8
 674:	05          	add
 675:	34          	storeb

00000676 <.LM35>:
	pause_6502(1);
 676:	81          	im 1
 677:	51          	storesp 4
 678:	ff          	im -1
 679:	8e          	im 14
 67a:	3f          	callpcrel

0000067b <.LM36>:

		//wait_us(200000);
		reset_6502(0);
 67b:	80          	im 0
 67c:	51          	storesp 4
 67d:	fe          	im -2
 67e:	b4          	im 52
 67f:	3f          	callpcrel

00000680 <.LM37>:
		*atari_nmien = 0x00;
 680:	93          	im 19
 681:	b4          	im 52
 682:	08          	load
 683:	52          	storesp 8
 684:	80          	im 0
 685:	72          	loadsp 8
 686:	34          	storeb

00000687 <.LM38>:
		clear_64k_ram();
 687:	fc          	im -4
 688:	e7          	im -25
 689:	3f          	callpcrel

0000068a <.LM39>:
		reset_6502(1);
 68a:	81          	im 1
 68b:	51          	storesp 4
 68c:	fe          	im -2
 68d:	a5          	im 37
 68e:	3f          	callpcrel

0000068f <.LM40>:
		pause_6502(0);
 68f:	80          	im 0
 690:	51          	storesp 4
 691:	fe          	im -2
 692:	f5          	im -11
 693:	3f          	callpcrel

00000694 <.L16>:
	for(;;);
 694:	ff          	im -1
 695:	39          	poppcrel

00000696 <__divsi3>:
 696:	83          	im 3
 697:	e0          	im -32
 698:	8c          	im 12
 699:	08          	load
 69a:	02          	pushsp
 69b:	83          	im 3
 69c:	e0          	im -32
 69d:	8c          	im 12
 69e:	0c          	store
 69f:	f9          	im -7
 6a0:	3d          	pushspadd
 6a1:	0d          	popsp
 6a2:	80          	im 0
 6a3:	0b          	nop
 6a4:	83          	im 3
 6a5:	e0          	im -32
 6a6:	8c          	im 12
 6a7:	08          	load
 6a8:	fc          	im -4
 6a9:	05          	add
 6aa:	0c          	store
 6ab:	83          	im 3
 6ac:	e0          	im -32
 6ad:	8c          	im 12
 6ae:	08          	load
 6af:	88          	im 8
 6b0:	05          	add
 6b1:	08          	load
 6b2:	80          	im 0
 6b3:	25          	lessthanorequal
 6b4:	b9          	im 57
 6b5:	38          	neqbranch
 6b6:	83          	im 3
 6b7:	e0          	im -32
 6b8:	8c          	im 12
 6b9:	08          	load
 6ba:	88          	im 8
 6bb:	05          	add
 6bc:	08          	load
 6bd:	30          	neg
 6be:	83          	im 3
 6bf:	e0          	im -32
 6c0:	8c          	im 12
 6c1:	08          	load
 6c2:	88          	im 8
 6c3:	05          	add
 6c4:	0c          	store
 6c5:	80          	im 0
 6c6:	0b          	nop
 6c7:	83          	im 3
 6c8:	e0          	im -32
 6c9:	8c          	im 12
 6ca:	08          	load
 6cb:	f4          	im -12
 6cc:	05          	add
 6cd:	0c          	store
 6ce:	83          	im 3
 6cf:	e0          	im -32
 6d0:	8c          	im 12
 6d1:	08          	load
 6d2:	fc          	im -4
 6d3:	05          	add
 6d4:	08          	load
 6d5:	8a          	im 10
 6d6:	38          	neqbranch
 6d7:	81          	im 1
 6d8:	0b          	nop
 6d9:	83          	im 3
 6da:	e0          	im -32
 6db:	8c          	im 12
 6dc:	08          	load
 6dd:	f4          	im -12
 6de:	05          	add
 6df:	0c          	store

000006e0 <.L3>:
 6e0:	83          	im 3
 6e1:	e0          	im -32
 6e2:	8c          	im 12
 6e3:	08          	load
 6e4:	f4          	im -12
 6e5:	05          	add
 6e6:	08          	load
 6e7:	83          	im 3
 6e8:	e0          	im -32
 6e9:	8c          	im 12
 6ea:	08          	load
 6eb:	fc          	im -4
 6ec:	05          	add
 6ed:	0c          	store

000006ee <.L2>:
 6ee:	83          	im 3
 6ef:	e0          	im -32
 6f0:	8c          	im 12
 6f1:	08          	load
 6f2:	8c          	im 12
 6f3:	05          	add
 6f4:	08          	load
 6f5:	80          	im 0
 6f6:	25          	lessthanorequal
 6f7:	b9          	im 57
 6f8:	38          	neqbranch
 6f9:	83          	im 3
 6fa:	e0          	im -32
 6fb:	8c          	im 12
 6fc:	08          	load
 6fd:	8c          	im 12
 6fe:	05          	add
 6ff:	08          	load
 700:	30          	neg
 701:	83          	im 3
 702:	e0          	im -32
 703:	8c          	im 12
 704:	08          	load
 705:	8c          	im 12
 706:	05          	add
 707:	0c          	store
 708:	80          	im 0
 709:	0b          	nop
 70a:	83          	im 3
 70b:	e0          	im -32
 70c:	8c          	im 12
 70d:	08          	load
 70e:	f0          	im -16
 70f:	05          	add
 710:	0c          	store
 711:	83          	im 3
 712:	e0          	im -32
 713:	8c          	im 12
 714:	08          	load
 715:	fc          	im -4
 716:	05          	add
 717:	08          	load
 718:	8a          	im 10
 719:	38          	neqbranch
 71a:	81          	im 1
 71b:	0b          	nop
 71c:	83          	im 3
 71d:	e0          	im -32
 71e:	8c          	im 12
 71f:	08          	load
 720:	f0          	im -16
 721:	05          	add
 722:	0c          	store

00000723 <.L5>:
 723:	83          	im 3
 724:	e0          	im -32
 725:	8c          	im 12
 726:	08          	load
 727:	f0          	im -16
 728:	05          	add
 729:	08          	load
 72a:	83          	im 3
 72b:	e0          	im -32
 72c:	8c          	im 12
 72d:	08          	load
 72e:	fc          	im -4
 72f:	05          	add
 730:	0c          	store

00000731 <.L4>:
 731:	80          	im 0
 732:	53          	storesp 12
 733:	83          	im 3
 734:	e0          	im -32
 735:	8c          	im 12
 736:	08          	load
 737:	8c          	im 12
 738:	05          	add
 739:	08          	load
 73a:	52          	storesp 8
 73b:	83          	im 3
 73c:	e0          	im -32
 73d:	8c          	im 12
 73e:	08          	load
 73f:	88          	im 8
 740:	05          	add
 741:	08          	load
 742:	51          	storesp 4
 743:	81          	im 1
 744:	df          	im -33
 745:	3f          	callpcrel
 746:	83          	im 3
 747:	e0          	im -32
 748:	80          	im 0
 749:	08          	load
 74a:	70          	loadsp 0
 74b:	83          	im 3
 74c:	e0          	im -32
 74d:	8c          	im 12
 74e:	08          	load
 74f:	f8          	im -8
 750:	05          	add
 751:	0c          	store
 752:	54          	storesp 16
 753:	83          	im 3
 754:	e0          	im -32
 755:	8c          	im 12
 756:	08          	load
 757:	fc          	im -4
 758:	05          	add
 759:	08          	load
 75a:	80          	im 0
 75b:	2e          	eq
 75c:	90          	im 16
 75d:	38          	neqbranch
 75e:	83          	im 3
 75f:	e0          	im -32
 760:	8c          	im 12
 761:	08          	load
 762:	f8          	im -8
 763:	05          	add
 764:	08          	load
 765:	30          	neg
 766:	83          	im 3
 767:	e0          	im -32
 768:	8c          	im 12
 769:	08          	load
 76a:	f8          	im -8
 76b:	05          	add
 76c:	0c          	store

0000076d <.L6>:
 76d:	83          	im 3
 76e:	e0          	im -32
 76f:	8c          	im 12
 770:	08          	load
 771:	f8          	im -8
 772:	05          	add
 773:	08          	load
 774:	70          	loadsp 0
 775:	83          	im 3
 776:	e0          	im -32
 777:	80          	im 0
 778:	0c          	store
 779:	54          	storesp 16
 77a:	89          	im 9
 77b:	3d          	pushspadd
 77c:	0d          	popsp
 77d:	83          	im 3
 77e:	e0          	im -32
 77f:	8c          	im 12
 780:	0c          	store
 781:	04          	poppc

00000782 <__modsi3>:
 782:	83          	im 3
 783:	e0          	im -32
 784:	8c          	im 12
 785:	08          	load
 786:	02          	pushsp
 787:	83          	im 3
 788:	e0          	im -32
 789:	8c          	im 12
 78a:	0c          	store
 78b:	fb          	im -5
 78c:	3d          	pushspadd
 78d:	0d          	popsp
 78e:	80          	im 0
 78f:	0b          	nop
 790:	83          	im 3
 791:	e0          	im -32
 792:	8c          	im 12
 793:	08          	load
 794:	fc          	im -4
 795:	05          	add
 796:	0c          	store
 797:	83          	im 3
 798:	e0          	im -32
 799:	8c          	im 12
 79a:	08          	load
 79b:	88          	im 8
 79c:	05          	add
 79d:	08          	load
 79e:	80          	im 0
 79f:	25          	lessthanorequal
 7a0:	99          	im 25
 7a1:	38          	neqbranch
 7a2:	83          	im 3
 7a3:	e0          	im -32
 7a4:	8c          	im 12
 7a5:	08          	load
 7a6:	88          	im 8
 7a7:	05          	add
 7a8:	08          	load
 7a9:	30          	neg
 7aa:	83          	im 3
 7ab:	e0          	im -32
 7ac:	8c          	im 12
 7ad:	08          	load
 7ae:	88          	im 8
 7af:	05          	add
 7b0:	0c          	store
 7b1:	81          	im 1
 7b2:	0b          	nop
 7b3:	83          	im 3
 7b4:	e0          	im -32
 7b5:	8c          	im 12
 7b6:	08          	load
 7b7:	fc          	im -4
 7b8:	05          	add
 7b9:	0c          	store

000007ba <.L8>:
 7ba:	83          	im 3
 7bb:	e0          	im -32
 7bc:	8c          	im 12
 7bd:	08          	load
 7be:	8c          	im 12
 7bf:	05          	add
 7c0:	08          	load
 7c1:	80          	im 0
 7c2:	25          	lessthanorequal
 7c3:	90          	im 16
 7c4:	38          	neqbranch
 7c5:	83          	im 3
 7c6:	e0          	im -32
 7c7:	8c          	im 12
 7c8:	08          	load
 7c9:	8c          	im 12
 7ca:	05          	add
 7cb:	08          	load
 7cc:	30          	neg
 7cd:	83          	im 3
 7ce:	e0          	im -32
 7cf:	8c          	im 12
 7d0:	08          	load
 7d1:	8c          	im 12
 7d2:	05          	add
 7d3:	0c          	store

000007d4 <.L9>:
 7d4:	81          	im 1
 7d5:	53          	storesp 12
 7d6:	83          	im 3
 7d7:	e0          	im -32
 7d8:	8c          	im 12
 7d9:	08          	load
 7da:	8c          	im 12
 7db:	05          	add
 7dc:	08          	load
 7dd:	52          	storesp 8
 7de:	83          	im 3
 7df:	e0          	im -32
 7e0:	8c          	im 12
 7e1:	08          	load
 7e2:	88          	im 8
 7e3:	05          	add
 7e4:	08          	load
 7e5:	51          	storesp 4
 7e6:	bd          	im 61
 7e7:	3f          	callpcrel
 7e8:	83          	im 3
 7e9:	e0          	im -32
 7ea:	80          	im 0
 7eb:	08          	load
 7ec:	70          	loadsp 0
 7ed:	83          	im 3
 7ee:	e0          	im -32
 7ef:	8c          	im 12
 7f0:	08          	load
 7f1:	f8          	im -8
 7f2:	05          	add
 7f3:	0c          	store
 7f4:	54          	storesp 16
 7f5:	83          	im 3
 7f6:	e0          	im -32
 7f7:	8c          	im 12
 7f8:	08          	load
 7f9:	fc          	im -4
 7fa:	05          	add
 7fb:	08          	load
 7fc:	80          	im 0
 7fd:	2e          	eq
 7fe:	90          	im 16
 7ff:	38          	neqbranch
 800:	83          	im 3
 801:	e0          	im -32
 802:	8c          	im 12
 803:	08          	load
 804:	f8          	im -8
 805:	05          	add
 806:	08          	load
 807:	30          	neg
 808:	83          	im 3
 809:	e0          	im -32
 80a:	8c          	im 12
 80b:	08          	load
 80c:	f8          	im -8
 80d:	05          	add
 80e:	0c          	store

0000080f <.L10>:
 80f:	83          	im 3
 810:	e0          	im -32
 811:	8c          	im 12
 812:	08          	load
 813:	f8          	im -8
 814:	05          	add
 815:	08          	load
 816:	70          	loadsp 0
 817:	83          	im 3
 818:	e0          	im -32
 819:	80          	im 0
 81a:	0c          	store
 81b:	54          	storesp 16
 81c:	87          	im 7
 81d:	3d          	pushspadd
 81e:	0d          	popsp
 81f:	83          	im 3
 820:	e0          	im -32
 821:	8c          	im 12
 822:	0c          	store
 823:	04          	poppc

00000824 <udivmodsi4>:
 824:	83          	im 3
 825:	e0          	im -32
 826:	8c          	im 12
 827:	08          	load
 828:	02          	pushsp
 829:	83          	im 3
 82a:	e0          	im -32
 82b:	8c          	im 12
 82c:	0c          	store
 82d:	fd          	im -3
 82e:	3d          	pushspadd
 82f:	0d          	popsp
 830:	81          	im 1
 831:	0b          	nop
 832:	83          	im 3
 833:	e0          	im -32
 834:	8c          	im 12
 835:	08          	load
 836:	fc          	im -4
 837:	05          	add
 838:	0c          	store
 839:	80          	im 0
 83a:	0b          	nop
 83b:	83          	im 3
 83c:	e0          	im -32
 83d:	8c          	im 12
 83e:	08          	load
 83f:	f8          	im -8
 840:	05          	add
 841:	0c          	store

00000842 <.L2>:
 842:	83          	im 3
 843:	e0          	im -32
 844:	8c          	im 12
 845:	08          	load
 846:	8c          	im 12
 847:	05          	add
 848:	08          	load
 849:	83          	im 3
 84a:	e0          	im -32
 84b:	8c          	im 12
 84c:	08          	load
 84d:	88          	im 8
 84e:	05          	add
 84f:	08          	load
 850:	27          	ulessthanorequal
 851:	b9          	im 57
 852:	38          	neqbranch
 853:	83          	im 3
 854:	e0          	im -32
 855:	8c          	im 12
 856:	08          	load
 857:	fc          	im -4
 858:	05          	add
 859:	08          	load
 85a:	80          	im 0
 85b:	2e          	eq
 85c:	ae          	im 46
 85d:	38          	neqbranch
 85e:	80          	im 0
 85f:	0b          	nop
 860:	83          	im 3
 861:	e0          	im -32
 862:	8c          	im 12
 863:	08          	load
 864:	8c          	im 12
 865:	05          	add
 866:	08          	load
 867:	24          	lessthan
 868:	a2          	im 34
 869:	38          	neqbranch
 86a:	83          	im 3
 86b:	e0          	im -32
 86c:	8c          	im 12
 86d:	08          	load
 86e:	8c          	im 12
 86f:	05          	add
 870:	08          	load
 871:	10          	addsp 0
 872:	83          	im 3
 873:	e0          	im -32
 874:	8c          	im 12
 875:	08          	load
 876:	8c          	im 12
 877:	05          	add
 878:	0c          	store
 879:	83          	im 3
 87a:	e0          	im -32
 87b:	8c          	im 12
 87c:	08          	load
 87d:	fc          	im -4
 87e:	05          	add
 87f:	08          	load
 880:	10          	addsp 0
 881:	83          	im 3
 882:	e0          	im -32
 883:	8c          	im 12
 884:	08          	load
 885:	fc          	im -4
 886:	05          	add
 887:	0c          	store
 888:	ff          	im -1
 889:	b8          	im 56
 88a:	39          	poppcrel

0000088b <.L4>:
 88b:	83          	im 3
 88c:	e0          	im -32
 88d:	8c          	im 12
 88e:	08          	load
 88f:	fc          	im -4
 890:	05          	add
 891:	08          	load
 892:	80          	im 0
 893:	2e          	eq
 894:	80          	im 0
 895:	e1          	im -31
 896:	38          	neqbranch
 897:	83          	im 3
 898:	e0          	im -32
 899:	8c          	im 12
 89a:	08          	load
 89b:	8c          	im 12
 89c:	05          	add
 89d:	08          	load
 89e:	83          	im 3
 89f:	e0          	im -32
 8a0:	8c          	im 12
 8a1:	08          	load
 8a2:	88          	im 8
 8a3:	05          	add
 8a4:	08          	load
 8a5:	26          	ulessthan
 8a6:	ad          	im 45
 8a7:	38          	neqbranch
 8a8:	83          	im 3
 8a9:	e0          	im -32
 8aa:	8c          	im 12
 8ab:	08          	load
 8ac:	88          	im 8
 8ad:	05          	add
 8ae:	08          	load
 8af:	83          	im 3
 8b0:	e0          	im -32
 8b1:	8c          	im 12
 8b2:	08          	load
 8b3:	8c          	im 12
 8b4:	05          	add
 8b5:	08          	load
 8b6:	31          	sub
 8b7:	83          	im 3
 8b8:	e0          	im -32
 8b9:	8c          	im 12
 8ba:	08          	load
 8bb:	88          	im 8
 8bc:	05          	add
 8bd:	0c          	store
 8be:	83          	im 3
 8bf:	e0          	im -32
 8c0:	8c          	im 12
 8c1:	08          	load
 8c2:	f8          	im -8
 8c3:	05          	add
 8c4:	08          	load
 8c5:	83          	im 3
 8c6:	e0          	im -32
 8c7:	8c          	im 12
 8c8:	08          	load
 8c9:	fc          	im -4
 8ca:	05          	add
 8cb:	08          	load
 8cc:	07          	or
 8cd:	83          	im 3
 8ce:	e0          	im -32
 8cf:	8c          	im 12
 8d0:	08          	load
 8d1:	f8          	im -8
 8d2:	05          	add
 8d3:	0c          	store

000008d4 <.L6>:
 8d4:	83          	im 3
 8d5:	e0          	im -32
 8d6:	8c          	im 12
 8d7:	08          	load
 8d8:	fc          	im -4
 8d9:	05          	add
 8da:	08          	load
 8db:	81          	im 1
 8dc:	2a          	lshiftright
 8dd:	83          	im 3
 8de:	e0          	im -32
 8df:	8c          	im 12
 8e0:	08          	load
 8e1:	fc          	im -4
 8e2:	05          	add
 8e3:	0c          	store
 8e4:	83          	im 3
 8e5:	e0          	im -32
 8e6:	8c          	im 12
 8e7:	08          	load
 8e8:	8c          	im 12
 8e9:	05          	add
 8ea:	08          	load
 8eb:	81          	im 1
 8ec:	2a          	lshiftright
 8ed:	83          	im 3
 8ee:	e0          	im -32
 8ef:	8c          	im 12
 8f0:	08          	load
 8f1:	8c          	im 12
 8f2:	05          	add
 8f3:	0c          	store
 8f4:	ff          	im -1
 8f5:	95          	im 21
 8f6:	39          	poppcrel

000008f7 <.L5>:
 8f7:	83          	im 3
 8f8:	e0          	im -32
 8f9:	8c          	im 12
 8fa:	08          	load
 8fb:	90          	im 16
 8fc:	05          	add
 8fd:	08          	load
 8fe:	80          	im 0
 8ff:	2e          	eq
 900:	93          	im 19
 901:	38          	neqbranch
 902:	83          	im 3
 903:	e0          	im -32
 904:	8c          	im 12
 905:	08          	load
 906:	88          	im 8
 907:	05          	add
 908:	08          	load
 909:	70          	loadsp 0
 90a:	83          	im 3
 90b:	e0          	im -32
 90c:	8c          	im 12
 90d:	08          	load
 90e:	f4          	im -12
 90f:	05          	add
 910:	0c          	store
 911:	51          	storesp 4
 912:	91          	im 17
 913:	39          	poppcrel

00000914 <.L7>:
 914:	83          	im 3
 915:	e0          	im -32
 916:	8c          	im 12
 917:	08          	load
 918:	f8          	im -8
 919:	05          	add
 91a:	08          	load
 91b:	70          	loadsp 0
 91c:	83          	im 3
 91d:	e0          	im -32
 91e:	8c          	im 12
 91f:	08          	load
 920:	f4          	im -12
 921:	05          	add
 922:	0c          	store
 923:	51          	storesp 4

00000924 <.L1>:
 924:	83          	im 3
 925:	e0          	im -32
 926:	8c          	im 12
 927:	08          	load
 928:	f4          	im -12
 929:	05          	add
 92a:	08          	load
 92b:	83          	im 3
 92c:	e0          	im -32
 92d:	80          	im 0
 92e:	0c          	store
 92f:	85          	im 5
 930:	3d          	pushspadd
 931:	0d          	popsp
 932:	83          	im 3
 933:	e0          	im -32
 934:	8c          	im 12
 935:	0c          	store
 936:	04          	poppc
Disassembly of section .rodata:

00000938 <_mask>:
 938:	00          	breakpoint
 939:	ff          	im -1
 93a:	ff          	im -1
 93b:	ff          	im -1
 93c:	ff          	im -1
 93d:	00          	breakpoint
 93e:	ff          	im -1
 93f:	ff          	im -1
 940:	ff          	im -1
 941:	ff          	im -1
 942:	00          	breakpoint
 943:	ff          	im -1
 944:	ff          	im -1
 945:	ff          	im -1
 946:	ff          	im -1
	...
Disassembly of section .data:

00000948 <_data>:
 948:	00          	breakpoint
 949:	00          	breakpoint
	...

0000094c <_cpu_config>:
 94c:	00          	breakpoint
 94d:	00          	breakpoint
	...

00000950 <zpu_config>:
 950:	00          	breakpoint
 951:	04          	poppc
	...

00000954 <zpu_pause>:
 954:	00          	breakpoint
 955:	04          	poppc
 956:	00          	breakpoint
 957:	04          	poppc

00000958 <zpu_switches>:
 958:	00          	breakpoint
 959:	04          	poppc
 95a:	00          	breakpoint
 95b:	08          	load

0000095c <zpu_key>:
 95c:	00          	breakpoint
 95d:	04          	poppc
 95e:	00          	breakpoint
 95f:	0c          	store

00000960 <zpu_ledg>:
 960:	00          	breakpoint
 961:	04          	poppc
 962:	00          	breakpoint
 963:	10          	addsp 0

00000964 <zpu_ledr>:
 964:	00          	breakpoint
 965:	04          	poppc
 966:	00          	breakpoint
 967:	14          	addsp 16

00000968 <zpu_spi_data>:
 968:	00          	breakpoint
 969:	04          	poppc
 96a:	00          	breakpoint
 96b:	18          	addsp 32

0000096c <zpu_spi_state>:
 96c:	00          	breakpoint
 96d:	04          	poppc
 96e:	00          	breakpoint
 96f:	1c          	addsp 48

00000970 <zpu_sio>:
 970:	00          	breakpoint
 971:	04          	poppc
 972:	00          	breakpoint
 973:	20          	.byte 32

00000974 <zpu_board>:
 974:	00          	breakpoint
 975:	04          	poppc
 976:	00          	breakpoint
 977:	24          	lessthan

00000978 <zpu_hex>:
 978:	00          	breakpoint
 979:	04          	poppc
 97a:	00          	breakpoint
 97b:	28          	swap

0000097c <zpu_sector>:
 97c:	00          	breakpoint
 97d:	04          	poppc
 97e:	00          	breakpoint
 97f:	2c          	ashiftright

00000980 <zpu_pokey_audf0>:
 980:	00          	breakpoint
 981:	04          	poppc
 982:	00          	breakpoint
 983:	40          	storesp 64

00000984 <zpu_pokey_audc0>:
 984:	00          	breakpoint
 985:	04          	poppc
 986:	00          	breakpoint
 987:	44          	storesp 80

00000988 <zpu_pokey_audf1>:
 988:	00          	breakpoint
 989:	04          	poppc
 98a:	00          	breakpoint
 98b:	48          	storesp 96

0000098c <zpu_pokey_audc1>:
 98c:	00          	breakpoint
 98d:	04          	poppc
 98e:	00          	breakpoint
 98f:	4c          	storesp 112

00000990 <zpu_pokey_audf2>:
 990:	00          	breakpoint
 991:	04          	poppc
 992:	00          	breakpoint
 993:	50          	storesp 0

00000994 <zpu_pokey_audc2>:
 994:	00          	breakpoint
 995:	04          	poppc
 996:	00          	breakpoint
 997:	54          	storesp 16

00000998 <zpu_pokey_audf3>:
 998:	00          	breakpoint
 999:	04          	poppc
 99a:	00          	breakpoint
 99b:	58          	storesp 32

0000099c <zpu_pokey_audc3>:
 99c:	00          	breakpoint
 99d:	04          	poppc
 99e:	00          	breakpoint
 99f:	5c          	storesp 48

000009a0 <zpu_pokey_audctl>:
 9a0:	00          	breakpoint
 9a1:	04          	poppc
 9a2:	00          	breakpoint
 9a3:	60          	loadsp 64

000009a4 <zpu_pokey_skrest>:
 9a4:	00          	breakpoint
 9a5:	04          	poppc
 9a6:	00          	breakpoint
 9a7:	68          	loadsp 96

000009a8 <zpu_pokey_serout>:
 9a8:	00          	breakpoint
 9a9:	04          	poppc
 9aa:	00          	breakpoint
 9ab:	74          	loadsp 16

000009ac <zpu_pokey_irqen>:
 9ac:	00          	breakpoint
 9ad:	04          	poppc
 9ae:	00          	breakpoint
 9af:	78          	loadsp 32

000009b0 <zpu_pokey_skctl>:
 9b0:	00          	breakpoint
 9b1:	04          	poppc
 9b2:	00          	breakpoint
 9b3:	7c          	loadsp 48

000009b4 <atari_nmien>:
 9b4:	00          	breakpoint
 9b5:	01          	.byte 1
 9b6:	d4          	im -44
 9b7:	0e          	.byte 14

000009b8 <atari_dlistl>:
 9b8:	00          	breakpoint
 9b9:	01          	.byte 1
 9ba:	d4          	im -44
 9bb:	02          	pushsp

000009bc <atari_dlisth>:
 9bc:	00          	breakpoint
 9bd:	01          	.byte 1
 9be:	d4          	im -44
 9bf:	03          	.byte 3

000009c0 <atari_colbk>:
 9c0:	00          	breakpoint
 9c1:	01          	.byte 1
 9c2:	d0          	im -48
 9c3:	1a          	addsp 40

000009c4 <atari_colpf1>:
 9c4:	00          	breakpoint
 9c5:	01          	.byte 1
 9c6:	d0          	im -48
 9c7:	17          	addsp 28

000009c8 <atari_colpf2>:
 9c8:	00          	breakpoint
 9c9:	01          	.byte 1
 9ca:	d0          	im -48
 9cb:	18          	addsp 32

000009cc <atari_prior>:
 9cc:	00          	breakpoint
 9cd:	01          	.byte 1
 9ce:	d0          	im -48
 9cf:	1b          	addsp 44

000009d0 <atari_random>:
 9d0:	00          	breakpoint
 9d1:	01          	.byte 1
 9d2:	d2          	im -46
 9d3:	0a          	flip

000009d4 <atari_porta>:
 9d4:	00          	breakpoint
 9d5:	01          	.byte 1
 9d6:	d3          	im -45
	...

000009d8 <atari_portb>:
 9d8:	00          	breakpoint
 9d9:	01          	.byte 1
 9da:	d3          	im -45
 9db:	01          	.byte 1

000009dc <atari_trig0>:
 9dc:	00          	breakpoint
 9dd:	01          	.byte 1
 9de:	d0          	im -48
 9df:	10          	addsp 0

000009e0 <atari_chbase>:
 9e0:	00          	breakpoint
 9e1:	01          	.byte 1
 9e2:	d4          	im -44
 9e3:	09          	not

000009e4 <atari_chactl>:
 9e4:	00          	breakpoint
 9e5:	01          	.byte 1
 9e6:	d4          	im -44
 9e7:	01          	.byte 1

000009e8 <atari_dmactl>:
 9e8:	00          	breakpoint
 9e9:	01          	.byte 1
 9ea:	d4          	im -44
	...

000009ec <atari_skctl>:
 9ec:	00          	breakpoint
 9ed:	01          	.byte 1
 9ee:	d2          	im -46
 9ef:	0f          	.byte 15
Disassembly of section .bss:

0000f000 <__bss_start>:
	...
Disassembly of section .debug_abbrev:

00000000 <.Ldebug_abbrev0>:
   0:	01          	.byte 1
   1:	11          	addsp 4
   2:	01          	.byte 1
   3:	10          	addsp 0
   4:	06          	and
   5:	12          	addsp 8
   6:	01          	.byte 1
   7:	11          	addsp 4
   8:	01          	.byte 1
   9:	25          	lessthanorequal
   a:	08          	load
   b:	13          	addsp 12
   c:	0b          	nop
   d:	03          	.byte 3
   e:	08          	load
   f:	1b          	addsp 44
  10:	08          	load
  11:	00          	breakpoint
  12:	00          	breakpoint
  13:	02          	pushsp
  14:	2e          	eq
  15:	01          	.byte 1
  16:	01          	.byte 1
  17:	13          	addsp 12
  18:	3f          	callpcrel
  19:	0c          	store
  1a:	03          	.byte 3
  1b:	08          	load
  1c:	3a          	config
  1d:	0b          	nop
  1e:	3b          	pushpc
  1f:	0b          	nop
  20:	27          	ulessthanorequal
  21:	0c          	store
  22:	11          	addsp 4
  23:	01          	.byte 1
  24:	12          	addsp 8
  25:	01          	.byte 1
  26:	40          	storesp 64
  27:	0a          	flip
  28:	00          	breakpoint
  29:	00          	breakpoint
  2a:	03          	.byte 3
  2b:	05          	add
  2c:	00          	breakpoint
  2d:	03          	.byte 3
  2e:	08          	load
  2f:	3a          	config
  30:	0b          	nop
  31:	3b          	pushpc
  32:	0b          	nop
  33:	49          	storesp 100
  34:	13          	addsp 12
  35:	02          	pushsp
  36:	0a          	flip
  37:	00          	breakpoint
  38:	00          	breakpoint
  39:	04          	poppc
  3a:	34          	storeb
  3b:	00          	breakpoint
  3c:	03          	.byte 3
  3d:	08          	load
  3e:	3a          	config
  3f:	0b          	nop
  40:	3b          	pushpc
  41:	0b          	nop
  42:	49          	storesp 100
  43:	13          	addsp 12
  44:	02          	pushsp
  45:	0a          	flip
  46:	00          	breakpoint
  47:	00          	breakpoint
  48:	05          	add
  49:	24          	lessthan
  4a:	00          	breakpoint
  4b:	03          	.byte 3
  4c:	08          	load
  4d:	0b          	nop
  4e:	0b          	nop
  4f:	3e          	halfmult
  50:	0b          	nop
  51:	00          	breakpoint
  52:	00          	breakpoint
  53:	06          	and
  54:	2e          	eq
  55:	01          	.byte 1
  56:	01          	.byte 1
  57:	13          	addsp 12
  58:	3f          	callpcrel
  59:	0c          	store
  5a:	03          	.byte 3
  5b:	08          	load
  5c:	3a          	config
  5d:	0b          	nop
  5e:	3b          	pushpc
  5f:	0b          	nop
  60:	11          	addsp 4
  61:	01          	.byte 1
  62:	12          	addsp 8
  63:	01          	.byte 1
  64:	40          	storesp 64
  65:	0a          	flip
  66:	00          	breakpoint
  67:	00          	breakpoint
  68:	07          	or
  69:	2e          	eq
  6a:	01          	.byte 1
  6b:	01          	.byte 1
  6c:	13          	addsp 12
  6d:	3f          	callpcrel
  6e:	0c          	store
  6f:	03          	.byte 3
  70:	08          	load
  71:	3a          	config
  72:	0b          	nop
  73:	3b          	pushpc
  74:	0b          	nop
  75:	27          	ulessthanorequal
  76:	0c          	store
  77:	49          	storesp 100
  78:	13          	addsp 12
  79:	11          	addsp 4
  7a:	01          	.byte 1
  7b:	12          	addsp 8
  7c:	01          	.byte 1
  7d:	40          	storesp 64
  7e:	0a          	flip
  7f:	00          	breakpoint
  80:	00          	breakpoint
  81:	08          	load
  82:	34          	storeb
  83:	00          	breakpoint
  84:	03          	.byte 3
  85:	08          	load
  86:	3a          	config
  87:	0b          	nop
  88:	3b          	pushpc
  89:	0b          	nop
  8a:	49          	storesp 100
  8b:	13          	addsp 12
  8c:	3f          	callpcrel
  8d:	0c          	store
  8e:	3c          	syscall
  8f:	0c          	store
  90:	00          	breakpoint
  91:	00          	breakpoint
  92:	09          	not
  93:	0f          	.byte 15
  94:	00          	breakpoint
  95:	0b          	nop
  96:	0b          	nop
  97:	49          	storesp 100
  98:	13          	addsp 12
  99:	00          	breakpoint
  9a:	00          	breakpoint
  9b:	0a          	flip
  9c:	35          	div
  9d:	00          	breakpoint
  9e:	49          	storesp 100
  9f:	13          	addsp 12
  a0:	00          	breakpoint
	...

000000a3 <.Ldebug_abbrev0>:
  a3:	01          	.byte 1
  a4:	11          	addsp 4
  a5:	01          	.byte 1
  a6:	10          	addsp 0
  a7:	06          	and
  a8:	12          	addsp 8
  a9:	01          	.byte 1
  aa:	11          	addsp 4
  ab:	01          	.byte 1
  ac:	25          	lessthanorequal
  ad:	08          	load
  ae:	13          	addsp 12
  af:	0b          	nop
  b0:	03          	.byte 3
  b1:	08          	load
  b2:	1b          	addsp 44
  b3:	08          	load
  b4:	00          	breakpoint
  b5:	00          	breakpoint
  b6:	02          	pushsp
  b7:	34          	storeb
  b8:	00          	breakpoint
  b9:	03          	.byte 3
  ba:	08          	load
  bb:	3a          	config
  bc:	0b          	nop
  bd:	3b          	pushpc
  be:	0b          	nop
  bf:	49          	storesp 100
  c0:	13          	addsp 12
  c1:	3f          	callpcrel
  c2:	0c          	store
  c3:	02          	pushsp
  c4:	0a          	flip
  c5:	00          	breakpoint
  c6:	00          	breakpoint
  c7:	03          	.byte 3
  c8:	0f          	.byte 15
  c9:	00          	breakpoint
  ca:	0b          	nop
  cb:	0b          	nop
  cc:	49          	storesp 100
  cd:	13          	addsp 12
  ce:	00          	breakpoint
  cf:	00          	breakpoint
  d0:	04          	poppc
  d1:	35          	div
  d2:	00          	breakpoint
  d3:	49          	storesp 100
  d4:	13          	addsp 12
  d5:	00          	breakpoint
  d6:	00          	breakpoint
  d7:	05          	add
  d8:	24          	lessthan
  d9:	00          	breakpoint
  da:	03          	.byte 3
  db:	08          	load
  dc:	0b          	nop
  dd:	0b          	nop
  de:	3e          	halfmult
  df:	0b          	nop
  e0:	00          	breakpoint
	...
Disassembly of section .debug_info:

00000000 <.Ldebug_info0>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	02          	pushsp
   3:	18          	addsp 32
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	00          	breakpoint
   a:	04          	poppc
   b:	01          	.byte 1
   c:	00          	breakpoint
   d:	00          	breakpoint
   e:	00          	breakpoint
   f:	00          	breakpoint
  10:	00          	breakpoint
  11:	00          	breakpoint
  12:	06          	and
  13:	96          	im 22
  14:	00          	breakpoint
  15:	00          	breakpoint
  16:	04          	poppc
  17:	b1          	im 49
  18:	47          	storesp 92
  19:	4e          	storesp 120
  1a:	55          	storesp 20
  1b:	20          	.byte 32
  1c:	43          	storesp 76
  1d:	20          	.byte 32
  1e:	33          	loadb
  1f:	2e          	eq
  20:	34          	storeb
  21:	2e          	eq
  22:	32          	xor
  23:	00          	breakpoint
  24:	01          	.byte 1
  25:	6d          	loadsp 116
  26:	61          	loadsp 68
  27:	69          	loadsp 100
  28:	6e          	loadsp 120
  29:	2e          	eq
  2a:	63          	loadsp 76
  2b:	00          	breakpoint
  2c:	2f          	neq
  2d:	68          	loadsp 96
  2e:	6f          	loadsp 124
  2f:	6d          	loadsp 116
  30:	65          	loadsp 84
  31:	2f          	neq
  32:	6d          	loadsp 116
  33:	61          	loadsp 68
  34:	72          	loadsp 8
  35:	6b          	loadsp 108
  36:	77          	loadsp 28
  37:	2f          	neq
  38:	61          	loadsp 68
  39:	6c          	loadsp 112
  3a:	74          	loadsp 16
  3b:	65          	loadsp 84
  3c:	72          	loadsp 8
  3d:	61          	loadsp 68
  3e:	2f          	neq
  3f:	61          	loadsp 68
  40:	74          	loadsp 16
  41:	61          	loadsp 68
  42:	72          	loadsp 8
  43:	69          	loadsp 100
  44:	5f          	storesp 60
  45:	78          	loadsp 32
  46:	65          	loadsp 84
  47:	5f          	storesp 60
  48:	66          	loadsp 88
  49:	70          	loadsp 0
  4a:	67          	loadsp 92
  4b:	61          	loadsp 68
  4c:	2f          	neq
  4d:	7a          	loadsp 40
  4e:	70          	loadsp 0
  4f:	75          	loadsp 20
  50:	2f          	neq
  51:	6c          	loadsp 112
  52:	65          	loadsp 84
  53:	64          	loadsp 80
  54:	73          	loadsp 12
  55:	5f          	storesp 60
  56:	6e          	loadsp 120
  57:	6f          	loadsp 124
  58:	73          	loadsp 12
  59:	64          	loadsp 80
  5a:	72          	loadsp 8
  5b:	69          	loadsp 100
  5c:	76          	loadsp 24
  5d:	65          	loadsp 84
  5e:	00          	breakpoint
  5f:	02          	pushsp
  60:	00          	breakpoint
  61:	00          	breakpoint
  62:	00          	breakpoint
  63:	9a          	im 26
  64:	01          	.byte 1
  65:	77          	loadsp 28
  66:	61          	loadsp 68
  67:	69          	loadsp 100
  68:	74          	loadsp 16
  69:	5f          	storesp 60
  6a:	75          	loadsp 20
  6b:	73          	loadsp 12
  6c:	00          	breakpoint
  6d:	01          	.byte 1
  6e:	06          	and
  6f:	01          	.byte 1
  70:	00          	breakpoint
  71:	00          	breakpoint
  72:	04          	poppc
  73:	b1          	im 49
  74:	00          	breakpoint
  75:	00          	breakpoint
  76:	04          	poppc
  77:	f0          	im -16
  78:	01          	.byte 1
  79:	53          	storesp 12
  7a:	03          	.byte 3
  7b:	6e          	loadsp 120
  7c:	75          	loadsp 20
  7d:	6d          	loadsp 116
  7e:	00          	breakpoint
  7f:	01          	.byte 1
  80:	05          	add
  81:	00          	breakpoint
  82:	00          	breakpoint
  83:	00          	breakpoint
  84:	9a          	im 26
  85:	02          	pushsp
  86:	91          	im 17
  87:	08          	load
  88:	04          	poppc
  89:	63          	loadsp 76
  8a:	79          	loadsp 36
  8b:	63          	loadsp 76
  8c:	6c          	loadsp 112
  8d:	65          	loadsp 84
  8e:	73          	loadsp 12
  8f:	00          	breakpoint
  90:	01          	.byte 1
  91:	08          	load
  92:	00          	breakpoint
  93:	00          	breakpoint
  94:	00          	breakpoint
  95:	9a          	im 26
  96:	02          	pushsp
  97:	91          	im 17
  98:	7c          	loadsp 48
  99:	00          	breakpoint
  9a:	05          	add
  9b:	75          	loadsp 20
  9c:	6e          	loadsp 120
  9d:	73          	loadsp 12
  9e:	69          	loadsp 100
  9f:	67          	loadsp 92
  a0:	6e          	loadsp 120
  a1:	65          	loadsp 84
  a2:	64          	loadsp 80
  a3:	20          	.byte 32
  a4:	69          	loadsp 100
  a5:	6e          	loadsp 120
  a6:	74          	loadsp 16
  a7:	00          	breakpoint
  a8:	04          	poppc
  a9:	07          	or
  aa:	06          	and
  ab:	00          	breakpoint
  ac:	00          	breakpoint
  ad:	00          	breakpoint
  ae:	d7          	im -41
  af:	01          	.byte 1
  b0:	63          	loadsp 76
  b1:	6c          	loadsp 112
  b2:	65          	loadsp 84
  b3:	61          	loadsp 68
  b4:	72          	loadsp 8
  b5:	5f          	storesp 60
  b6:	36          	mod
  b7:	34          	storeb
  b8:	6b          	loadsp 108
  b9:	5f          	storesp 60
  ba:	72          	loadsp 8
  bb:	61          	loadsp 68
  bc:	6d          	loadsp 116
  bd:	00          	breakpoint
  be:	01          	.byte 1
  bf:	0d          	popsp
  c0:	00          	breakpoint
  c1:	00          	breakpoint
  c2:	04          	poppc
  c3:	f0          	im -16
  c4:	00          	breakpoint
  c5:	00          	breakpoint
  c6:	05          	add
  c7:	b3          	im 51
  c8:	01          	.byte 1
  c9:	53          	storesp 12
  ca:	04          	poppc
  cb:	69          	loadsp 100
  cc:	00          	breakpoint
  cd:	01          	.byte 1
  ce:	0e          	.byte 14
  cf:	00          	breakpoint
  d0:	00          	breakpoint
  d1:	00          	breakpoint
  d2:	d7          	im -41
  d3:	02          	pushsp
  d4:	91          	im 17
  d5:	7c          	loadsp 48
  d6:	00          	breakpoint
  d7:	05          	add
  d8:	69          	loadsp 100
  d9:	6e          	loadsp 120
  da:	74          	loadsp 16
  db:	00          	breakpoint
  dc:	04          	poppc
  dd:	05          	add
  de:	02          	pushsp
  df:	00          	breakpoint
  e0:	00          	breakpoint
  e1:	01          	.byte 1
  e2:	1e          	addsp 56
  e3:	01          	.byte 1
  e4:	72          	loadsp 8
  e5:	65          	loadsp 84
  e6:	73          	loadsp 12
  e7:	65          	loadsp 84
  e8:	74          	loadsp 16
  e9:	5f          	storesp 60
  ea:	36          	mod
  eb:	35          	div
  ec:	30          	neg
  ed:	32          	xor
  ee:	00          	breakpoint
  ef:	01          	.byte 1
  f0:	2b          	ashiftleft
  f1:	01          	.byte 1
  f2:	00          	breakpoint
  f3:	00          	breakpoint
  f4:	05          	add
  f5:	b3          	im 51
  f6:	00          	breakpoint
  f7:	00          	breakpoint
  f8:	06          	and
  f9:	08          	load
  fa:	01          	.byte 1
  fb:	53          	storesp 12
  fc:	03          	.byte 3
  fd:	72          	loadsp 8
  fe:	65          	loadsp 84
  ff:	73          	loadsp 12
 100:	65          	loadsp 84
 101:	74          	loadsp 16
 102:	5f          	storesp 60
 103:	6e          	loadsp 120
 104:	00          	breakpoint
 105:	01          	.byte 1
 106:	2a          	lshiftright
 107:	00          	breakpoint
 108:	00          	breakpoint
 109:	00          	breakpoint
 10a:	9a          	im 26
 10b:	02          	pushsp
 10c:	91          	im 17
 10d:	08          	load
 10e:	04          	poppc
 10f:	70          	loadsp 0
 110:	72          	loadsp 8
 111:	65          	loadsp 84
 112:	76          	loadsp 24
 113:	00          	breakpoint
 114:	01          	.byte 1
 115:	2c          	ashiftright
 116:	00          	breakpoint
 117:	00          	breakpoint
 118:	00          	breakpoint
 119:	d7          	im -41
 11a:	02          	pushsp
 11b:	91          	im 17
 11c:	7c          	loadsp 48
 11d:	00          	breakpoint
 11e:	02          	pushsp
 11f:	00          	breakpoint
 120:	00          	breakpoint
 121:	01          	.byte 1
 122:	5c          	storesp 48
 123:	01          	.byte 1
 124:	70          	loadsp 0
 125:	61          	loadsp 68
 126:	75          	loadsp 20
 127:	73          	loadsp 12
 128:	65          	loadsp 84
 129:	5f          	storesp 60
 12a:	36          	mod
 12b:	35          	div
 12c:	30          	neg
 12d:	32          	xor
 12e:	00          	breakpoint
 12f:	01          	.byte 1
 130:	35          	div
 131:	01          	.byte 1
 132:	00          	breakpoint
 133:	00          	breakpoint
 134:	06          	and
 135:	08          	load
 136:	00          	breakpoint
 137:	00          	breakpoint
 138:	06          	and
 139:	58          	storesp 32
 13a:	01          	.byte 1
 13b:	53          	storesp 12
 13c:	03          	.byte 3
 13d:	70          	loadsp 0
 13e:	61          	loadsp 68
 13f:	75          	loadsp 20
 140:	73          	loadsp 12
 141:	65          	loadsp 84
 142:	00          	breakpoint
 143:	01          	.byte 1
 144:	34          	storeb
 145:	00          	breakpoint
 146:	00          	breakpoint
 147:	00          	breakpoint
 148:	9a          	im 26
 149:	02          	pushsp
 14a:	91          	im 17
 14b:	08          	load
 14c:	04          	poppc
 14d:	70          	loadsp 0
 14e:	72          	loadsp 8
 14f:	65          	loadsp 84
 150:	76          	loadsp 24
 151:	00          	breakpoint
 152:	01          	.byte 1
 153:	36          	mod
 154:	00          	breakpoint
 155:	00          	breakpoint
 156:	00          	breakpoint
 157:	d7          	im -41
 158:	02          	pushsp
 159:	91          	im 17
 15a:	7c          	loadsp 48
 15b:	00          	breakpoint
 15c:	07          	or
 15d:	00          	breakpoint
 15e:	00          	breakpoint
 15f:	01          	.byte 1
 160:	94          	im 20
 161:	01          	.byte 1
 162:	6d          	loadsp 116
 163:	61          	loadsp 68
 164:	69          	loadsp 100
 165:	6e          	loadsp 120
 166:	00          	breakpoint
 167:	01          	.byte 1
 168:	3f          	callpcrel
 169:	01          	.byte 1
 16a:	00          	breakpoint
 16b:	00          	breakpoint
 16c:	00          	breakpoint
 16d:	d7          	im -41
 16e:	00          	breakpoint
 16f:	00          	breakpoint
 170:	06          	and
 171:	58          	storesp 32
 172:	00          	breakpoint
 173:	00          	breakpoint
 174:	06          	and
 175:	96          	im 22
 176:	01          	.byte 1
 177:	53          	storesp 12
 178:	04          	poppc
 179:	69          	loadsp 100
 17a:	00          	breakpoint
 17b:	01          	.byte 1
 17c:	40          	storesp 64
 17d:	00          	breakpoint
 17e:	00          	breakpoint
 17f:	00          	breakpoint
 180:	9a          	im 26
 181:	02          	pushsp
 182:	91          	im 17
 183:	7c          	loadsp 48
 184:	04          	poppc
 185:	74          	loadsp 16
 186:	65          	loadsp 84
 187:	6d          	loadsp 116
 188:	70          	loadsp 0
 189:	00          	breakpoint
 18a:	01          	.byte 1
 18b:	41          	storesp 68
 18c:	00          	breakpoint
 18d:	00          	breakpoint
 18e:	01          	.byte 1
 18f:	94          	im 20
 190:	02          	pushsp
 191:	91          	im 17
 192:	78          	loadsp 32
 193:	00          	breakpoint
 194:	05          	add
 195:	75          	loadsp 20
 196:	6e          	loadsp 120
 197:	73          	loadsp 12
 198:	69          	loadsp 100
 199:	67          	loadsp 92
 19a:	6e          	loadsp 120
 19b:	65          	loadsp 84
 19c:	64          	loadsp 80
 19d:	20          	.byte 32
 19e:	63          	loadsp 76
 19f:	68          	loadsp 96
 1a0:	61          	loadsp 68
 1a1:	72          	loadsp 8
 1a2:	00          	breakpoint
 1a3:	01          	.byte 1
 1a4:	08          	load
 1a5:	08          	load
 1a6:	7a          	loadsp 40
 1a7:	70          	loadsp 0
 1a8:	75          	loadsp 20
 1a9:	5f          	storesp 60
 1aa:	63          	loadsp 76
 1ab:	6f          	loadsp 124
 1ac:	6e          	loadsp 120
 1ad:	66          	loadsp 88
 1ae:	69          	loadsp 100
 1af:	67          	loadsp 92
 1b0:	00          	breakpoint
 1b1:	02          	pushsp
 1b2:	05          	add
 1b3:	00          	breakpoint
 1b4:	00          	breakpoint
 1b5:	01          	.byte 1
 1b6:	b9          	im 57
 1b7:	01          	.byte 1
 1b8:	01          	.byte 1
 1b9:	09          	not
 1ba:	04          	poppc
 1bb:	00          	breakpoint
 1bc:	00          	breakpoint
 1bd:	01          	.byte 1
 1be:	bf          	im 63
 1bf:	0a          	flip
 1c0:	00          	breakpoint
 1c1:	00          	breakpoint
 1c2:	00          	breakpoint
 1c3:	d7          	im -41
 1c4:	08          	load
 1c5:	7a          	loadsp 40
 1c6:	70          	loadsp 0
 1c7:	75          	loadsp 20
 1c8:	5f          	storesp 60
 1c9:	70          	loadsp 0
 1ca:	61          	loadsp 68
 1cb:	75          	loadsp 20
 1cc:	73          	loadsp 12
 1cd:	65          	loadsp 84
 1ce:	00          	breakpoint
 1cf:	02          	pushsp
 1d0:	06          	and
 1d1:	00          	breakpoint
 1d2:	00          	breakpoint
 1d3:	01          	.byte 1
 1d4:	b9          	im 57
 1d5:	01          	.byte 1
 1d6:	01          	.byte 1
 1d7:	08          	load
 1d8:	7a          	loadsp 40
 1d9:	70          	loadsp 0
 1da:	75          	loadsp 20
 1db:	5f          	storesp 60
 1dc:	6c          	loadsp 112
 1dd:	65          	loadsp 84
 1de:	64          	loadsp 80
 1df:	67          	loadsp 92
 1e0:	00          	breakpoint
 1e1:	02          	pushsp
 1e2:	09          	not
 1e3:	00          	breakpoint
 1e4:	00          	breakpoint
 1e5:	01          	.byte 1
 1e6:	b9          	im 57
 1e7:	01          	.byte 1
 1e8:	01          	.byte 1
 1e9:	08          	load
 1ea:	7a          	loadsp 40
 1eb:	70          	loadsp 0
 1ec:	75          	loadsp 20
 1ed:	5f          	storesp 60
 1ee:	6c          	loadsp 112
 1ef:	65          	loadsp 84
 1f0:	64          	loadsp 80
 1f1:	72          	loadsp 8
 1f2:	00          	breakpoint
 1f3:	02          	pushsp
 1f4:	0a          	flip
 1f5:	00          	breakpoint
 1f6:	00          	breakpoint
 1f7:	01          	.byte 1
 1f8:	b9          	im 57
 1f9:	01          	.byte 1
 1fa:	01          	.byte 1
 1fb:	08          	load
 1fc:	61          	loadsp 68
 1fd:	74          	loadsp 16
 1fe:	61          	loadsp 68
 1ff:	72          	loadsp 8
 200:	69          	loadsp 100
 201:	5f          	storesp 60
 202:	6e          	loadsp 120
 203:	6d          	loadsp 116
 204:	69          	loadsp 100
 205:	65          	loadsp 84
 206:	6e          	loadsp 120
 207:	00          	breakpoint
 208:	02          	pushsp
 209:	22          	loadh
 20a:	00          	breakpoint
 20b:	00          	breakpoint
 20c:	02          	pushsp
 20d:	10          	addsp 0
 20e:	01          	.byte 1
 20f:	01          	.byte 1
 210:	09          	not
 211:	04          	poppc
 212:	00          	breakpoint
 213:	00          	breakpoint
 214:	02          	pushsp
 215:	16          	addsp 24
 216:	0a          	flip
 217:	00          	breakpoint
 218:	00          	breakpoint
 219:	01          	.byte 1
 21a:	94          	im 20
	...

0000021c <.Ldebug_info0>:
 21c:	00          	breakpoint
 21d:	00          	breakpoint
 21e:	04          	poppc
 21f:	c5          	im -59
 220:	00          	breakpoint
 221:	02          	pushsp
 222:	00          	breakpoint
 223:	00          	breakpoint
 224:	00          	breakpoint
 225:	a3          	im 35
 226:	04          	poppc
 227:	01          	.byte 1
 228:	00          	breakpoint
 229:	00          	breakpoint
 22a:	01          	.byte 1
 22b:	9a          	im 26
 22c:	00          	breakpoint
 22d:	00          	breakpoint
 22e:	06          	and
 22f:	96          	im 22
 230:	00          	breakpoint
 231:	00          	breakpoint
 232:	06          	and
 233:	96          	im 22
 234:	47          	storesp 92
 235:	4e          	storesp 120
 236:	55          	storesp 20
 237:	20          	.byte 32
 238:	43          	storesp 76
 239:	20          	.byte 32
 23a:	33          	loadb
 23b:	2e          	eq
 23c:	34          	storeb
 23d:	2e          	eq
 23e:	32          	xor
 23f:	00          	breakpoint
 240:	01          	.byte 1
 241:	72          	loadsp 8
 242:	65          	loadsp 84
 243:	67          	loadsp 92
 244:	73          	loadsp 12
 245:	2e          	eq
 246:	63          	loadsp 76
 247:	00          	breakpoint
 248:	2f          	neq
 249:	68          	loadsp 96
 24a:	6f          	loadsp 124
 24b:	6d          	loadsp 116
 24c:	65          	loadsp 84
 24d:	2f          	neq
 24e:	6d          	loadsp 116
 24f:	61          	loadsp 68
 250:	72          	loadsp 8
 251:	6b          	loadsp 108
 252:	77          	loadsp 28
 253:	2f          	neq
 254:	61          	loadsp 68
 255:	6c          	loadsp 112
 256:	74          	loadsp 16
 257:	65          	loadsp 84
 258:	72          	loadsp 8
 259:	61          	loadsp 68
 25a:	2f          	neq
 25b:	61          	loadsp 68
 25c:	74          	loadsp 16
 25d:	61          	loadsp 68
 25e:	72          	loadsp 8
 25f:	69          	loadsp 100
 260:	5f          	storesp 60
 261:	78          	loadsp 32
 262:	65          	loadsp 84
 263:	5f          	storesp 60
 264:	66          	loadsp 88
 265:	70          	loadsp 0
 266:	67          	loadsp 92
 267:	61          	loadsp 68
 268:	2f          	neq
 269:	7a          	loadsp 40
 26a:	70          	loadsp 0
 26b:	75          	loadsp 20
 26c:	2f          	neq
 26d:	6c          	loadsp 112
 26e:	65          	loadsp 84
 26f:	64          	loadsp 80
 270:	73          	loadsp 12
 271:	5f          	storesp 60
 272:	6e          	loadsp 120
 273:	6f          	loadsp 124
 274:	73          	loadsp 12
 275:	64          	loadsp 80
 276:	72          	loadsp 8
 277:	69          	loadsp 100
 278:	76          	loadsp 24
 279:	65          	loadsp 84
 27a:	00          	breakpoint
 27b:	02          	pushsp
 27c:	7a          	loadsp 40
 27d:	70          	loadsp 0
 27e:	75          	loadsp 20
 27f:	5f          	storesp 60
 280:	63          	loadsp 76
 281:	6f          	loadsp 124
 282:	6e          	loadsp 120
 283:	66          	loadsp 88
 284:	69          	loadsp 100
 285:	67          	loadsp 92
 286:	00          	breakpoint
 287:	01          	.byte 1
 288:	05          	add
 289:	00          	breakpoint
 28a:	00          	breakpoint
 28b:	00          	breakpoint
 28c:	78          	loadsp 32
 28d:	01          	.byte 1
 28e:	05          	add
 28f:	03          	.byte 3
 290:	00          	breakpoint
 291:	00          	breakpoint
 292:	09          	not
 293:	50          	storesp 0
 294:	03          	.byte 3
 295:	04          	poppc
 296:	00          	breakpoint
 297:	00          	breakpoint
 298:	00          	breakpoint
 299:	7e          	loadsp 56
 29a:	04          	poppc
 29b:	00          	breakpoint
 29c:	00          	breakpoint
 29d:	00          	breakpoint
 29e:	83          	im 3
 29f:	05          	add
 2a0:	69          	loadsp 100
 2a1:	6e          	loadsp 120
 2a2:	74          	loadsp 16
 2a3:	00          	breakpoint
 2a4:	04          	poppc
 2a5:	05          	add
 2a6:	02          	pushsp
 2a7:	7a          	loadsp 40
 2a8:	70          	loadsp 0
 2a9:	75          	loadsp 20
 2aa:	5f          	storesp 60
 2ab:	70          	loadsp 0
 2ac:	61          	loadsp 68
 2ad:	75          	loadsp 20
 2ae:	73          	loadsp 12
 2af:	65          	loadsp 84
 2b0:	00          	breakpoint
 2b1:	01          	.byte 1
 2b2:	06          	and
 2b3:	00          	breakpoint
 2b4:	00          	breakpoint
 2b5:	00          	breakpoint
 2b6:	78          	loadsp 32
 2b7:	01          	.byte 1
 2b8:	05          	add
 2b9:	03          	.byte 3
 2ba:	00          	breakpoint
 2bb:	00          	breakpoint
 2bc:	09          	not
 2bd:	54          	storesp 16
 2be:	02          	pushsp
 2bf:	7a          	loadsp 40
 2c0:	70          	loadsp 0
 2c1:	75          	loadsp 20
 2c2:	5f          	storesp 60
 2c3:	73          	loadsp 12
 2c4:	77          	loadsp 28
 2c5:	69          	loadsp 100
 2c6:	74          	loadsp 16
 2c7:	63          	loadsp 76
 2c8:	68          	loadsp 96
 2c9:	65          	loadsp 84
 2ca:	73          	loadsp 12
 2cb:	00          	breakpoint
 2cc:	01          	.byte 1
 2cd:	07          	or
 2ce:	00          	breakpoint
 2cf:	00          	breakpoint
 2d0:	00          	breakpoint
 2d1:	78          	loadsp 32
 2d2:	01          	.byte 1
 2d3:	05          	add
 2d4:	03          	.byte 3
 2d5:	00          	breakpoint
 2d6:	00          	breakpoint
 2d7:	09          	not
 2d8:	58          	storesp 32
 2d9:	02          	pushsp
 2da:	7a          	loadsp 40
 2db:	70          	loadsp 0
 2dc:	75          	loadsp 20
 2dd:	5f          	storesp 60
 2de:	6b          	loadsp 108
 2df:	65          	loadsp 84
 2e0:	79          	loadsp 36
 2e1:	00          	breakpoint
 2e2:	01          	.byte 1
 2e3:	08          	load
 2e4:	00          	breakpoint
 2e5:	00          	breakpoint
 2e6:	00          	breakpoint
 2e7:	78          	loadsp 32
 2e8:	01          	.byte 1
 2e9:	05          	add
 2ea:	03          	.byte 3
 2eb:	00          	breakpoint
 2ec:	00          	breakpoint
 2ed:	09          	not
 2ee:	5c          	storesp 48
 2ef:	02          	pushsp
 2f0:	7a          	loadsp 40
 2f1:	70          	loadsp 0
 2f2:	75          	loadsp 20
 2f3:	5f          	storesp 60
 2f4:	6c          	loadsp 112
 2f5:	65          	loadsp 84
 2f6:	64          	loadsp 80
 2f7:	67          	loadsp 92
 2f8:	00          	breakpoint
 2f9:	01          	.byte 1
 2fa:	09          	not
 2fb:	00          	breakpoint
 2fc:	00          	breakpoint
 2fd:	00          	breakpoint
 2fe:	78          	loadsp 32
 2ff:	01          	.byte 1
 300:	05          	add
 301:	03          	.byte 3
 302:	00          	breakpoint
 303:	00          	breakpoint
 304:	09          	not
 305:	60          	loadsp 64
 306:	02          	pushsp
 307:	7a          	loadsp 40
 308:	70          	loadsp 0
 309:	75          	loadsp 20
 30a:	5f          	storesp 60
 30b:	6c          	loadsp 112
 30c:	65          	loadsp 84
 30d:	64          	loadsp 80
 30e:	72          	loadsp 8
 30f:	00          	breakpoint
 310:	01          	.byte 1
 311:	0a          	flip
 312:	00          	breakpoint
 313:	00          	breakpoint
 314:	00          	breakpoint
 315:	78          	loadsp 32
 316:	01          	.byte 1
 317:	05          	add
 318:	03          	.byte 3
 319:	00          	breakpoint
 31a:	00          	breakpoint
 31b:	09          	not
 31c:	64          	loadsp 80
 31d:	02          	pushsp
 31e:	7a          	loadsp 40
 31f:	70          	loadsp 0
 320:	75          	loadsp 20
 321:	5f          	storesp 60
 322:	73          	loadsp 12
 323:	70          	loadsp 0
 324:	69          	loadsp 100
 325:	5f          	storesp 60
 326:	64          	loadsp 80
 327:	61          	loadsp 68
 328:	74          	loadsp 16
 329:	61          	loadsp 68
 32a:	00          	breakpoint
 32b:	01          	.byte 1
 32c:	0b          	nop
 32d:	00          	breakpoint
 32e:	00          	breakpoint
 32f:	00          	breakpoint
 330:	78          	loadsp 32
 331:	01          	.byte 1
 332:	05          	add
 333:	03          	.byte 3
 334:	00          	breakpoint
 335:	00          	breakpoint
 336:	09          	not
 337:	68          	loadsp 96
 338:	02          	pushsp
 339:	7a          	loadsp 40
 33a:	70          	loadsp 0
 33b:	75          	loadsp 20
 33c:	5f          	storesp 60
 33d:	73          	loadsp 12
 33e:	70          	loadsp 0
 33f:	69          	loadsp 100
 340:	5f          	storesp 60
 341:	73          	loadsp 12
 342:	74          	loadsp 16
 343:	61          	loadsp 68
 344:	74          	loadsp 16
 345:	65          	loadsp 84
 346:	00          	breakpoint
 347:	01          	.byte 1
 348:	0c          	store
 349:	00          	breakpoint
 34a:	00          	breakpoint
 34b:	00          	breakpoint
 34c:	78          	loadsp 32
 34d:	01          	.byte 1
 34e:	05          	add
 34f:	03          	.byte 3
 350:	00          	breakpoint
 351:	00          	breakpoint
 352:	09          	not
 353:	6c          	loadsp 112
 354:	02          	pushsp
 355:	7a          	loadsp 40
 356:	70          	loadsp 0
 357:	75          	loadsp 20
 358:	5f          	storesp 60
 359:	73          	loadsp 12
 35a:	69          	loadsp 100
 35b:	6f          	loadsp 124
 35c:	00          	breakpoint
 35d:	01          	.byte 1
 35e:	0d          	popsp
 35f:	00          	breakpoint
 360:	00          	breakpoint
 361:	00          	breakpoint
 362:	78          	loadsp 32
 363:	01          	.byte 1
 364:	05          	add
 365:	03          	.byte 3
 366:	00          	breakpoint
 367:	00          	breakpoint
 368:	09          	not
 369:	70          	loadsp 0
 36a:	02          	pushsp
 36b:	7a          	loadsp 40
 36c:	70          	loadsp 0
 36d:	75          	loadsp 20
 36e:	5f          	storesp 60
 36f:	62          	loadsp 72
 370:	6f          	loadsp 124
 371:	61          	loadsp 68
 372:	72          	loadsp 8
 373:	64          	loadsp 80
 374:	00          	breakpoint
 375:	01          	.byte 1
 376:	0e          	.byte 14
 377:	00          	breakpoint
 378:	00          	breakpoint
 379:	00          	breakpoint
 37a:	78          	loadsp 32
 37b:	01          	.byte 1
 37c:	05          	add
 37d:	03          	.byte 3
 37e:	00          	breakpoint
 37f:	00          	breakpoint
 380:	09          	not
 381:	74          	loadsp 16
 382:	02          	pushsp
 383:	7a          	loadsp 40
 384:	70          	loadsp 0
 385:	75          	loadsp 20
 386:	5f          	storesp 60
 387:	68          	loadsp 96
 388:	65          	loadsp 84
 389:	78          	loadsp 32
 38a:	00          	breakpoint
 38b:	01          	.byte 1
 38c:	0f          	.byte 15
 38d:	00          	breakpoint
 38e:	00          	breakpoint
 38f:	00          	breakpoint
 390:	78          	loadsp 32
 391:	01          	.byte 1
 392:	05          	add
 393:	03          	.byte 3
 394:	00          	breakpoint
 395:	00          	breakpoint
 396:	09          	not
 397:	78          	loadsp 32
 398:	02          	pushsp
 399:	7a          	loadsp 40
 39a:	70          	loadsp 0
 39b:	75          	loadsp 20
 39c:	5f          	storesp 60
 39d:	73          	loadsp 12
 39e:	65          	loadsp 84
 39f:	63          	loadsp 76
 3a0:	74          	loadsp 16
 3a1:	6f          	loadsp 124
 3a2:	72          	loadsp 8
 3a3:	00          	breakpoint
 3a4:	01          	.byte 1
 3a5:	10          	addsp 0
 3a6:	00          	breakpoint
 3a7:	00          	breakpoint
 3a8:	00          	breakpoint
 3a9:	78          	loadsp 32
 3aa:	01          	.byte 1
 3ab:	05          	add
 3ac:	03          	.byte 3
 3ad:	00          	breakpoint
 3ae:	00          	breakpoint
 3af:	09          	not
 3b0:	7c          	loadsp 48
 3b1:	02          	pushsp
 3b2:	7a          	loadsp 40
 3b3:	70          	loadsp 0
 3b4:	75          	loadsp 20
 3b5:	5f          	storesp 60
 3b6:	70          	loadsp 0
 3b7:	6f          	loadsp 124
 3b8:	6b          	loadsp 108
 3b9:	65          	loadsp 84
 3ba:	79          	loadsp 36
 3bb:	5f          	storesp 60
 3bc:	61          	loadsp 68
 3bd:	75          	loadsp 20
 3be:	64          	loadsp 80
 3bf:	66          	loadsp 88
 3c0:	30          	neg
 3c1:	00          	breakpoint
 3c2:	01          	.byte 1
 3c3:	12          	addsp 8
 3c4:	00          	breakpoint
 3c5:	00          	breakpoint
 3c6:	01          	.byte 1
 3c7:	b3          	im 51
 3c8:	01          	.byte 1
 3c9:	05          	add
 3ca:	03          	.byte 3
 3cb:	00          	breakpoint
 3cc:	00          	breakpoint
 3cd:	09          	not
 3ce:	80          	im 0
 3cf:	03          	.byte 3
 3d0:	04          	poppc
 3d1:	00          	breakpoint
 3d2:	00          	breakpoint
 3d3:	01          	.byte 1
 3d4:	b9          	im 57
 3d5:	04          	poppc
 3d6:	00          	breakpoint
 3d7:	00          	breakpoint
 3d8:	01          	.byte 1
 3d9:	be          	im 62
 3da:	05          	add
 3db:	75          	loadsp 20
 3dc:	6e          	loadsp 120
 3dd:	73          	loadsp 12
 3de:	69          	loadsp 100
 3df:	67          	loadsp 92
 3e0:	6e          	loadsp 120
 3e1:	65          	loadsp 84
 3e2:	64          	loadsp 80
 3e3:	20          	.byte 32
 3e4:	63          	loadsp 76
 3e5:	68          	loadsp 96
 3e6:	61          	loadsp 68
 3e7:	72          	loadsp 8
 3e8:	00          	breakpoint
 3e9:	01          	.byte 1
 3ea:	08          	load
 3eb:	02          	pushsp
 3ec:	7a          	loadsp 40
 3ed:	70          	loadsp 0
 3ee:	75          	loadsp 20
 3ef:	5f          	storesp 60
 3f0:	70          	loadsp 0
 3f1:	6f          	loadsp 124
 3f2:	6b          	loadsp 108
 3f3:	65          	loadsp 84
 3f4:	79          	loadsp 36
 3f5:	5f          	storesp 60
 3f6:	61          	loadsp 68
 3f7:	75          	loadsp 20
 3f8:	64          	loadsp 80
 3f9:	63          	loadsp 76
 3fa:	30          	neg
 3fb:	00          	breakpoint
 3fc:	01          	.byte 1
 3fd:	13          	addsp 12
 3fe:	00          	breakpoint
 3ff:	00          	breakpoint
 400:	01          	.byte 1
 401:	b3          	im 51
 402:	01          	.byte 1
 403:	05          	add
 404:	03          	.byte 3
 405:	00          	breakpoint
 406:	00          	breakpoint
 407:	09          	not
 408:	84          	im 4
 409:	02          	pushsp
 40a:	7a          	loadsp 40
 40b:	70          	loadsp 0
 40c:	75          	loadsp 20
 40d:	5f          	storesp 60
 40e:	70          	loadsp 0
 40f:	6f          	loadsp 124
 410:	6b          	loadsp 108
 411:	65          	loadsp 84
 412:	79          	loadsp 36
 413:	5f          	storesp 60
 414:	61          	loadsp 68
 415:	75          	loadsp 20
 416:	64          	loadsp 80
 417:	66          	loadsp 88
 418:	31          	sub
 419:	00          	breakpoint
 41a:	01          	.byte 1
 41b:	14          	addsp 16
 41c:	00          	breakpoint
 41d:	00          	breakpoint
 41e:	01          	.byte 1
 41f:	b3          	im 51
 420:	01          	.byte 1
 421:	05          	add
 422:	03          	.byte 3
 423:	00          	breakpoint
 424:	00          	breakpoint
 425:	09          	not
 426:	88          	im 8
 427:	02          	pushsp
 428:	7a          	loadsp 40
 429:	70          	loadsp 0
 42a:	75          	loadsp 20
 42b:	5f          	storesp 60
 42c:	70          	loadsp 0
 42d:	6f          	loadsp 124
 42e:	6b          	loadsp 108
 42f:	65          	loadsp 84
 430:	79          	loadsp 36
 431:	5f          	storesp 60
 432:	61          	loadsp 68
 433:	75          	loadsp 20
 434:	64          	loadsp 80
 435:	63          	loadsp 76
 436:	31          	sub
 437:	00          	breakpoint
 438:	01          	.byte 1
 439:	15          	addsp 20
 43a:	00          	breakpoint
 43b:	00          	breakpoint
 43c:	01          	.byte 1
 43d:	b3          	im 51
 43e:	01          	.byte 1
 43f:	05          	add
 440:	03          	.byte 3
 441:	00          	breakpoint
 442:	00          	breakpoint
 443:	09          	not
 444:	8c          	im 12
 445:	02          	pushsp
 446:	7a          	loadsp 40
 447:	70          	loadsp 0
 448:	75          	loadsp 20
 449:	5f          	storesp 60
 44a:	70          	loadsp 0
 44b:	6f          	loadsp 124
 44c:	6b          	loadsp 108
 44d:	65          	loadsp 84
 44e:	79          	loadsp 36
 44f:	5f          	storesp 60
 450:	61          	loadsp 68
 451:	75          	loadsp 20
 452:	64          	loadsp 80
 453:	66          	loadsp 88
 454:	32          	xor
 455:	00          	breakpoint
 456:	01          	.byte 1
 457:	16          	addsp 24
 458:	00          	breakpoint
 459:	00          	breakpoint
 45a:	01          	.byte 1
 45b:	b3          	im 51
 45c:	01          	.byte 1
 45d:	05          	add
 45e:	03          	.byte 3
 45f:	00          	breakpoint
 460:	00          	breakpoint
 461:	09          	not
 462:	90          	im 16
 463:	02          	pushsp
 464:	7a          	loadsp 40
 465:	70          	loadsp 0
 466:	75          	loadsp 20
 467:	5f          	storesp 60
 468:	70          	loadsp 0
 469:	6f          	loadsp 124
 46a:	6b          	loadsp 108
 46b:	65          	loadsp 84
 46c:	79          	loadsp 36
 46d:	5f          	storesp 60
 46e:	61          	loadsp 68
 46f:	75          	loadsp 20
 470:	64          	loadsp 80
 471:	63          	loadsp 76
 472:	32          	xor
 473:	00          	breakpoint
 474:	01          	.byte 1
 475:	17          	addsp 28
 476:	00          	breakpoint
 477:	00          	breakpoint
 478:	01          	.byte 1
 479:	b3          	im 51
 47a:	01          	.byte 1
 47b:	05          	add
 47c:	03          	.byte 3
 47d:	00          	breakpoint
 47e:	00          	breakpoint
 47f:	09          	not
 480:	94          	im 20
 481:	02          	pushsp
 482:	7a          	loadsp 40
 483:	70          	loadsp 0
 484:	75          	loadsp 20
 485:	5f          	storesp 60
 486:	70          	loadsp 0
 487:	6f          	loadsp 124
 488:	6b          	loadsp 108
 489:	65          	loadsp 84
 48a:	79          	loadsp 36
 48b:	5f          	storesp 60
 48c:	61          	loadsp 68
 48d:	75          	loadsp 20
 48e:	64          	loadsp 80
 48f:	66          	loadsp 88
 490:	33          	loadb
 491:	00          	breakpoint
 492:	01          	.byte 1
 493:	18          	addsp 32
 494:	00          	breakpoint
 495:	00          	breakpoint
 496:	01          	.byte 1
 497:	b3          	im 51
 498:	01          	.byte 1
 499:	05          	add
 49a:	03          	.byte 3
 49b:	00          	breakpoint
 49c:	00          	breakpoint
 49d:	09          	not
 49e:	98          	im 24
 49f:	02          	pushsp
 4a0:	7a          	loadsp 40
 4a1:	70          	loadsp 0
 4a2:	75          	loadsp 20
 4a3:	5f          	storesp 60
 4a4:	70          	loadsp 0
 4a5:	6f          	loadsp 124
 4a6:	6b          	loadsp 108
 4a7:	65          	loadsp 84
 4a8:	79          	loadsp 36
 4a9:	5f          	storesp 60
 4aa:	61          	loadsp 68
 4ab:	75          	loadsp 20
 4ac:	64          	loadsp 80
 4ad:	63          	loadsp 76
 4ae:	33          	loadb
 4af:	00          	breakpoint
 4b0:	01          	.byte 1
 4b1:	19          	addsp 36
 4b2:	00          	breakpoint
 4b3:	00          	breakpoint
 4b4:	01          	.byte 1
 4b5:	b3          	im 51
 4b6:	01          	.byte 1
 4b7:	05          	add
 4b8:	03          	.byte 3
 4b9:	00          	breakpoint
 4ba:	00          	breakpoint
 4bb:	09          	not
 4bc:	9c          	im 28
 4bd:	02          	pushsp
 4be:	7a          	loadsp 40
 4bf:	70          	loadsp 0
 4c0:	75          	loadsp 20
 4c1:	5f          	storesp 60
 4c2:	70          	loadsp 0
 4c3:	6f          	loadsp 124
 4c4:	6b          	loadsp 108
 4c5:	65          	loadsp 84
 4c6:	79          	loadsp 36
 4c7:	5f          	storesp 60
 4c8:	61          	loadsp 68
 4c9:	75          	loadsp 20
 4ca:	64          	loadsp 80
 4cb:	63          	loadsp 76
 4cc:	74          	loadsp 16
 4cd:	6c          	loadsp 112
 4ce:	00          	breakpoint
 4cf:	01          	.byte 1
 4d0:	1b          	addsp 44
 4d1:	00          	breakpoint
 4d2:	00          	breakpoint
 4d3:	01          	.byte 1
 4d4:	b3          	im 51
 4d5:	01          	.byte 1
 4d6:	05          	add
 4d7:	03          	.byte 3
 4d8:	00          	breakpoint
 4d9:	00          	breakpoint
 4da:	09          	not
 4db:	a0          	im 32
 4dc:	02          	pushsp
 4dd:	7a          	loadsp 40
 4de:	70          	loadsp 0
 4df:	75          	loadsp 20
 4e0:	5f          	storesp 60
 4e1:	70          	loadsp 0
 4e2:	6f          	loadsp 124
 4e3:	6b          	loadsp 108
 4e4:	65          	loadsp 84
 4e5:	79          	loadsp 36
 4e6:	5f          	storesp 60
 4e7:	73          	loadsp 12
 4e8:	6b          	loadsp 108
 4e9:	72          	loadsp 8
 4ea:	65          	loadsp 84
 4eb:	73          	loadsp 12
 4ec:	74          	loadsp 16
 4ed:	00          	breakpoint
 4ee:	01          	.byte 1
 4ef:	1d          	addsp 52
 4f0:	00          	breakpoint
 4f1:	00          	breakpoint
 4f2:	01          	.byte 1
 4f3:	b3          	im 51
 4f4:	01          	.byte 1
 4f5:	05          	add
 4f6:	03          	.byte 3
 4f7:	00          	breakpoint
 4f8:	00          	breakpoint
 4f9:	09          	not
 4fa:	a4          	im 36
 4fb:	02          	pushsp
 4fc:	7a          	loadsp 40
 4fd:	70          	loadsp 0
 4fe:	75          	loadsp 20
 4ff:	5f          	storesp 60
 500:	70          	loadsp 0
 501:	6f          	loadsp 124
 502:	6b          	loadsp 108
 503:	65          	loadsp 84
 504:	79          	loadsp 36
 505:	5f          	storesp 60
 506:	73          	loadsp 12
 507:	65          	loadsp 84
 508:	72          	loadsp 8
 509:	6f          	loadsp 124
 50a:	75          	loadsp 20
 50b:	74          	loadsp 16
 50c:	00          	breakpoint
 50d:	01          	.byte 1
 50e:	1e          	addsp 56
 50f:	00          	breakpoint
 510:	00          	breakpoint
 511:	01          	.byte 1
 512:	b3          	im 51
 513:	01          	.byte 1
 514:	05          	add
 515:	03          	.byte 3
 516:	00          	breakpoint
 517:	00          	breakpoint
 518:	09          	not
 519:	a8          	im 40
 51a:	02          	pushsp
 51b:	7a          	loadsp 40
 51c:	70          	loadsp 0
 51d:	75          	loadsp 20
 51e:	5f          	storesp 60
 51f:	70          	loadsp 0
 520:	6f          	loadsp 124
 521:	6b          	loadsp 108
 522:	65          	loadsp 84
 523:	79          	loadsp 36
 524:	5f          	storesp 60
 525:	69          	loadsp 100
 526:	72          	loadsp 8
 527:	71          	loadsp 4
 528:	65          	loadsp 84
 529:	6e          	loadsp 120
 52a:	00          	breakpoint
 52b:	01          	.byte 1
 52c:	1f          	addsp 60
 52d:	00          	breakpoint
 52e:	00          	breakpoint
 52f:	01          	.byte 1
 530:	b3          	im 51
 531:	01          	.byte 1
 532:	05          	add
 533:	03          	.byte 3
 534:	00          	breakpoint
 535:	00          	breakpoint
 536:	09          	not
 537:	ac          	im 44
 538:	02          	pushsp
 539:	7a          	loadsp 40
 53a:	70          	loadsp 0
 53b:	75          	loadsp 20
 53c:	5f          	storesp 60
 53d:	70          	loadsp 0
 53e:	6f          	loadsp 124
 53f:	6b          	loadsp 108
 540:	65          	loadsp 84
 541:	79          	loadsp 36
 542:	5f          	storesp 60
 543:	73          	loadsp 12
 544:	6b          	loadsp 108
 545:	63          	loadsp 76
 546:	74          	loadsp 16
 547:	6c          	loadsp 112
 548:	00          	breakpoint
 549:	01          	.byte 1
 54a:	20          	.byte 32
 54b:	00          	breakpoint
 54c:	00          	breakpoint
 54d:	01          	.byte 1
 54e:	b3          	im 51
 54f:	01          	.byte 1
 550:	05          	add
 551:	03          	.byte 3
 552:	00          	breakpoint
 553:	00          	breakpoint
 554:	09          	not
 555:	b0          	im 48
 556:	02          	pushsp
 557:	61          	loadsp 68
 558:	74          	loadsp 16
 559:	61          	loadsp 68
 55a:	72          	loadsp 8
 55b:	69          	loadsp 100
 55c:	5f          	storesp 60
 55d:	6e          	loadsp 120
 55e:	6d          	loadsp 116
 55f:	69          	loadsp 100
 560:	65          	loadsp 84
 561:	6e          	loadsp 120
 562:	00          	breakpoint
 563:	01          	.byte 1
 564:	22          	loadh
 565:	00          	breakpoint
 566:	00          	breakpoint
 567:	01          	.byte 1
 568:	b3          	im 51
 569:	01          	.byte 1
 56a:	05          	add
 56b:	03          	.byte 3
 56c:	00          	breakpoint
 56d:	00          	breakpoint
 56e:	09          	not
 56f:	b4          	im 52
 570:	02          	pushsp
 571:	61          	loadsp 68
 572:	74          	loadsp 16
 573:	61          	loadsp 68
 574:	72          	loadsp 8
 575:	69          	loadsp 100
 576:	5f          	storesp 60
 577:	64          	loadsp 80
 578:	6c          	loadsp 112
 579:	69          	loadsp 100
 57a:	73          	loadsp 12
 57b:	74          	loadsp 16
 57c:	6c          	loadsp 112
 57d:	00          	breakpoint
 57e:	01          	.byte 1
 57f:	23          	storeh
 580:	00          	breakpoint
 581:	00          	breakpoint
 582:	01          	.byte 1
 583:	b3          	im 51
 584:	01          	.byte 1
 585:	05          	add
 586:	03          	.byte 3
 587:	00          	breakpoint
 588:	00          	breakpoint
 589:	09          	not
 58a:	b8          	im 56
 58b:	02          	pushsp
 58c:	61          	loadsp 68
 58d:	74          	loadsp 16
 58e:	61          	loadsp 68
 58f:	72          	loadsp 8
 590:	69          	loadsp 100
 591:	5f          	storesp 60
 592:	64          	loadsp 80
 593:	6c          	loadsp 112
 594:	69          	loadsp 100
 595:	73          	loadsp 12
 596:	74          	loadsp 16
 597:	68          	loadsp 96
 598:	00          	breakpoint
 599:	01          	.byte 1
 59a:	24          	lessthan
 59b:	00          	breakpoint
 59c:	00          	breakpoint
 59d:	01          	.byte 1
 59e:	b3          	im 51
 59f:	01          	.byte 1
 5a0:	05          	add
 5a1:	03          	.byte 3
 5a2:	00          	breakpoint
 5a3:	00          	breakpoint
 5a4:	09          	not
 5a5:	bc          	im 60
 5a6:	02          	pushsp
 5a7:	61          	loadsp 68
 5a8:	74          	loadsp 16
 5a9:	61          	loadsp 68
 5aa:	72          	loadsp 8
 5ab:	69          	loadsp 100
 5ac:	5f          	storesp 60
 5ad:	63          	loadsp 76
 5ae:	6f          	loadsp 124
 5af:	6c          	loadsp 112
 5b0:	62          	loadsp 72
 5b1:	6b          	loadsp 108
 5b2:	00          	breakpoint
 5b3:	01          	.byte 1
 5b4:	25          	lessthanorequal
 5b5:	00          	breakpoint
 5b6:	00          	breakpoint
 5b7:	01          	.byte 1
 5b8:	b3          	im 51
 5b9:	01          	.byte 1
 5ba:	05          	add
 5bb:	03          	.byte 3
 5bc:	00          	breakpoint
 5bd:	00          	breakpoint
 5be:	09          	not
 5bf:	c0          	im -64
 5c0:	02          	pushsp
 5c1:	61          	loadsp 68
 5c2:	74          	loadsp 16
 5c3:	61          	loadsp 68
 5c4:	72          	loadsp 8
 5c5:	69          	loadsp 100
 5c6:	5f          	storesp 60
 5c7:	63          	loadsp 76
 5c8:	6f          	loadsp 124
 5c9:	6c          	loadsp 112
 5ca:	70          	loadsp 0
 5cb:	66          	loadsp 88
 5cc:	31          	sub
 5cd:	00          	breakpoint
 5ce:	01          	.byte 1
 5cf:	26          	ulessthan
 5d0:	00          	breakpoint
 5d1:	00          	breakpoint
 5d2:	01          	.byte 1
 5d3:	b3          	im 51
 5d4:	01          	.byte 1
 5d5:	05          	add
 5d6:	03          	.byte 3
 5d7:	00          	breakpoint
 5d8:	00          	breakpoint
 5d9:	09          	not
 5da:	c4          	im -60
 5db:	02          	pushsp
 5dc:	61          	loadsp 68
 5dd:	74          	loadsp 16
 5de:	61          	loadsp 68
 5df:	72          	loadsp 8
 5e0:	69          	loadsp 100
 5e1:	5f          	storesp 60
 5e2:	63          	loadsp 76
 5e3:	6f          	loadsp 124
 5e4:	6c          	loadsp 112
 5e5:	70          	loadsp 0
 5e6:	66          	loadsp 88
 5e7:	32          	xor
 5e8:	00          	breakpoint
 5e9:	01          	.byte 1
 5ea:	27          	ulessthanorequal
 5eb:	00          	breakpoint
 5ec:	00          	breakpoint
 5ed:	01          	.byte 1
 5ee:	b3          	im 51
 5ef:	01          	.byte 1
 5f0:	05          	add
 5f1:	03          	.byte 3
 5f2:	00          	breakpoint
 5f3:	00          	breakpoint
 5f4:	09          	not
 5f5:	c8          	im -56
 5f6:	02          	pushsp
 5f7:	61          	loadsp 68
 5f8:	74          	loadsp 16
 5f9:	61          	loadsp 68
 5fa:	72          	loadsp 8
 5fb:	69          	loadsp 100
 5fc:	5f          	storesp 60
 5fd:	70          	loadsp 0
 5fe:	72          	loadsp 8
 5ff:	69          	loadsp 100
 600:	6f          	loadsp 124
 601:	72          	loadsp 8
 602:	00          	breakpoint
 603:	01          	.byte 1
 604:	28          	swap
 605:	00          	breakpoint
 606:	00          	breakpoint
 607:	01          	.byte 1
 608:	b3          	im 51
 609:	01          	.byte 1
 60a:	05          	add
 60b:	03          	.byte 3
 60c:	00          	breakpoint
 60d:	00          	breakpoint
 60e:	09          	not
 60f:	cc          	im -52
 610:	02          	pushsp
 611:	61          	loadsp 68
 612:	74          	loadsp 16
 613:	61          	loadsp 68
 614:	72          	loadsp 8
 615:	69          	loadsp 100
 616:	5f          	storesp 60
 617:	72          	loadsp 8
 618:	61          	loadsp 68
 619:	6e          	loadsp 120
 61a:	64          	loadsp 80
 61b:	6f          	loadsp 124
 61c:	6d          	loadsp 116
 61d:	00          	breakpoint
 61e:	01          	.byte 1
 61f:	29          	mult
 620:	00          	breakpoint
 621:	00          	breakpoint
 622:	01          	.byte 1
 623:	b3          	im 51
 624:	01          	.byte 1
 625:	05          	add
 626:	03          	.byte 3
 627:	00          	breakpoint
 628:	00          	breakpoint
 629:	09          	not
 62a:	d0          	im -48
 62b:	02          	pushsp
 62c:	61          	loadsp 68
 62d:	74          	loadsp 16
 62e:	61          	loadsp 68
 62f:	72          	loadsp 8
 630:	69          	loadsp 100
 631:	5f          	storesp 60
 632:	70          	loadsp 0
 633:	6f          	loadsp 124
 634:	72          	loadsp 8
 635:	74          	loadsp 16
 636:	61          	loadsp 68
 637:	00          	breakpoint
 638:	01          	.byte 1
 639:	2a          	lshiftright
 63a:	00          	breakpoint
 63b:	00          	breakpoint
 63c:	01          	.byte 1
 63d:	b3          	im 51
 63e:	01          	.byte 1
 63f:	05          	add
 640:	03          	.byte 3
 641:	00          	breakpoint
 642:	00          	breakpoint
 643:	09          	not
 644:	d4          	im -44
 645:	02          	pushsp
 646:	61          	loadsp 68
 647:	74          	loadsp 16
 648:	61          	loadsp 68
 649:	72          	loadsp 8
 64a:	69          	loadsp 100
 64b:	5f          	storesp 60
 64c:	70          	loadsp 0
 64d:	6f          	loadsp 124
 64e:	72          	loadsp 8
 64f:	74          	loadsp 16
 650:	62          	loadsp 72
 651:	00          	breakpoint
 652:	01          	.byte 1
 653:	2b          	ashiftleft
 654:	00          	breakpoint
 655:	00          	breakpoint
 656:	01          	.byte 1
 657:	b3          	im 51
 658:	01          	.byte 1
 659:	05          	add
 65a:	03          	.byte 3
 65b:	00          	breakpoint
 65c:	00          	breakpoint
 65d:	09          	not
 65e:	d8          	im -40
 65f:	02          	pushsp
 660:	61          	loadsp 68
 661:	74          	loadsp 16
 662:	61          	loadsp 68
 663:	72          	loadsp 8
 664:	69          	loadsp 100
 665:	5f          	storesp 60
 666:	74          	loadsp 16
 667:	72          	loadsp 8
 668:	69          	loadsp 100
 669:	67          	loadsp 92
 66a:	30          	neg
 66b:	00          	breakpoint
 66c:	01          	.byte 1
 66d:	2c          	ashiftright
 66e:	00          	breakpoint
 66f:	00          	breakpoint
 670:	01          	.byte 1
 671:	b3          	im 51
 672:	01          	.byte 1
 673:	05          	add
 674:	03          	.byte 3
 675:	00          	breakpoint
 676:	00          	breakpoint
 677:	09          	not
 678:	dc          	im -36
 679:	02          	pushsp
 67a:	61          	loadsp 68
 67b:	74          	loadsp 16
 67c:	61          	loadsp 68
 67d:	72          	loadsp 8
 67e:	69          	loadsp 100
 67f:	5f          	storesp 60
 680:	63          	loadsp 76
 681:	68          	loadsp 96
 682:	62          	loadsp 72
 683:	61          	loadsp 68
 684:	73          	loadsp 12
 685:	65          	loadsp 84
 686:	00          	breakpoint
 687:	01          	.byte 1
 688:	2d          	call
 689:	00          	breakpoint
 68a:	00          	breakpoint
 68b:	01          	.byte 1
 68c:	b3          	im 51
 68d:	01          	.byte 1
 68e:	05          	add
 68f:	03          	.byte 3
 690:	00          	breakpoint
 691:	00          	breakpoint
 692:	09          	not
 693:	e0          	im -32
 694:	02          	pushsp
 695:	61          	loadsp 68
 696:	74          	loadsp 16
 697:	61          	loadsp 68
 698:	72          	loadsp 8
 699:	69          	loadsp 100
 69a:	5f          	storesp 60
 69b:	63          	loadsp 76
 69c:	68          	loadsp 96
 69d:	61          	loadsp 68
 69e:	63          	loadsp 76
 69f:	74          	loadsp 16
 6a0:	6c          	loadsp 112
 6a1:	00          	breakpoint
 6a2:	01          	.byte 1
 6a3:	2e          	eq
 6a4:	00          	breakpoint
 6a5:	00          	breakpoint
 6a6:	01          	.byte 1
 6a7:	b3          	im 51
 6a8:	01          	.byte 1
 6a9:	05          	add
 6aa:	03          	.byte 3
 6ab:	00          	breakpoint
 6ac:	00          	breakpoint
 6ad:	09          	not
 6ae:	e4          	im -28
 6af:	02          	pushsp
 6b0:	61          	loadsp 68
 6b1:	74          	loadsp 16
 6b2:	61          	loadsp 68
 6b3:	72          	loadsp 8
 6b4:	69          	loadsp 100
 6b5:	5f          	storesp 60
 6b6:	64          	loadsp 80
 6b7:	6d          	loadsp 116
 6b8:	61          	loadsp 68
 6b9:	63          	loadsp 76
 6ba:	74          	loadsp 16
 6bb:	6c          	loadsp 112
 6bc:	00          	breakpoint
 6bd:	01          	.byte 1
 6be:	2f          	neq
 6bf:	00          	breakpoint
 6c0:	00          	breakpoint
 6c1:	01          	.byte 1
 6c2:	b3          	im 51
 6c3:	01          	.byte 1
 6c4:	05          	add
 6c5:	03          	.byte 3
 6c6:	00          	breakpoint
 6c7:	00          	breakpoint
 6c8:	09          	not
 6c9:	e8          	im -24
 6ca:	02          	pushsp
 6cb:	61          	loadsp 68
 6cc:	74          	loadsp 16
 6cd:	61          	loadsp 68
 6ce:	72          	loadsp 8
 6cf:	69          	loadsp 100
 6d0:	5f          	storesp 60
 6d1:	73          	loadsp 12
 6d2:	6b          	loadsp 108
 6d3:	63          	loadsp 76
 6d4:	74          	loadsp 16
 6d5:	6c          	loadsp 112
 6d6:	00          	breakpoint
 6d7:	01          	.byte 1
 6d8:	30          	neg
 6d9:	00          	breakpoint
 6da:	00          	breakpoint
 6db:	01          	.byte 1
 6dc:	b3          	im 51
 6dd:	01          	.byte 1
 6de:	05          	add
 6df:	03          	.byte 3
 6e0:	00          	breakpoint
 6e1:	00          	breakpoint
 6e2:	09          	not
 6e3:	ec          	im -20
	...
Disassembly of section .debug_line:

00000000 <.Ldebug_line0>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	01          	.byte 1
   3:	7c          	loadsp 48
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	24          	lessthan
   a:	01          	.byte 1
   b:	01          	.byte 1
   c:	f6          	im -10
   d:	f5          	im -11
   e:	0a          	flip
   f:	00          	breakpoint
  10:	01          	.byte 1
  11:	01          	.byte 1
  12:	01          	.byte 1
  13:	01          	.byte 1
  14:	00          	breakpoint
  15:	00          	breakpoint
  16:	00          	breakpoint
  17:	01          	.byte 1
  18:	00          	breakpoint
  19:	6d          	loadsp 116
  1a:	61          	loadsp 68
  1b:	69          	loadsp 100
  1c:	6e          	loadsp 120
  1d:	2e          	eq
  1e:	63          	loadsp 76
  1f:	00          	breakpoint
  20:	00          	breakpoint
  21:	00          	breakpoint
  22:	00          	breakpoint
  23:	72          	loadsp 8
  24:	65          	loadsp 84
  25:	67          	loadsp 92
  26:	73          	loadsp 12
  27:	2e          	eq
  28:	68          	loadsp 96
  29:	00          	breakpoint
  2a:	00          	breakpoint
  2b:	00          	breakpoint
  2c:	00          	breakpoint
  2d:	00          	breakpoint
  2e:	00          	breakpoint
  2f:	05          	add
  30:	02          	pushsp
  31:	00          	breakpoint
  32:	00          	breakpoint
  33:	04          	poppc
  34:	b1          	im 49
  35:	19          	addsp 36
  36:	00          	breakpoint
  37:	05          	add
  38:	02          	pushsp
  39:	00          	breakpoint
  3a:	00          	breakpoint
  3b:	04          	poppc
  3c:	bd          	im 61
  3d:	16          	addsp 24
  3e:	00          	breakpoint
  3f:	05          	add
  40:	02          	pushsp
  41:	00          	breakpoint
  42:	00          	breakpoint
  43:	04          	poppc
  44:	d6          	im -42
  45:	15          	addsp 20
  46:	00          	breakpoint
  47:	05          	add
  48:	02          	pushsp
  49:	00          	breakpoint
  4a:	00          	breakpoint
  4b:	04          	poppc
  4c:	e8          	im -24
  4d:	15          	addsp 20
  4e:	00          	breakpoint
  4f:	05          	add
  50:	02          	pushsp
  51:	00          	breakpoint
  52:	00          	breakpoint
  53:	04          	poppc
  54:	f0          	im -16
  55:	17          	addsp 28
  56:	00          	breakpoint
  57:	05          	add
  58:	02          	pushsp
  59:	00          	breakpoint
  5a:	00          	breakpoint
  5b:	04          	poppc
  5c:	fc          	im -4
  5d:	15          	addsp 20
  5e:	00          	breakpoint
  5f:	05          	add
  60:	02          	pushsp
  61:	00          	breakpoint
  62:	00          	breakpoint
  63:	05          	add
  64:	05          	add
  65:	18          	addsp 32
  66:	00          	breakpoint
  67:	05          	add
  68:	02          	pushsp
  69:	00          	breakpoint
  6a:	00          	breakpoint
  6b:	05          	add
  6c:	10          	addsp 0
  6d:	15          	addsp 20
  6e:	00          	breakpoint
  6f:	05          	add
  70:	02          	pushsp
  71:	00          	breakpoint
  72:	00          	breakpoint
  73:	05          	add
  74:	17          	addsp 28
  75:	17          	addsp 28
  76:	00          	breakpoint
  77:	05          	add
  78:	02          	pushsp
  79:	00          	breakpoint
  7a:	00          	breakpoint
  7b:	05          	add
  7c:	30          	neg
  7d:	17          	addsp 28
  7e:	00          	breakpoint
  7f:	05          	add
  80:	02          	pushsp
  81:	00          	breakpoint
  82:	00          	breakpoint
  83:	05          	add
  84:	3b          	pushpc
  85:	11          	addsp 4
  86:	00          	breakpoint
  87:	05          	add
  88:	02          	pushsp
  89:	00          	breakpoint
  8a:	00          	breakpoint
  8b:	05          	add
  8c:	4d          	storesp 116
  8d:	1a          	addsp 40
  8e:	00          	breakpoint
  8f:	05          	add
  90:	02          	pushsp
  91:	00          	breakpoint
  92:	00          	breakpoint
  93:	05          	add
  94:	58          	storesp 32
  95:	15          	addsp 20
  96:	00          	breakpoint
  97:	05          	add
  98:	02          	pushsp
  99:	00          	breakpoint
  9a:	00          	breakpoint
  9b:	05          	add
  9c:	63          	loadsp 76
  9d:	16          	addsp 24
  9e:	00          	breakpoint
  9f:	05          	add
  a0:	02          	pushsp
  a1:	00          	breakpoint
  a2:	00          	breakpoint
  a3:	05          	add
  a4:	7c          	loadsp 48
  a5:	16          	addsp 24
  a6:	00          	breakpoint
  a7:	05          	add
  a8:	02          	pushsp
  a9:	00          	breakpoint
  aa:	00          	breakpoint
  ab:	05          	add
  ac:	87          	im 7
  ad:	12          	addsp 8
  ae:	00          	breakpoint
  af:	05          	add
  b0:	02          	pushsp
  b1:	00          	breakpoint
  b2:	00          	breakpoint
  b3:	05          	add
  b4:	99          	im 25
  b5:	19          	addsp 36
  b6:	00          	breakpoint
  b7:	05          	add
  b8:	02          	pushsp
  b9:	00          	breakpoint
  ba:	00          	breakpoint
  bb:	05          	add
  bc:	a0          	im 32
  bd:	15          	addsp 20
  be:	00          	breakpoint
  bf:	05          	add
  c0:	02          	pushsp
  c1:	00          	breakpoint
  c2:	00          	breakpoint
  c3:	05          	add
  c4:	ab          	im 43
  c5:	17          	addsp 28
  c6:	00          	breakpoint
  c7:	05          	add
  c8:	02          	pushsp
  c9:	00          	breakpoint
  ca:	00          	breakpoint
  cb:	05          	add
  cc:	b3          	im 51
  cd:	17          	addsp 28
  ce:	00          	breakpoint
  cf:	05          	add
  d0:	02          	pushsp
  d1:	00          	breakpoint
  d2:	00          	breakpoint
  d3:	05          	add
  d4:	bf          	im 63
  d5:	15          	addsp 20
  d6:	00          	breakpoint
  d7:	05          	add
  d8:	02          	pushsp
  d9:	00          	breakpoint
  da:	00          	breakpoint
  db:	05          	add
  dc:	cc          	im -52
  dd:	15          	addsp 20
  de:	00          	breakpoint
  df:	05          	add
  e0:	02          	pushsp
  e1:	00          	breakpoint
  e2:	00          	breakpoint
  e3:	05          	add
  e4:	da          	im -38
  e5:	15          	addsp 20
  e6:	00          	breakpoint
  e7:	05          	add
  e8:	02          	pushsp
  e9:	00          	breakpoint
  ea:	00          	breakpoint
  eb:	05          	add
  ec:	ee          	im -18
  ed:	16          	addsp 24
  ee:	00          	breakpoint
  ef:	05          	add
  f0:	02          	pushsp
  f1:	00          	breakpoint
  f2:	00          	breakpoint
  f3:	06          	and
  f4:	00          	breakpoint
  f5:	16          	addsp 24
  f6:	00          	breakpoint
  f7:	05          	add
  f8:	02          	pushsp
  f9:	00          	breakpoint
  fa:	00          	breakpoint
  fb:	06          	and
  fc:	08          	load
  fd:	17          	addsp 28
  fe:	00          	breakpoint
  ff:	05          	add
 100:	02          	pushsp
 101:	00          	breakpoint
 102:	00          	breakpoint
 103:	06          	and
 104:	14          	addsp 16
 105:	15          	addsp 20
 106:	00          	breakpoint
 107:	05          	add
 108:	02          	pushsp
 109:	00          	breakpoint
 10a:	00          	breakpoint
 10b:	06          	and
 10c:	21          	.byte 33
 10d:	15          	addsp 20
 10e:	00          	breakpoint
 10f:	05          	add
 110:	02          	pushsp
 111:	00          	breakpoint
 112:	00          	breakpoint
 113:	06          	and
 114:	2a          	lshiftright
 115:	15          	addsp 20
 116:	00          	breakpoint
 117:	05          	add
 118:	02          	pushsp
 119:	00          	breakpoint
 11a:	00          	breakpoint
 11b:	06          	and
 11c:	3e          	halfmult
 11d:	16          	addsp 24
 11e:	00          	breakpoint
 11f:	05          	add
 120:	02          	pushsp
 121:	00          	breakpoint
 122:	00          	breakpoint
 123:	06          	and
 124:	50          	storesp 0
 125:	16          	addsp 24
 126:	00          	breakpoint
 127:	05          	add
 128:	02          	pushsp
 129:	00          	breakpoint
 12a:	00          	breakpoint
 12b:	06          	and
 12c:	58          	storesp 32
 12d:	17          	addsp 28
 12e:	00          	breakpoint
 12f:	05          	add
 130:	02          	pushsp
 131:	00          	breakpoint
 132:	00          	breakpoint
 133:	06          	and
 134:	64          	loadsp 80
 135:	15          	addsp 20
 136:	00          	breakpoint
 137:	05          	add
 138:	02          	pushsp
 139:	00          	breakpoint
 13a:	00          	breakpoint
 13b:	06          	and
 13c:	6d          	loadsp 116
 13d:	15          	addsp 20
 13e:	00          	breakpoint
 13f:	05          	add
 140:	02          	pushsp
 141:	00          	breakpoint
 142:	00          	breakpoint
 143:	06          	and
 144:	76          	loadsp 24
 145:	15          	addsp 20
 146:	00          	breakpoint
 147:	05          	add
 148:	02          	pushsp
 149:	00          	breakpoint
 14a:	00          	breakpoint
 14b:	06          	and
 14c:	7b          	loadsp 44
 14d:	17          	addsp 28
 14e:	00          	breakpoint
 14f:	05          	add
 150:	02          	pushsp
 151:	00          	breakpoint
 152:	00          	breakpoint
 153:	06          	and
 154:	80          	im 0
 155:	15          	addsp 20
 156:	00          	breakpoint
 157:	05          	add
 158:	02          	pushsp
 159:	00          	breakpoint
 15a:	00          	breakpoint
 15b:	06          	and
 15c:	87          	im 7
 15d:	15          	addsp 20
 15e:	00          	breakpoint
 15f:	05          	add
 160:	02          	pushsp
 161:	00          	breakpoint
 162:	00          	breakpoint
 163:	06          	and
 164:	8a          	im 10
 165:	15          	addsp 20
 166:	00          	breakpoint
 167:	05          	add
 168:	02          	pushsp
 169:	00          	breakpoint
 16a:	00          	breakpoint
 16b:	06          	and
 16c:	8f          	im 15
 16d:	15          	addsp 20
 16e:	00          	breakpoint
 16f:	05          	add
 170:	02          	pushsp
 171:	00          	breakpoint
 172:	00          	breakpoint
 173:	06          	and
 174:	94          	im 20
 175:	15          	addsp 20
 176:	00          	breakpoint
 177:	05          	add
 178:	02          	pushsp
 179:	00          	breakpoint
 17a:	00          	breakpoint
 17b:	06          	and
 17c:	96          	im 22
 17d:	00          	breakpoint
 17e:	01          	.byte 1
 17f:	01          	.byte 1
 180:	00          	breakpoint
 181:	00          	breakpoint
 182:	00          	breakpoint
 183:	16          	addsp 24
 184:	00          	breakpoint
 185:	02          	pushsp
 186:	00          	breakpoint
 187:	00          	breakpoint
 188:	00          	breakpoint
 189:	10          	addsp 0
 18a:	01          	.byte 1
 18b:	01          	.byte 1
 18c:	fb          	im -5
 18d:	0e          	.byte 14
 18e:	0a          	flip
 18f:	00          	breakpoint
 190:	01          	.byte 1
 191:	01          	.byte 1
 192:	01          	.byte 1
 193:	01          	.byte 1
 194:	00          	breakpoint
 195:	00          	breakpoint
 196:	00          	breakpoint
 197:	01          	.byte 1
	...

0000019a <.Ldebug_line0>:
 19a:	00          	breakpoint
 19b:	00          	breakpoint
 19c:	00          	breakpoint
 19d:	2a          	lshiftright
 19e:	00          	breakpoint
 19f:	02          	pushsp
 1a0:	00          	breakpoint
 1a1:	00          	breakpoint
 1a2:	00          	breakpoint
 1a3:	1a          	addsp 40
 1a4:	01          	.byte 1
 1a5:	01          	.byte 1
 1a6:	f6          	im -10
 1a7:	f5          	im -11
 1a8:	0a          	flip
 1a9:	00          	breakpoint
 1aa:	01          	.byte 1
 1ab:	01          	.byte 1
 1ac:	01          	.byte 1
 1ad:	01          	.byte 1
 1ae:	00          	breakpoint
 1af:	00          	breakpoint
 1b0:	00          	breakpoint
 1b1:	01          	.byte 1
 1b2:	00          	breakpoint
 1b3:	72          	loadsp 8
 1b4:	65          	loadsp 84
 1b5:	67          	loadsp 92
 1b6:	73          	loadsp 12
 1b7:	2e          	eq
 1b8:	63          	loadsp 76
 1b9:	00          	breakpoint
 1ba:	00          	breakpoint
 1bb:	00          	breakpoint
 1bc:	00          	breakpoint
 1bd:	00          	breakpoint
 1be:	00          	breakpoint
 1bf:	05          	add
 1c0:	02          	pushsp
 1c1:	00          	breakpoint
 1c2:	00          	breakpoint
 1c3:	06          	and
 1c4:	96          	im 22
 1c5:	00          	breakpoint
 1c6:	01          	.byte 1
 1c7:	01          	.byte 1
 1c8:	00          	breakpoint
 1c9:	00          	breakpoint
 1ca:	00          	breakpoint
 1cb:	16          	addsp 24
 1cc:	00          	breakpoint
 1cd:	02          	pushsp
 1ce:	00          	breakpoint
 1cf:	00          	breakpoint
 1d0:	00          	breakpoint
 1d1:	10          	addsp 0
 1d2:	01          	.byte 1
 1d3:	01          	.byte 1
 1d4:	fb          	im -5
 1d5:	0e          	.byte 14
 1d6:	0a          	flip
 1d7:	00          	breakpoint
 1d8:	01          	.byte 1
 1d9:	01          	.byte 1
 1da:	01          	.byte 1
 1db:	01          	.byte 1
 1dc:	00          	breakpoint
 1dd:	00          	breakpoint
 1de:	00          	breakpoint
 1df:	01          	.byte 1
	...
Disassembly of section .debug_frame:

00000000 <.Lframe0>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	00          	breakpoint
   3:	10          	addsp 0
   4:	ff          	im -1
   5:	ff          	im -1
   6:	ff          	im -1
   7:	ff          	im -1
   8:	01          	.byte 1
   9:	00          	breakpoint
   a:	01          	.byte 1
   b:	7c          	loadsp 48
   c:	24          	lessthan
   d:	0c          	store
   e:	20          	.byte 32
   f:	04          	poppc
  10:	a4          	im 36
  11:	01          	.byte 1
  12:	00          	breakpoint
  13:	00          	breakpoint
  14:	00          	breakpoint
  15:	00          	breakpoint
  16:	00          	breakpoint
  17:	1c          	addsp 48
  18:	00          	breakpoint
  19:	00          	breakpoint
  1a:	00          	breakpoint
  1b:	00          	breakpoint
  1c:	00          	breakpoint
  1d:	00          	breakpoint
  1e:	04          	poppc
  1f:	b1          	im 49
  20:	00          	breakpoint
  21:	00          	breakpoint
  22:	00          	breakpoint
  23:	4e          	storesp 120
  24:	04          	poppc
  25:	00          	breakpoint
  26:	00          	breakpoint
  27:	00          	breakpoint
  28:	06          	and
  29:	0e          	.byte 14
  2a:	08          	load
  2b:	83          	im 3
  2c:	02          	pushsp
  2d:	04          	poppc
  2e:	00          	breakpoint
  2f:	00          	breakpoint
  30:	00          	breakpoint
  31:	07          	or
  32:	0d          	popsp
  33:	03          	.byte 3
  34:	00          	breakpoint
  35:	00          	breakpoint
  36:	00          	breakpoint
  37:	1c          	addsp 48
  38:	00          	breakpoint
  39:	00          	breakpoint
  3a:	00          	breakpoint
  3b:	00          	breakpoint
  3c:	00          	breakpoint
  3d:	00          	breakpoint
  3e:	04          	poppc
  3f:	f0          	im -16
  40:	00          	breakpoint
  41:	00          	breakpoint
  42:	01          	.byte 1
  43:	01          	.byte 1
  44:	04          	poppc
  45:	00          	breakpoint
  46:	00          	breakpoint
  47:	00          	breakpoint
  48:	06          	and
  49:	0e          	.byte 14
  4a:	08          	load
  4b:	83          	im 3
  4c:	02          	pushsp
  4d:	04          	poppc
  4e:	00          	breakpoint
  4f:	00          	breakpoint
  50:	00          	breakpoint
  51:	07          	or
  52:	0d          	popsp
  53:	03          	.byte 3
  54:	00          	breakpoint
  55:	00          	breakpoint
  56:	00          	breakpoint
  57:	1c          	addsp 48
  58:	00          	breakpoint
  59:	00          	breakpoint
  5a:	00          	breakpoint
  5b:	00          	breakpoint
  5c:	00          	breakpoint
  5d:	00          	breakpoint
  5e:	05          	add
  5f:	b3          	im 51
  60:	00          	breakpoint
  61:	00          	breakpoint
  62:	00          	breakpoint
  63:	74          	loadsp 16
  64:	04          	poppc
  65:	00          	breakpoint
  66:	00          	breakpoint
  67:	00          	breakpoint
  68:	06          	and
  69:	0e          	.byte 14
  6a:	08          	load
  6b:	83          	im 3
  6c:	02          	pushsp
  6d:	04          	poppc
  6e:	00          	breakpoint
  6f:	00          	breakpoint
  70:	00          	breakpoint
  71:	07          	or
  72:	0d          	popsp
  73:	03          	.byte 3
  74:	00          	breakpoint
  75:	00          	breakpoint
  76:	00          	breakpoint
  77:	1c          	addsp 48
  78:	00          	breakpoint
  79:	00          	breakpoint
  7a:	00          	breakpoint
  7b:	00          	breakpoint
  7c:	00          	breakpoint
  7d:	00          	breakpoint
  7e:	06          	and
  7f:	08          	load
  80:	00          	breakpoint
  81:	00          	breakpoint
  82:	00          	breakpoint
  83:	6f          	loadsp 124
  84:	04          	poppc
  85:	00          	breakpoint
  86:	00          	breakpoint
  87:	00          	breakpoint
  88:	06          	and
  89:	0e          	.byte 14
  8a:	08          	load
  8b:	83          	im 3
  8c:	02          	pushsp
  8d:	04          	poppc
  8e:	00          	breakpoint
  8f:	00          	breakpoint
  90:	00          	breakpoint
  91:	07          	or
  92:	0d          	popsp
  93:	03          	.byte 3
  94:	00          	breakpoint
  95:	00          	breakpoint
  96:	00          	breakpoint
  97:	1c          	addsp 48
  98:	00          	breakpoint
  99:	00          	breakpoint
  9a:	00          	breakpoint
  9b:	00          	breakpoint
  9c:	00          	breakpoint
  9d:	00          	breakpoint
  9e:	06          	and
  9f:	58          	storesp 32
  a0:	00          	breakpoint
  a1:	00          	breakpoint
  a2:	00          	breakpoint
  a3:	5c          	storesp 48
  a4:	04          	poppc
  a5:	00          	breakpoint
  a6:	00          	breakpoint
  a7:	00          	breakpoint
  a8:	06          	and
  a9:	0e          	.byte 14
  aa:	08          	load
  ab:	83          	im 3
  ac:	02          	pushsp
  ad:	04          	poppc
  ae:	00          	breakpoint
  af:	00          	breakpoint
  b0:	00          	breakpoint
  b1:	07          	or
  b2:	0d          	popsp
  b3:	03          	.byte 3
Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	00          	breakpoint
   3:	53          	storesp 12
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	00          	breakpoint
   a:	00          	breakpoint
   b:	00          	breakpoint
   c:	02          	pushsp
   d:	1c          	addsp 48
   e:	00          	breakpoint
   f:	00          	breakpoint
  10:	00          	breakpoint
  11:	5f          	storesp 60
  12:	77          	loadsp 28
  13:	61          	loadsp 68
  14:	69          	loadsp 100
  15:	74          	loadsp 16
  16:	5f          	storesp 60
  17:	75          	loadsp 20
  18:	73          	loadsp 12
  19:	00          	breakpoint
  1a:	00          	breakpoint
  1b:	00          	breakpoint
  1c:	00          	breakpoint
  1d:	aa          	im 42
  1e:	63          	loadsp 76
  1f:	6c          	loadsp 112
  20:	65          	loadsp 84
  21:	61          	loadsp 68
  22:	72          	loadsp 8
  23:	5f          	storesp 60
  24:	36          	mod
  25:	34          	storeb
  26:	6b          	loadsp 108
  27:	5f          	storesp 60
  28:	72          	loadsp 8
  29:	61          	loadsp 68
  2a:	6d          	loadsp 116
  2b:	00          	breakpoint
  2c:	00          	breakpoint
  2d:	00          	breakpoint
  2e:	00          	breakpoint
  2f:	de          	im -34
  30:	72          	loadsp 8
  31:	65          	loadsp 84
  32:	73          	loadsp 12
  33:	65          	loadsp 84
  34:	74          	loadsp 16
  35:	5f          	storesp 60
  36:	36          	mod
  37:	35          	div
  38:	30          	neg
  39:	32          	xor
  3a:	00          	breakpoint
  3b:	00          	breakpoint
  3c:	00          	breakpoint
  3d:	01          	.byte 1
  3e:	1e          	addsp 56
  3f:	70          	loadsp 0
  40:	61          	loadsp 68
  41:	75          	loadsp 20
  42:	73          	loadsp 12
  43:	65          	loadsp 84
  44:	5f          	storesp 60
  45:	36          	mod
  46:	35          	div
  47:	30          	neg
  48:	32          	xor
  49:	00          	breakpoint
  4a:	00          	breakpoint
  4b:	00          	breakpoint
  4c:	01          	.byte 1
  4d:	5c          	storesp 48
  4e:	6d          	loadsp 116
  4f:	61          	loadsp 68
  50:	69          	loadsp 100
  51:	6e          	loadsp 120
  52:	00          	breakpoint
  53:	00          	breakpoint
  54:	00          	breakpoint
  55:	00          	breakpoint
  56:	00          	breakpoint
  57:	00          	breakpoint
  58:	00          	breakpoint
  59:	02          	pushsp
  5a:	b9          	im 57
  5b:	00          	breakpoint
  5c:	02          	pushsp
  5d:	00          	breakpoint
  5e:	00          	breakpoint
  5f:	02          	pushsp
  60:	1c          	addsp 48
  61:	00          	breakpoint
  62:	00          	breakpoint
  63:	04          	poppc
  64:	c9          	im -55
  65:	00          	breakpoint
  66:	00          	breakpoint
  67:	00          	breakpoint
  68:	5f          	storesp 60
  69:	7a          	loadsp 40
  6a:	70          	loadsp 0
  6b:	75          	loadsp 20
  6c:	5f          	storesp 60
  6d:	63          	loadsp 76
  6e:	6f          	loadsp 124
  6f:	6e          	loadsp 120
  70:	66          	loadsp 88
  71:	69          	loadsp 100
  72:	67          	loadsp 92
  73:	00          	breakpoint
  74:	00          	breakpoint
  75:	00          	breakpoint
  76:	00          	breakpoint
  77:	8a          	im 10
  78:	7a          	loadsp 40
  79:	70          	loadsp 0
  7a:	75          	loadsp 20
  7b:	5f          	storesp 60
  7c:	70          	loadsp 0
  7d:	61          	loadsp 68
  7e:	75          	loadsp 20
  7f:	73          	loadsp 12
  80:	65          	loadsp 84
  81:	00          	breakpoint
  82:	00          	breakpoint
  83:	00          	breakpoint
  84:	00          	breakpoint
  85:	a2          	im 34
  86:	7a          	loadsp 40
  87:	70          	loadsp 0
  88:	75          	loadsp 20
  89:	5f          	storesp 60
  8a:	73          	loadsp 12
  8b:	77          	loadsp 28
  8c:	69          	loadsp 100
  8d:	74          	loadsp 16
  8e:	63          	loadsp 76
  8f:	68          	loadsp 96
  90:	65          	loadsp 84
  91:	73          	loadsp 12
  92:	00          	breakpoint
  93:	00          	breakpoint
  94:	00          	breakpoint
  95:	00          	breakpoint
  96:	bd          	im 61
  97:	7a          	loadsp 40
  98:	70          	loadsp 0
  99:	75          	loadsp 20
  9a:	5f          	storesp 60
  9b:	6b          	loadsp 108
  9c:	65          	loadsp 84
  9d:	79          	loadsp 36
  9e:	00          	breakpoint
  9f:	00          	breakpoint
  a0:	00          	breakpoint
  a1:	00          	breakpoint
  a2:	d3          	im -45
  a3:	7a          	loadsp 40
  a4:	70          	loadsp 0
  a5:	75          	loadsp 20
  a6:	5f          	storesp 60
  a7:	6c          	loadsp 112
  a8:	65          	loadsp 84
  a9:	64          	loadsp 80
  aa:	67          	loadsp 92
  ab:	00          	breakpoint
  ac:	00          	breakpoint
  ad:	00          	breakpoint
  ae:	00          	breakpoint
  af:	ea          	im -22
  b0:	7a          	loadsp 40
  b1:	70          	loadsp 0
  b2:	75          	loadsp 20
  b3:	5f          	storesp 60
  b4:	6c          	loadsp 112
  b5:	65          	loadsp 84
  b6:	64          	loadsp 80
  b7:	72          	loadsp 8
  b8:	00          	breakpoint
  b9:	00          	breakpoint
  ba:	00          	breakpoint
  bb:	01          	.byte 1
  bc:	01          	.byte 1
  bd:	7a          	loadsp 40
  be:	70          	loadsp 0
  bf:	75          	loadsp 20
  c0:	5f          	storesp 60
  c1:	73          	loadsp 12
  c2:	70          	loadsp 0
  c3:	69          	loadsp 100
  c4:	5f          	storesp 60
  c5:	64          	loadsp 80
  c6:	61          	loadsp 68
  c7:	74          	loadsp 16
  c8:	61          	loadsp 68
  c9:	00          	breakpoint
  ca:	00          	breakpoint
  cb:	00          	breakpoint
  cc:	01          	.byte 1
  cd:	1c          	addsp 48
  ce:	7a          	loadsp 40
  cf:	70          	loadsp 0
  d0:	75          	loadsp 20
  d1:	5f          	storesp 60
  d2:	73          	loadsp 12
  d3:	70          	loadsp 0
  d4:	69          	loadsp 100
  d5:	5f          	storesp 60
  d6:	73          	loadsp 12
  d7:	74          	loadsp 16
  d8:	61          	loadsp 68
  d9:	74          	loadsp 16
  da:	65          	loadsp 84
  db:	00          	breakpoint
  dc:	00          	breakpoint
  dd:	00          	breakpoint
  de:	01          	.byte 1
  df:	38          	neqbranch
  e0:	7a          	loadsp 40
  e1:	70          	loadsp 0
  e2:	75          	loadsp 20
  e3:	5f          	storesp 60
  e4:	73          	loadsp 12
  e5:	69          	loadsp 100
  e6:	6f          	loadsp 124
  e7:	00          	breakpoint
  e8:	00          	breakpoint
  e9:	00          	breakpoint
  ea:	01          	.byte 1
  eb:	4e          	storesp 120
  ec:	7a          	loadsp 40
  ed:	70          	loadsp 0
  ee:	75          	loadsp 20
  ef:	5f          	storesp 60
  f0:	62          	loadsp 72
  f1:	6f          	loadsp 124
  f2:	61          	loadsp 68
  f3:	72          	loadsp 8
  f4:	64          	loadsp 80
  f5:	00          	breakpoint
  f6:	00          	breakpoint
  f7:	00          	breakpoint
  f8:	01          	.byte 1
  f9:	66          	loadsp 88
  fa:	7a          	loadsp 40
  fb:	70          	loadsp 0
  fc:	75          	loadsp 20
  fd:	5f          	storesp 60
  fe:	68          	loadsp 96
  ff:	65          	loadsp 84
 100:	78          	loadsp 32
 101:	00          	breakpoint
 102:	00          	breakpoint
 103:	00          	breakpoint
 104:	01          	.byte 1
 105:	7c          	loadsp 48
 106:	7a          	loadsp 40
 107:	70          	loadsp 0
 108:	75          	loadsp 20
 109:	5f          	storesp 60
 10a:	73          	loadsp 12
 10b:	65          	loadsp 84
 10c:	63          	loadsp 76
 10d:	74          	loadsp 16
 10e:	6f          	loadsp 124
 10f:	72          	loadsp 8
 110:	00          	breakpoint
 111:	00          	breakpoint
 112:	00          	breakpoint
 113:	01          	.byte 1
 114:	95          	im 21
 115:	7a          	loadsp 40
 116:	70          	loadsp 0
 117:	75          	loadsp 20
 118:	5f          	storesp 60
 119:	70          	loadsp 0
 11a:	6f          	loadsp 124
 11b:	6b          	loadsp 108
 11c:	65          	loadsp 84
 11d:	79          	loadsp 36
 11e:	5f          	storesp 60
 11f:	61          	loadsp 68
 120:	75          	loadsp 20
 121:	64          	loadsp 80
 122:	66          	loadsp 88
 123:	30          	neg
 124:	00          	breakpoint
 125:	00          	breakpoint
 126:	00          	breakpoint
 127:	01          	.byte 1
 128:	cf          	im -49
 129:	7a          	loadsp 40
 12a:	70          	loadsp 0
 12b:	75          	loadsp 20
 12c:	5f          	storesp 60
 12d:	70          	loadsp 0
 12e:	6f          	loadsp 124
 12f:	6b          	loadsp 108
 130:	65          	loadsp 84
 131:	79          	loadsp 36
 132:	5f          	storesp 60
 133:	61          	loadsp 68
 134:	75          	loadsp 20
 135:	64          	loadsp 80
 136:	63          	loadsp 76
 137:	30          	neg
 138:	00          	breakpoint
 139:	00          	breakpoint
 13a:	00          	breakpoint
 13b:	01          	.byte 1
 13c:	ed          	im -19
 13d:	7a          	loadsp 40
 13e:	70          	loadsp 0
 13f:	75          	loadsp 20
 140:	5f          	storesp 60
 141:	70          	loadsp 0
 142:	6f          	loadsp 124
 143:	6b          	loadsp 108
 144:	65          	loadsp 84
 145:	79          	loadsp 36
 146:	5f          	storesp 60
 147:	61          	loadsp 68
 148:	75          	loadsp 20
 149:	64          	loadsp 80
 14a:	66          	loadsp 88
 14b:	31          	sub
 14c:	00          	breakpoint
 14d:	00          	breakpoint
 14e:	00          	breakpoint
 14f:	02          	pushsp
 150:	0b          	nop
 151:	7a          	loadsp 40
 152:	70          	loadsp 0
 153:	75          	loadsp 20
 154:	5f          	storesp 60
 155:	70          	loadsp 0
 156:	6f          	loadsp 124
 157:	6b          	loadsp 108
 158:	65          	loadsp 84
 159:	79          	loadsp 36
 15a:	5f          	storesp 60
 15b:	61          	loadsp 68
 15c:	75          	loadsp 20
 15d:	64          	loadsp 80
 15e:	63          	loadsp 76
 15f:	31          	sub
 160:	00          	breakpoint
 161:	00          	breakpoint
 162:	00          	breakpoint
 163:	02          	pushsp
 164:	29          	mult
 165:	7a          	loadsp 40
 166:	70          	loadsp 0
 167:	75          	loadsp 20
 168:	5f          	storesp 60
 169:	70          	loadsp 0
 16a:	6f          	loadsp 124
 16b:	6b          	loadsp 108
 16c:	65          	loadsp 84
 16d:	79          	loadsp 36
 16e:	5f          	storesp 60
 16f:	61          	loadsp 68
 170:	75          	loadsp 20
 171:	64          	loadsp 80
 172:	66          	loadsp 88
 173:	32          	xor
 174:	00          	breakpoint
 175:	00          	breakpoint
 176:	00          	breakpoint
 177:	02          	pushsp
 178:	47          	storesp 92
 179:	7a          	loadsp 40
 17a:	70          	loadsp 0
 17b:	75          	loadsp 20
 17c:	5f          	storesp 60
 17d:	70          	loadsp 0
 17e:	6f          	loadsp 124
 17f:	6b          	loadsp 108
 180:	65          	loadsp 84
 181:	79          	loadsp 36
 182:	5f          	storesp 60
 183:	61          	loadsp 68
 184:	75          	loadsp 20
 185:	64          	loadsp 80
 186:	63          	loadsp 76
 187:	32          	xor
 188:	00          	breakpoint
 189:	00          	breakpoint
 18a:	00          	breakpoint
 18b:	02          	pushsp
 18c:	65          	loadsp 84
 18d:	7a          	loadsp 40
 18e:	70          	loadsp 0
 18f:	75          	loadsp 20
 190:	5f          	storesp 60
 191:	70          	loadsp 0
 192:	6f          	loadsp 124
 193:	6b          	loadsp 108
 194:	65          	loadsp 84
 195:	79          	loadsp 36
 196:	5f          	storesp 60
 197:	61          	loadsp 68
 198:	75          	loadsp 20
 199:	64          	loadsp 80
 19a:	66          	loadsp 88
 19b:	33          	loadb
 19c:	00          	breakpoint
 19d:	00          	breakpoint
 19e:	00          	breakpoint
 19f:	02          	pushsp
 1a0:	83          	im 3
 1a1:	7a          	loadsp 40
 1a2:	70          	loadsp 0
 1a3:	75          	loadsp 20
 1a4:	5f          	storesp 60
 1a5:	70          	loadsp 0
 1a6:	6f          	loadsp 124
 1a7:	6b          	loadsp 108
 1a8:	65          	loadsp 84
 1a9:	79          	loadsp 36
 1aa:	5f          	storesp 60
 1ab:	61          	loadsp 68
 1ac:	75          	loadsp 20
 1ad:	64          	loadsp 80
 1ae:	63          	loadsp 76
 1af:	33          	loadb
 1b0:	00          	breakpoint
 1b1:	00          	breakpoint
 1b2:	00          	breakpoint
 1b3:	02          	pushsp
 1b4:	a1          	im 33
 1b5:	7a          	loadsp 40
 1b6:	70          	loadsp 0
 1b7:	75          	loadsp 20
 1b8:	5f          	storesp 60
 1b9:	70          	loadsp 0
 1ba:	6f          	loadsp 124
 1bb:	6b          	loadsp 108
 1bc:	65          	loadsp 84
 1bd:	79          	loadsp 36
 1be:	5f          	storesp 60
 1bf:	61          	loadsp 68
 1c0:	75          	loadsp 20
 1c1:	64          	loadsp 80
 1c2:	63          	loadsp 76
 1c3:	74          	loadsp 16
 1c4:	6c          	loadsp 112
 1c5:	00          	breakpoint
 1c6:	00          	breakpoint
 1c7:	00          	breakpoint
 1c8:	02          	pushsp
 1c9:	c0          	im -64
 1ca:	7a          	loadsp 40
 1cb:	70          	loadsp 0
 1cc:	75          	loadsp 20
 1cd:	5f          	storesp 60
 1ce:	70          	loadsp 0
 1cf:	6f          	loadsp 124
 1d0:	6b          	loadsp 108
 1d1:	65          	loadsp 84
 1d2:	79          	loadsp 36
 1d3:	5f          	storesp 60
 1d4:	73          	loadsp 12
 1d5:	6b          	loadsp 108
 1d6:	72          	loadsp 8
 1d7:	65          	loadsp 84
 1d8:	73          	loadsp 12
 1d9:	74          	loadsp 16
 1da:	00          	breakpoint
 1db:	00          	breakpoint
 1dc:	00          	breakpoint
 1dd:	02          	pushsp
 1de:	df          	im -33
 1df:	7a          	loadsp 40
 1e0:	70          	loadsp 0
 1e1:	75          	loadsp 20
 1e2:	5f          	storesp 60
 1e3:	70          	loadsp 0
 1e4:	6f          	loadsp 124
 1e5:	6b          	loadsp 108
 1e6:	65          	loadsp 84
 1e7:	79          	loadsp 36
 1e8:	5f          	storesp 60
 1e9:	73          	loadsp 12
 1ea:	65          	loadsp 84
 1eb:	72          	loadsp 8
 1ec:	6f          	loadsp 124
 1ed:	75          	loadsp 20
 1ee:	74          	loadsp 16
 1ef:	00          	breakpoint
 1f0:	00          	breakpoint
 1f1:	00          	breakpoint
 1f2:	02          	pushsp
 1f3:	fe          	im -2
 1f4:	7a          	loadsp 40
 1f5:	70          	loadsp 0
 1f6:	75          	loadsp 20
 1f7:	5f          	storesp 60
 1f8:	70          	loadsp 0
 1f9:	6f          	loadsp 124
 1fa:	6b          	loadsp 108
 1fb:	65          	loadsp 84
 1fc:	79          	loadsp 36
 1fd:	5f          	storesp 60
 1fe:	69          	loadsp 100
 1ff:	72          	loadsp 8
 200:	71          	loadsp 4
 201:	65          	loadsp 84
 202:	6e          	loadsp 120
 203:	00          	breakpoint
 204:	00          	breakpoint
 205:	00          	breakpoint
 206:	03          	.byte 3
 207:	1c          	addsp 48
 208:	7a          	loadsp 40
 209:	70          	loadsp 0
 20a:	75          	loadsp 20
 20b:	5f          	storesp 60
 20c:	70          	loadsp 0
 20d:	6f          	loadsp 124
 20e:	6b          	loadsp 108
 20f:	65          	loadsp 84
 210:	79          	loadsp 36
 211:	5f          	storesp 60
 212:	73          	loadsp 12
 213:	6b          	loadsp 108
 214:	63          	loadsp 76
 215:	74          	loadsp 16
 216:	6c          	loadsp 112
 217:	00          	breakpoint
 218:	00          	breakpoint
 219:	00          	breakpoint
 21a:	03          	.byte 3
 21b:	3a          	config
 21c:	61          	loadsp 68
 21d:	74          	loadsp 16
 21e:	61          	loadsp 68
 21f:	72          	loadsp 8
 220:	69          	loadsp 100
 221:	5f          	storesp 60
 222:	6e          	loadsp 120
 223:	6d          	loadsp 116
 224:	69          	loadsp 100
 225:	65          	loadsp 84
 226:	6e          	loadsp 120
 227:	00          	breakpoint
 228:	00          	breakpoint
 229:	00          	breakpoint
 22a:	03          	.byte 3
 22b:	54          	storesp 16
 22c:	61          	loadsp 68
 22d:	74          	loadsp 16
 22e:	61          	loadsp 68
 22f:	72          	loadsp 8
 230:	69          	loadsp 100
 231:	5f          	storesp 60
 232:	64          	loadsp 80
 233:	6c          	loadsp 112
 234:	69          	loadsp 100
 235:	73          	loadsp 12
 236:	74          	loadsp 16
 237:	6c          	loadsp 112
 238:	00          	breakpoint
 239:	00          	breakpoint
 23a:	00          	breakpoint
 23b:	03          	.byte 3
 23c:	6f          	loadsp 124
 23d:	61          	loadsp 68
 23e:	74          	loadsp 16
 23f:	61          	loadsp 68
 240:	72          	loadsp 8
 241:	69          	loadsp 100
 242:	5f          	storesp 60
 243:	64          	loadsp 80
 244:	6c          	loadsp 112
 245:	69          	loadsp 100
 246:	73          	loadsp 12
 247:	74          	loadsp 16
 248:	68          	loadsp 96
 249:	00          	breakpoint
 24a:	00          	breakpoint
 24b:	00          	breakpoint
 24c:	03          	.byte 3
 24d:	8a          	im 10
 24e:	61          	loadsp 68
 24f:	74          	loadsp 16
 250:	61          	loadsp 68
 251:	72          	loadsp 8
 252:	69          	loadsp 100
 253:	5f          	storesp 60
 254:	63          	loadsp 76
 255:	6f          	loadsp 124
 256:	6c          	loadsp 112
 257:	62          	loadsp 72
 258:	6b          	loadsp 108
 259:	00          	breakpoint
 25a:	00          	breakpoint
 25b:	00          	breakpoint
 25c:	03          	.byte 3
 25d:	a4          	im 36
 25e:	61          	loadsp 68
 25f:	74          	loadsp 16
 260:	61          	loadsp 68
 261:	72          	loadsp 8
 262:	69          	loadsp 100
 263:	5f          	storesp 60
 264:	63          	loadsp 76
 265:	6f          	loadsp 124
 266:	6c          	loadsp 112
 267:	70          	loadsp 0
 268:	66          	loadsp 88
 269:	31          	sub
 26a:	00          	breakpoint
 26b:	00          	breakpoint
 26c:	00          	breakpoint
 26d:	03          	.byte 3
 26e:	bf          	im 63
 26f:	61          	loadsp 68
 270:	74          	loadsp 16
 271:	61          	loadsp 68
 272:	72          	loadsp 8
 273:	69          	loadsp 100
 274:	5f          	storesp 60
 275:	63          	loadsp 76
 276:	6f          	loadsp 124
 277:	6c          	loadsp 112
 278:	70          	loadsp 0
 279:	66          	loadsp 88
 27a:	32          	xor
 27b:	00          	breakpoint
 27c:	00          	breakpoint
 27d:	00          	breakpoint
 27e:	03          	.byte 3
 27f:	da          	im -38
 280:	61          	loadsp 68
 281:	74          	loadsp 16
 282:	61          	loadsp 68
 283:	72          	loadsp 8
 284:	69          	loadsp 100
 285:	5f          	storesp 60
 286:	70          	loadsp 0
 287:	72          	loadsp 8
 288:	69          	loadsp 100
 289:	6f          	loadsp 124
 28a:	72          	loadsp 8
 28b:	00          	breakpoint
 28c:	00          	breakpoint
 28d:	00          	breakpoint
 28e:	03          	.byte 3
 28f:	f4          	im -12
 290:	61          	loadsp 68
 291:	74          	loadsp 16
 292:	61          	loadsp 68
 293:	72          	loadsp 8
 294:	69          	loadsp 100
 295:	5f          	storesp 60
 296:	72          	loadsp 8
 297:	61          	loadsp 68
 298:	6e          	loadsp 120
 299:	64          	loadsp 80
 29a:	6f          	loadsp 124
 29b:	6d          	loadsp 116
 29c:	00          	breakpoint
 29d:	00          	breakpoint
 29e:	00          	breakpoint
 29f:	04          	poppc
 2a0:	0f          	.byte 15
 2a1:	61          	loadsp 68
 2a2:	74          	loadsp 16
 2a3:	61          	loadsp 68
 2a4:	72          	loadsp 8
 2a5:	69          	loadsp 100
 2a6:	5f          	storesp 60
 2a7:	70          	loadsp 0
 2a8:	6f          	loadsp 124
 2a9:	72          	loadsp 8
 2aa:	74          	loadsp 16
 2ab:	61          	loadsp 68
 2ac:	00          	breakpoint
 2ad:	00          	breakpoint
 2ae:	00          	breakpoint
 2af:	04          	poppc
 2b0:	29          	mult
 2b1:	61          	loadsp 68
 2b2:	74          	loadsp 16
 2b3:	61          	loadsp 68
 2b4:	72          	loadsp 8
 2b5:	69          	loadsp 100
 2b6:	5f          	storesp 60
 2b7:	70          	loadsp 0
 2b8:	6f          	loadsp 124
 2b9:	72          	loadsp 8
 2ba:	74          	loadsp 16
 2bb:	62          	loadsp 72
 2bc:	00          	breakpoint
 2bd:	00          	breakpoint
 2be:	00          	breakpoint
 2bf:	04          	poppc
 2c0:	43          	storesp 76
 2c1:	61          	loadsp 68
 2c2:	74          	loadsp 16
 2c3:	61          	loadsp 68
 2c4:	72          	loadsp 8
 2c5:	69          	loadsp 100
 2c6:	5f          	storesp 60
 2c7:	74          	loadsp 16
 2c8:	72          	loadsp 8
 2c9:	69          	loadsp 100
 2ca:	67          	loadsp 92
 2cb:	30          	neg
 2cc:	00          	breakpoint
 2cd:	00          	breakpoint
 2ce:	00          	breakpoint
 2cf:	04          	poppc
 2d0:	5d          	storesp 52
 2d1:	61          	loadsp 68
 2d2:	74          	loadsp 16
 2d3:	61          	loadsp 68
 2d4:	72          	loadsp 8
 2d5:	69          	loadsp 100
 2d6:	5f          	storesp 60
 2d7:	63          	loadsp 76
 2d8:	68          	loadsp 96
 2d9:	62          	loadsp 72
 2da:	61          	loadsp 68
 2db:	73          	loadsp 12
 2dc:	65          	loadsp 84
 2dd:	00          	breakpoint
 2de:	00          	breakpoint
 2df:	00          	breakpoint
 2e0:	04          	poppc
 2e1:	78          	loadsp 32
 2e2:	61          	loadsp 68
 2e3:	74          	loadsp 16
 2e4:	61          	loadsp 68
 2e5:	72          	loadsp 8
 2e6:	69          	loadsp 100
 2e7:	5f          	storesp 60
 2e8:	63          	loadsp 76
 2e9:	68          	loadsp 96
 2ea:	61          	loadsp 68
 2eb:	63          	loadsp 76
 2ec:	74          	loadsp 16
 2ed:	6c          	loadsp 112
 2ee:	00          	breakpoint
 2ef:	00          	breakpoint
 2f0:	00          	breakpoint
 2f1:	04          	poppc
 2f2:	93          	im 19
 2f3:	61          	loadsp 68
 2f4:	74          	loadsp 16
 2f5:	61          	loadsp 68
 2f6:	72          	loadsp 8
 2f7:	69          	loadsp 100
 2f8:	5f          	storesp 60
 2f9:	64          	loadsp 80
 2fa:	6d          	loadsp 116
 2fb:	61          	loadsp 68
 2fc:	63          	loadsp 76
 2fd:	74          	loadsp 16
 2fe:	6c          	loadsp 112
 2ff:	00          	breakpoint
 300:	00          	breakpoint
 301:	00          	breakpoint
 302:	04          	poppc
 303:	ae          	im 46
 304:	61          	loadsp 68
 305:	74          	loadsp 16
 306:	61          	loadsp 68
 307:	72          	loadsp 8
 308:	69          	loadsp 100
 309:	5f          	storesp 60
 30a:	73          	loadsp 12
 30b:	6b          	loadsp 108
 30c:	63          	loadsp 76
 30d:	74          	loadsp 16
 30e:	6c          	loadsp 112
 30f:	00          	breakpoint
 310:	00          	breakpoint
 311:	00          	breakpoint
	...
Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	00          	breakpoint
   3:	1c          	addsp 48
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	00          	breakpoint
   a:	04          	poppc
   b:	00          	breakpoint
   c:	00          	breakpoint
   d:	00          	breakpoint
   e:	00          	breakpoint
   f:	00          	breakpoint
  10:	00          	breakpoint
  11:	00          	breakpoint
  12:	04          	poppc
  13:	b1          	im 49
  14:	00          	breakpoint
  15:	00          	breakpoint
  16:	02          	pushsp
  17:	8e          	im 14
	...
Disassembly of section .comment:

00000000 <.comment>:
   0:	00          	breakpoint
   1:	47          	storesp 92
   2:	43          	storesp 76
   3:	43          	storesp 76
   4:	3a          	config
   5:	20          	.byte 32
   6:	28          	swap
   7:	47          	storesp 92
   8:	4e          	storesp 120
   9:	55          	storesp 20
   a:	29          	mult
   b:	20          	.byte 32
   c:	33          	loadb
   d:	2e          	eq
   e:	34          	storeb
   f:	2e          	eq
  10:	32          	xor
  11:	00          	breakpoint
  12:	00          	breakpoint
  13:	47          	storesp 92
  14:	43          	storesp 76
  15:	43          	storesp 76
  16:	3a          	config
  17:	20          	.byte 32
  18:	28          	swap
  19:	47          	storesp 92
  1a:	4e          	storesp 120
  1b:	55          	storesp 20
  1c:	29          	mult
  1d:	20          	.byte 32
  1e:	33          	loadb
  1f:	2e          	eq
  20:	34          	storeb
  21:	2e          	eq
  22:	32          	xor
  23:	00          	breakpoint
  24:	00          	breakpoint
  25:	47          	storesp 92
  26:	43          	storesp 76
  27:	43          	storesp 76
  28:	3a          	config
  29:	20          	.byte 32
  2a:	28          	swap
  2b:	47          	storesp 92
  2c:	4e          	storesp 120
  2d:	55          	storesp 20
  2e:	29          	mult
  2f:	20          	.byte 32
  30:	33          	loadb
  31:	2e          	eq
  32:	34          	storeb
  33:	2e          	eq
  34:	32          	xor
  35:	00          	breakpoint
  36:	00          	breakpoint
  37:	47          	storesp 92
  38:	43          	storesp 76
  39:	43          	storesp 76
  3a:	3a          	config
  3b:	20          	.byte 32
  3c:	28          	swap
  3d:	47          	storesp 92
  3e:	4e          	storesp 120
  3f:	55          	storesp 20
  40:	29          	mult
  41:	20          	.byte 32
  42:	33          	loadb
  43:	2e          	eq
  44:	34          	storeb
  45:	2e          	eq
  46:	32          	xor
	...
