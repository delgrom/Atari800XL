diff -ur atari800core_v1_20140121_mcc216/address_decoder.vhdl atari800core_v1_20140312_mist/address_decoder.vhdl
--- atari800core_v1_20140121_mcc216/address_decoder.vhdl	2014-01-30 21:32:16.000000000 +0000
+++ atari800core_v1_20140312_mist/address_decoder.vhdl	2014-03-09 20:12:21.000000000 +0000
@@ -59,9 +59,11 @@
 	
 	reset_n : in std_logic;
 	
-	rom_select : in std_logic_vector(1 downto 0);
+	rom_select : in std_logic_vector(5 downto 0);
+	cart_select : in std_logic_vector(6 downto 0);
+	cart_activate : in std_logic;
 	
-	ram_select : in std_logic_vector(1 downto 0);
+	ram_select : in std_logic_vector(2 downto 0);
 	
 	CART_RD4 : in std_logic;
 	CART_RD5 : in std_logic;
@@ -88,7 +90,8 @@
 	PIA_RD_ENABLE : OUT STD_LOGIC; -- ... except PIA takes action on reads!
 	RAM_WR_ENABLE : OUT STD_LOGIC;	
 	PBI_WR_ENABLE : OUT STD_LOGIC;
-	
+	D6_WR_ENABLE : OUT STD_LOGIC;
+ 	
 	-- ROM and RAM have extended address busses to allow for bank switching etc.
 	ROM_ADDR : OUT STD_LOGIC_VECTOR(21 downto 0);
 	RAM_ADDR : OUT STD_LOGIC_VECTOR(18 downto 0);
@@ -147,12 +150,16 @@
 	signal notify_cpu : std_logic;
 	signal start_request : std_logic;
 	
+	signal extended_access_addr : std_logic;
 	signal extended_access_cpu_or_antic : std_logic;
 	signal extended_access_antic : std_logic;
 	signal extended_access_cpu: std_logic; -- 130XE and compy shop switch antic seperately
 	
 	signal extended_access_either: std_logic; -- RAMBO switches both together using CPU bit
 
+	signal extended_self_test : std_logic;
+	signal extended_bank : std_logic_vector(8 downto 0); -- ONLY "000" - "103" valid...
+	
 	-- even though we have 3 targets (flash, ram, rom) and 3 masters, only allow access to one a a time - simpler.
 	signal state_next : std_logic_vector(1 downto 0);
 	signal state_reg : std_logic_vector(1 downto 0);
@@ -173,6 +180,19 @@
 	signal fetch_wait_next : std_logic_vector(8 downto 0);
 	signal fetch_wait_reg : std_logic_vector(8 downto 0);	
 	
+	signal rom_in_ram : std_logic;
+	
+	signal antic_fetch_real_next : std_logic;
+	signal antic_fetch_real_reg : std_logic;
+	signal cpu_fetch_real_next : std_logic;
+	signal cpu_fetch_real_reg : std_logic;
+
+	signal SDRAM_CART_ADDR   : std_logic_vector(22 downto 0);
+	signal SDRAM_BASIC_ROM_ADDR  : std_logic_vector(22 downto 0);
+	signal SDRAM_OS_ROM_ADDR : std_logic_vector(22 downto 0);
+	
+	signal sdram_only_bank : std_logic;
+	
 BEGIN
 		-- register
 	process(clk,reset_n)
@@ -187,7 +207,10 @@
 			data_write_reg <= (others=> '0');
 			--sdram_request_reg <= '0';
 			fetch_wait_reg <= (others=>'0');
-		elsif (clk'event and clk='1') then
+
+			cpu_fetch_real_reg <= '0';
+			antic_fetch_real_reg <= '0';	
+	elsif (clk'event and clk='1') then
 			addr_reg <= addr_next;
 			state_reg <= state_next;
 			width_8bit_reg <= width_8bit_next;
@@ -197,6 +220,9 @@
 			data_write_reg <= data_WRITE_next;
 			--sdram_request_reg <= sdram_request_next;
 			fetch_wait_reg <= fetch_wait_next;
+			
+			cpu_fetch_real_reg <= cpu_fetch_real_next;
+			antic_fetch_real_reg <= antic_fetch_real_next;
 		end if;
 	end process;
 	
@@ -219,7 +245,7 @@
 	
 	-- state machine impl
 	fetch_priority <= ANTIC_FETCH&ZPU_FETCH&CPU_FETCH;
-	process(fetch_wait_reg, state_reg, addr_reg, data_write_reg, width_8bit_reg, width_16bit_reg, width_32bit_reg, write_enable_reg, fetch_priority, antic_addr, zpu_addr, cpu_addr, request_complete, zpu_8bit_write_enable,zpu_16bit_write_enable,zpu_32bit_write_enable,zpu_read_enable, cpu_write_n, CPU_WRITE_DATA, ZPU_WRITE_DATA)
+	process(fetch_wait_reg, state_reg, addr_reg, data_write_reg, width_8bit_reg, width_16bit_reg, width_32bit_reg, write_enable_reg, fetch_priority, antic_addr, zpu_addr, cpu_addr, request_complete, zpu_8bit_write_enable,zpu_16bit_write_enable,zpu_32bit_write_enable,zpu_read_enable, cpu_write_n, CPU_WRITE_DATA, ZPU_WRITE_DATA, antic_fetch_real_reg, cpu_fetch_real_reg)
 	begin
 		start_request <= '0';
 		notify_antic <= '0';
@@ -235,6 +261,9 @@
 		width_32bit_next <= width_32bit_reg;		
 		write_enable_next <= write_enable_reg;
 		
+		antic_fetch_real_next <= antic_fetch_real_reg;
+		cpu_fetch_real_next <= cpu_fetch_real_reg;
+		
 		case state_reg is
 			when state_idle =>
 				fetch_wait_next <= (others=>'0');
@@ -255,6 +284,7 @@
 					else
 						state_next <= state_waiting_antic;
 					end if;
+					antic_fetch_real_next <= '1';
 				when "010"|"011" => -- zpu wins (zpu usually accesses own ROM memory - this is NOT a zpu_fetch)
 					start_request <= '1';
 					addr_next <= zpu_ADDR;
@@ -282,6 +312,7 @@
 					else
 						state_next <= state_waiting_cpu;
 					end if;
+					cpu_fetch_real_next <= '1';
 				when "000" =>
 					-- no requests
 				end case;
@@ -312,7 +343,7 @@
 		
 	SDRAM_REQUEST <= sdram_chip_select;
 	--SDRAM_REQUEST <= sdram_request_next;
-	SDRAM_REFRESH <= fetch_wait_reg(7); -- TODO, BROKEN! antic_refresh;
+	SDRAM_REFRESH <= '0'; --fetch_wait_reg(7); -- TODO, BROKEN! antic_refresh;
 	SDRAM_READ_EN <= not(write_enable_next);
 	SDRAM_WRITE_EN <= write_enable_next;
 	
@@ -327,11 +358,78 @@
 	--sdram_request_next <= sdram_request_reg xor sdram_chip_select;	
 	
 	-- Calculate which memory area to use
+	extended_access_addr <= addr_next(14) and not(addr_next(15)); --0x4000 to 0x7fff
 	extended_access_cpu_or_antic <= extended_access_antic or extended_access_cpu;
-	extended_access_antic <= (antic_fetch and not(portb(5)));
-	extended_access_cpu <= not(antic_fetch) and not(portb(4));
+	extended_access_antic <= (extended_access_addr and antic_fetch_real_next and not(portb(5)));
+	extended_access_cpu <= (extended_access_addr and cpu_fetch_real_next and not(portb(4)));
+	extended_access_either <= extended_access_addr and not(portb(4));
+	sdram_only_bank <= or_reduce(extended_bank(8 downto 5));
+	
+	process(extended_access_cpu_or_antic,extended_access_either,extended_access_addr,addr_next,ram_select,portb)
+	begin	
+		extended_bank <= "0000000"&addr_next(15 downto 14);
+		extended_self_test <= '1';
+		
+		case ram_select is
+			when "000" => -- 64k
+				-- default
+			when "001" => -- 128k			
+				if (extended_access_cpu_or_antic='1') then
+					extended_bank(2 downto 0) <= '1'&portb(3 downto 2);
+				end if;
+			when "010" => -- 320k compy shop
+				if (extended_access_cpu_or_antic='1') then
+					extended_bank(4 downto 0) <= '1'&portb(7 downto 6)&portb(3 downto 2);
+					extended_self_test <= '0';
+				end if;
+			when "011" => -- 320k rambo
+				if (extended_access_either='1')then
+					extended_bank(4 downto 0) <= '1'&portb(6 downto 5)&portb(3 downto 2);
+				end if;
+			when "100" => -- 576k compy shop
+				if (extended_access_cpu_or_antic='1') then
+					extended_bank(4 downto 0) <= portb(7 downto 6)&portb(3 downto 1);
+					extended_bank(5) <= not(or_reduce(portb(7 downto 6)&portb(3)));
+					extended_self_test <= '0';
+				end if;
+			when "101" => -- 576k rambo
+				if (extended_access_either='1') then
+					extended_bank(4 downto 0) <= portb(6 downto 5)&portb(3 downto 1);
+					extended_bank(5) <= not(or_reduce(portb(6 downto 5)&portb(3)));
+				end if;
+			when "110" => -- 1088k rambo
+				if (extended_access_either='1') then
+					extended_bank(5 downto 0) <= portb(7 downto 5)&portb(3 downto 1);
+					extended_bank(6) <= not(or_reduce(portb(7 downto 5)&portb(3)));
+					extended_self_test <= '0';
+				end if;
+			when "111" => -- 4MB!	
+				if (extended_access_addr='1') then
+					extended_bank(7 downto 0) <= portb(7 downto 0);				
+					extended_bank(8) <= not(or_reduce(portb(7 downto 2)));
+					extended_self_test <= and_reduce(portb(6 downto 4));	 -- which means self-test is in the middle of half the banks - euuugh, oh well!						
+				end if;
+			when others =>
+				-- TODO - portc!
+		end case;
+	end process;
+
 	
-	extended_access_either <= not(portb(4));
+	-- SRAM memory map (512k)
+	-- base 64k RAM  - banks 0-3    "000 0000 1111 1111 1111 1111" (TOP)
+	-- to 512k RAM   - banks 4-31   "000 0111 1111 1111 1111 1111" (TOP)
+	-- SDRAM memory map (8MB)
+	-- base 64k RAM  - banks 0-3    "000 0000 1111 1111 1111 1111" (TOP)
+	-- to 512k RAM   - banks 4-31   "000 0111 1111 1111 1111 1111" (TOP) 
+	-- to 4MB RAM    - banks 32-255 "011 1111 1111 1111 1111 1111" (TOP)
+	-- +64k          - banks 256-259"100 0000 0000 1111 1111 1111" (TOP)
+	-- SCRATCH       - 4MB+64k-5MB
+	-- CARTS         -              "101 YYYY YYY0 0000 0000 0000" (BOT) - 2MB! 8kb banks
+	SDRAM_CART_ADDR      <= "101"&cart_select& "0000000000000";
+	-- BASIC/OS ROM  -              "111 XXXX XX00 0000 0000 0000" (BOT) (BASIC IN SLOT 0!), 2nd to last 512K				
+	SDRAM_BASIC_ROM_ADDR <= "111"&"000000"   &"00000000000000";
+	SDRAM_OS_ROM_ADDR    <= "111"&rom_select &"00000000000000";
+	-- SYSTEM        -              "111 1000 0000 0000 0000 0000" (BOT) - LAST 512K
 	
   	process(
 		-- address and writing absolutely points us at a device
@@ -341,7 +439,7 @@
 		portb, 
 		antic_fetch,
 		rom_select,
-		extended_access_cpu_or_antic,extended_access_either,ram_select,cart_rd4,cart_rd5,
+		ram_select,cart_rd4,cart_rd5,
 		use_sdram,
 		
 		-- input data from n sources
@@ -353,7 +451,14 @@
 		ram_request_complete,sdram_request_complete,rom_request_complete,cart_request_complete,
 		
 		-- on new access this is set - we must select the appropriate device - for this cycle only
-		start_request
+		start_request,
+		
+		rom_in_ram,
+		
+		-- SDRAM base addresses
+		extended_self_test,extended_bank,sdram_only_bank,
+		SDRAM_BASIC_ROM_ADDR,SDRAM_CART_ADDR,SDRAM_OS_ROM_ADDR
+		
 	)
 	begin
 		MEMORY_DATA <= (others => '1');
@@ -373,6 +478,7 @@
 		PIA_WR_ENABLE <= '0';
 		PIA_RD_ENABLE <= '0';
 		PBI_WR_ENABLE <= '0';
+		D6_WR_ENABLE <= '0';
 
 		RAM_WR_ENABLE <= write_enable_next;
 		SDRAM_WRITE_EN <= write_enable_next;		
@@ -386,13 +492,27 @@
 		
 		ram_chip_select <= '0';
 		sdram_chip_select <= '0';
+		
+		rom_in_ram <= '1';
 
 	--	if (addr_next(23 downto 17) = "0000000" ) then -- bit 16 left out on purpose, so the Atari 64k is available as 64k-128k for zpu. The zpu has rom at 0-64k...
 		if (or_reduce(addr_next(23 downto 18)) = '0' ) then -- bit 16,17 left out on purpose, so the Atari 64k is available as 64k-128k for zpu. The zpu has rom at 0-64k...
 
-		RAM_ADDR(18 downto 16) <= "000";	
-		SDRAM_ADDR(22 downto 16) <= "0000000";
-	
+		SDRAM_ADDR(13 downto 0) <= addr_next(13 downto 0);
+		SDRAM_ADDR(22 downto 14) <= extended_bank;
+		RAM_ADDR(13 downto 0) <= addr_next(13 downto 0);
+		RAM_ADDR(18 downto 14) <= extended_bank(4 downto 0);
+					
+		if ((use_sdram or sdram_only_bank)='1') then
+			MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+			sdram_chip_select <= start_request;
+			request_complete <= sdram_request_COMPLETE;														
+		else
+			MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
+			ram_chip_select <= start_request;
+			request_complete <= ram_request_COMPLETE;									
+		end if;
+		
 		case addr_next(15 downto 8) is 
 				-- GTIA
 				when X"D0" =>
@@ -400,6 +520,8 @@
 					MEMORY_DATA(7 downto 0) <= GTIA_DATA;
 					MEMORY_DATA(15 downto 8) <= CACHE_GTIA_DATA;
 					request_complete <= '1';
+					sdram_chip_select <= '0';
+					ram_chip_select <= '0';
 			
 				-- POKEY
 				when X"D2" =>				
@@ -413,6 +535,8 @@
 						MEMORY_DATA(15 downto 8) <= CACHE_POKEY2_DATA;
 					end if;
 					request_complete <= '1';
+					sdram_chip_select <= '0';
+					ram_chip_select <= '0';					
 
 				-- PIA
 				when X"D3" =>
@@ -420,6 +544,8 @@
 					PIA_RD_ENABLE <= '1';
 					MEMORY_DATA(7 downto 0) <= PIA_DATA;
 					request_complete <= '1';
+					sdram_chip_select <= '0';
+					ram_chip_select <= '0';					
 					
 				-- ANTIC
 				when X"D4" =>
@@ -427,9 +553,13 @@
 					MEMORY_DATA(7 downto 0) <= ANTIC_DATA;
 					MEMORY_DATA(15 downto 8) <= CACHE_ANTIC_DATA;
 					request_complete <= '1';
+					sdram_chip_select <= '0';
+					ram_chip_select <= '0';					
 					
 				-- CART_CONFIG -- TODO - wait for n cycles (for now non-turbo mode should work?)
 				when X"D5" =>
+					sdram_chip_select <= '0';
+					ram_chip_select <= '0';				
 					if ((CART_RD4 or CART_RD5) = '1') then
 						PBI_WR_ENABLE <= write_enable_next;
 						MEMORY_DATA(7 downto 0) <= CART_ROM_DATA;
@@ -441,92 +571,39 @@
 						request_complete <= '1';
 					end if;
 					
-				-- XE RAM
-				when 
-					X"40"|X"41"|X"42"|X"43"|X"44"|X"45"|X"46"|X"47"|X"48"|X"49"|X"4A"|X"4B"|X"4C"|X"4D"|X"4E"|X"4F"
-					|X"58"|X"59"|X"5A"|X"5B"|X"5C"|X"5D"|X"5E"|X"5F"
-					|X"60"|X"61"|X"62"|X"63"|X"64"|X"65"|X"66"|X"67"|X"68"|X"69"|X"6A"|X"6B"|X"6C"|X"6D"|X"6E"|X"6F"
-					|X"70"|X"71"|X"72"|X"73"|X"74"|X"75"|X"76"|X"77"|X"78"|X"79"|X"7A"|X"7B"|X"7C"|X"7D"|X"7E"|X"7F" =>
-					
-					if (use_sdram = '1') then
-						MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
-						sdram_chip_select <= start_request;
-						request_complete <= sdram_request_COMPLETE;														
-					else
-						MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
-						ram_chip_select <= start_request;
-						request_complete <= ram_request_COMPLETE;									
-					end if;
-					
-					case ram_select is
-						when "00" => -- 64k
-							-- default
-						when "01" => -- 128k					
-							RAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&"00"&portb(3 downto 2);
-							SDRAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&"00"&portb(3 downto 2);						
-						when "10" => -- 320k compy shop
-							RAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&portb(7 downto 6)&portb(3 downto 2);
-							SDRAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&portb(7 downto 6)&portb(3 downto 2);
-						when "11" => -- 320k rambo
-							RAM_ADDR(18 downto 14) <= extended_access_either&portb(6 downto 5)&portb(3 downto 2);				
-							SDRAM_ADDR(18 downto 14) <= extended_access_either&portb(6 downto 5)&portb(3 downto 2);				
-					end case;
-					
+				when X"D6" =>
+					D6_WR_ENABLE <= write_enable_next;
+					-- TODO - should this still have RAM with covox here?
+										
 				-- SELF TEST ROM 0x5000->0x57ff and XE RAM
 				when 
 					X"50"|X"51"|X"52"|X"53"|X"54"|X"55"|X"56"|X"57" =>
 									
-					if (portb(7) = '0' and portb(0) = '1') then
-						--request_complete <= ROM_REQUEST_COMPLETE;
-						--MEMORY_DATA(7 downto 0) <= ROM_DATA;
-						--rom_request <= start_request;					
-						MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+					if (portb(7) = '0' and portb(0) = '1' and extended_self_test = '1') then
+						sdram_chip_select <= '0';
+						ram_chip_select <= '0';	
+						
+						if (rom_in_ram = '1') then
+							MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+						else
+							MEMORY_DATA(7 downto 0) <= ROM_DATA;						
+						end if;
 						
 						if (write_enable_next = '1') then
 							request_complete <= '1';
 						else
-							request_complete <= sdram_request_COMPLETE;							
-							sdram_chip_select <= start_request;							
+							if (rom_in_ram = '1') then
+								request_complete <= sdram_request_COMPLETE;							
+								sdram_chip_select <= start_request;							
+							else
+								request_complete <= rom_request_COMPLETE;							
+								rom_request <= start_request;															
+							end if;
 						end if;
 						--ROM_ADDR <= "000000"&"00010"&ADDR(10 downto 0); -- x01000 based 2k (i.e. self test is 4k in - usually under hardware regs)
-						case rom_select is
-							when "00" =>
-								ROM_ADDR <= "000000"&"00"&"010"&ADDR_next(10 downto 0); -- x01000 based 2k
-						    SDRAM_ADDR <="0010000"&"00"&"010"&ADDR_next(10 downto 0); -- x01000 based 2k
-							when "01" =>
-								ROM_ADDR <= "000000"&"01"&"010"&ADDR_next(10 downto 0); -- x05000 based 2k
-							 SDRAM_ADDR <="0010000"&"01"&"010"&ADDR_next(10 downto 0); -- x05000 based 2k								
-							when "10" =>
-								ROM_ADDR <= "000000"&"10"&"010"&ADDR_next(10 downto 0); -- x09000 based 2k
-							 SDRAM_ADDR <="0010000"&"10"&"010"&ADDR_next(10 downto 0); -- x09000 based 2k							
-							when "11" =>
-								ROM_ADDR <= "000001"&"00"&"010"&ADDR_next(10 downto 0); -- x11000 based 2k (0xd000 already taken by basic!)
-							SDRAM_ADDR <= "0010001"&"00"&"010"&ADDR_next(10 downto 0); -- x11000 based 2k (0xd000 already taken by basic!)								
-						end case;														
-					else				
-						if (use_sdram = '1') then
-							MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
-							sdram_chip_select <= start_request;
-							request_complete <= sdram_request_COMPLETE;														
-						else
-							MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
-							ram_chip_select <= start_request;
-							request_complete <= ram_request_COMPLETE;									
-						end if;
-						
-						case ram_select is
-							when "00" => -- 64k
-								-- default
-							when "01" => -- 128k					
-								RAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&"00"&portb(3 downto 2);
-								SDRAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&"00"&portb(3 downto 2);						
-							when "10" => -- 320k compy shop
-								RAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&portb(7 downto 6)&portb(3 downto 2);
-								SDRAM_ADDR(18 downto 14) <= extended_access_cpu_or_antic&portb(7 downto 6)&portb(3 downto 2);
-							when "11" => -- 320k rambo
-								RAM_ADDR(18 downto 14) <= extended_access_either&portb(6 downto 5)&portb(3 downto 2);				
-								SDRAM_ADDR(18 downto 14) <= extended_access_either&portb(6 downto 5)&portb(3 downto 2);				
-						end case;
+						SDRAM_ADDR <= SDRAM_OS_ROM_ADDR;
+						SDRAM_ADDR(13 downto 0) <= "010"&ADDR_next(10 downto 0);
+						ROM_ADDR <= "000000"&"00"&"010"&ADDR_next(10 downto 0); -- x01000 based 2k						
 					end if;
 				
 				-- 0x80 cart
@@ -539,16 +616,8 @@
 						rom_request <= start_request;
 						CART_S4_n <= '0';
 						request_complete <= CART_REQUEST_COMPLETE;
-					else
-						if (use_sdram = '1') then
-							MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
-							sdram_chip_select <= start_request;
-							request_complete <= sdram_request_COMPLETE;														
-						else
-							MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
-							ram_chip_select <= start_request;
-							request_complete <= ram_request_COMPLETE;									
-						end if;
+						sdram_chip_select <= '0';
+						ram_chip_select <= '0';							
 					end if;	
 			
 				-- 0xa0 cart (BASIC ROM 0xa000 - 0xbfff (8k))
@@ -561,31 +630,35 @@
 						cart_request <= start_request;
 						CART_S5_n <= '0';
 						request_complete <= CART_REQUEST_COMPLETE;
+						sdram_chip_select <= '0';
+						ram_chip_select <= '0';													
 					else
 						if (portb(1) = '0') then
+							sdram_chip_select <= '0';
+							ram_chip_select <= '0';							
 							--request_complete <= ROM_REQUEST_COMPLETE;
 							--MEMORY_DATA(7 downto 0) <= ROM_DATA;
 							--rom_request <= start_request;					
-							MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+							if (rom_in_ram = '1') then
+								MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+							else
+								MEMORY_DATA(7 downto 0) <= ROM_DATA;						
+							end if;
 							if (write_enable_next = '1') then
 								request_complete <= '1';
 							else
-								request_complete <= sdram_request_COMPLETE;							
-								sdram_chip_select <= start_request;								
+								if (rom_in_ram = '1') then
+									request_complete <= sdram_request_COMPLETE;							
+									sdram_chip_select <= start_request;							
+								else
+									request_complete <= rom_request_COMPLETE;							
+									rom_request <= start_request;															
+								end if;
 							end if;
 						
 							ROM_ADDR <= "000000"&"110"&ADDR_next(12 downto 0); -- x0C000 based 8k
-						 SDRAM_ADDR <="0010000"&"110"&ADDR_next(12 downto 0); -- x0C000 based 8k							
-						else
-							if (use_sdram = '1') then
-								MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
-								sdram_chip_select <= start_request;
-								request_complete <= sdram_request_COMPLETE;														
-							else
-								MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
-								ram_chip_select <= start_request;
-								request_complete <= ram_request_COMPLETE;									
-							end if;
+						 SDRAM_ADDR <= SDRAM_BASIC_ROM_ADDR;
+						 SDRAM_ADDR(12 downto 0) <= ADDR_next(12 downto 0); -- x0C000 based 8k							
 						end if;
 					end if;
 					
@@ -598,56 +671,38 @@
 					|X"F0"|X"F1"|X"F2"|X"F3"|X"F4"|X"F5"|X"F6"|X"F7"|X"F8"|X"F9"|X"FA"|X"FB"|X"FC"|X"FD"|X"FE"|X"FF" =>
 					
 					if (portb(0) = '1') then
+						sdram_chip_select <= '0';
+						ram_chip_select <= '0';																		
 						--request_complete <= ROM_REQUEST_COMPLETE;
 						--MEMORY_DATA(7 downto 0) <= ROM_DATA;
 						--rom_request <= start_request;					
-						MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+						if (rom_in_ram = '1') then
+							MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
+						else
+							MEMORY_DATA(7 downto 0) <= ROM_DATA;						
+						end if;
 						if (write_enable_next = '1') then
 							request_complete <= '1';
 						else
-							request_complete <= sdram_request_COMPLETE;							
-							sdram_chip_select <= start_request;							
+								if (rom_in_ram = '1') then
+									request_complete <= sdram_request_COMPLETE;							
+									sdram_chip_select <= start_request;							
+								else
+									request_complete <= rom_request_COMPLETE;							
+									rom_request <= start_request;															
+								end if;						
 						end if;																			
 
-						case rom_select is
-							when "00" =>
-								ROM_ADDR <= "000000"&"00"&ADDR_next(13 downto 0); -- x00000 based 16k
-							SDRAM_ADDR <= "0010000"&"00"&ADDR_next(13 downto 0); -- x00000 based 16k
-							when "01" =>
-								ROM_ADDR <= "000000"&"01"&ADDR_next(13 downto 0); -- x04000 based 16k
-							SDRAM_ADDR <= "0010000"&"01"&ADDR_next(13 downto 0); -- x04000 based 16k
-							when "10" =>
-								ROM_ADDR <= "000000"&"10"&ADDR_next(13 downto 0); -- x08000 based 16k
-							SDRAM_ADDR <= "0010000"&"10"&ADDR_next(13 downto 0); -- x08000 based 16k
-							when "11" =>
-								ROM_ADDR <= "000001"&"00"&ADDR_next(13 downto 0); -- x10000 based 16k (0xc000 already taken by basic!)
-							SDRAM_ADDR <= "0010001"&"00"&ADDR_next(13 downto 0); -- x10000 based 16k (0xc000 already taken by basic!)
-						end case;
-								
-					else
-						if (use_sdram = '1') then
-							MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
-							sdram_chip_select <= start_request;
-							request_complete <= sdram_request_COMPLETE;														
-						else
-							MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
-							ram_chip_select <= start_request;
-							request_complete <= ram_request_COMPLETE;									
-						end if;
+						ROM_ADDR <= "000000"&"00"&ADDR_next(13 downto 0); -- x00000 based 16k
+						SDRAM_ADDR <= SDRAM_OS_ROM_ADDR;
+						SDRAM_ADDR(13 downto 0) <= ADDR_next(13 downto 0);
 					end if;
 					
 				when others =>
-					if (use_sdram = '1') then
-						MEMORY_DATA(7 downto 0) <= SDRAM_DATA(7 downto 0);
-						sdram_chip_select <= start_request;
-						request_complete <= sdram_request_COMPLETE;														
-					else
-						MEMORY_DATA(7 downto 0) <= RAM_DATA(7 downto 0);
-						ram_chip_select <= start_request;
-						request_complete <= ram_request_COMPLETE;									
-					end if;
 			end case;				
 		else		
+			sdram_chip_select <= '0';
+			ram_chip_select <= '0';													
 			case addr_next(23 downto 21) is			
 				when "000" =>				
 					-- internal area for zpu, never happens!
Only in atari800core_v1_20140312_mist/: atari800core_assignment_defaults.qdf
diff -ur atari800core_v1_20140121_mcc216/atari800core.jdi atari800core_v1_20140312_mist/atari800core.jdi
--- atari800core_v1_20140121_mcc216/atari800core.jdi	2014-02-03 19:43:36.000000000 +0000
+++ atari800core_v1_20140312_mist/atari800core.jdi	2014-03-12 05:05:06.000000000 +0000
@@ -1,6 +1,62 @@
 <sld_project_info>
   <project>
-    <hash md5_digest_80b="00000000000000000000"/>
+    <hash md5_digest_80b="7d0f11bf891bc55d775e"/>
   </project>
   <file_info/>
+  <hub_info ir_width="8" node_count="1"/>
+  <node_info>
+    <node hpath="sld_signaltap:auto_signaltap_0" instance_id="0" mfg_id="110" node_id="0" sld_node_info="0x30006E00" version="6">
+      <parameters>
+        <parameter name="lpm_type" type="string" value="sld_signaltap"/>
+        <parameter name="sld_node_info" type="unknown" value="805334528"/>
+        <parameter name="SLD_IP_VERSION" type="dec" value="6"/>
+        <parameter name="SLD_IP_MINOR_VERSION" type="dec" value="0"/>
+        <parameter name="SLD_COMMON_IP_VERSION" type="dec" value="0"/>
+        <parameter name="sld_data_bits" type="unknown" value="119"/>
+        <parameter name="sld_trigger_bits" type="unknown" value="119"/>
+        <parameter name="SLD_NODE_CRC_BITS" type="dec" value="32"/>
+        <parameter name="sld_node_crc_hiword" type="unknown" value="37736"/>
+        <parameter name="sld_node_crc_loword" type="unknown" value="25945"/>
+        <parameter name="SLD_INCREMENTAL_ROUTING" type="dec" value="0"/>
+        <parameter name="sld_sample_depth" type="unknown" value="2048"/>
+        <parameter name="sld_segment_size" type="unknown" value="2048"/>
+        <parameter name="SLD_RAM_BLOCK_TYPE" type="string" value="AUTO"/>
+        <parameter name="sld_state_bits" type="unknown" value="11"/>
+        <parameter name="sld_buffer_full_stop" type="unknown" value="1"/>
+        <parameter name="SLD_MEM_ADDRESS_BITS" type="dec" value="7"/>
+        <parameter name="SLD_DATA_BIT_CNTR_BITS" type="dec" value="4"/>
+        <parameter name="sld_trigger_level" type="unknown" value="1"/>
+        <parameter name="sld_trigger_in_enabled" type="unknown" value="0"/>
+        <parameter name="sld_advanced_trigger_entity" type="unknown" value="basic,1,"/>
+        <parameter name="sld_trigger_level_pipeline" type="unknown" value="1"/>
+        <parameter name="sld_enable_advanced_trigger" type="unknown" value="0"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_1" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_2" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_3" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_4" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_5" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_6" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_7" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_8" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_9" type="string" value="NONE"/>
+        <parameter name="SLD_ADVANCED_TRIGGER_10" type="string" value="NONE"/>
+        <parameter name="sld_inversion_mask_length" type="unknown" value="382"/>
+        <parameter name="sld_inversion_mask" type="unknown" value="0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"/>
+        <parameter name="sld_power_up_trigger" type="unknown" value="0"/>
+        <parameter name="SLD_STATE_FLOW_MGR_ENTITY" type="string" value="state_flow_mgr_entity.vhd"/>
+        <parameter name="sld_state_flow_use_generated" type="unknown" value="0"/>
+        <parameter name="sld_current_resource_width" type="unknown" value="1"/>
+        <parameter name="sld_attribute_mem_mode" type="unknown" value="OFF"/>
+        <parameter name="SLD_STORAGE_QUALIFIER_BITS" type="dec" value="1"/>
+        <parameter name="SLD_STORAGE_QUALIFIER_GAP_RECORD" type="dec" value="0"/>
+        <parameter name="SLD_STORAGE_QUALIFIER_MODE" type="string" value="OFF"/>
+        <parameter name="SLD_STORAGE_QUALIFIER_ENABLE_ADVANCED_CONDITION" type="dec" value="0"/>
+        <parameter name="sld_storage_qualifier_inversion_mask_length" type="unknown" value="0"/>
+        <parameter name="SLD_STORAGE_QUALIFIER_ADVANCED_CONDITION_ENTITY" type="string" value="basic"/>
+        <parameter name="SLD_STORAGE_QUALIFIER_PIPELINE" type="dec" value="0"/>
+      </parameters>
+      <inputs/>
+      <outputs/>
+    </node>
+  </node_info>
 </sld_project_info>
diff -ur atari800core_v1_20140121_mcc216/atari800core.qsf atari800core_v1_20140312_mist/atari800core.qsf
--- atari800core_v1_20140121_mcc216/atari800core.qsf	2014-02-03 19:39:52.000000000 +0000
+++ atari800core_v1_20140312_mist/atari800core.qsf	2014-03-12 05:08:27.000000000 +0000
@@ -1,6 +1,4 @@
-# -------------------------------------------------------------------------- #
-#
-# Copyright (C) 1991-2012 Altera Corporation
+# Copyright (C) 1991-2007 Altera Corporation
 # Your use of Altera Corporation's design tools, logic functions 
 # and other software and tools, and its AMPP partner logic 
 # functions, and any output files from any of the foregoing 
@@ -13,287 +11,308 @@
 # programming logic devices manufactured by Altera and sold by 
 # Altera or its authorized distributors.  Please refer to the 
 # applicable agreement for further details.
-#
-# -------------------------------------------------------------------------- #
-#
-# Quartus II 64-Bit
-# Version 12.1 Build 243 01/31/2013 Service Pack 1 SJ Web Edition
-# Date created = 13:58:39  April 11, 2013
-#
-# -------------------------------------------------------------------------- #
-#
-# Notes:
-#
-# 1) The default values for assignments are stored in the file:
-#		atari800core_assignment_defaults.qdf
-#    If this file doesn't exist, see file:
+
+
+# The default values for assignments are stored in the file
+#		minimig_de1_assignment_defaults.qdf
+# If this file doesn't exist, and for assignments not listed, see file
 #		assignment_defaults.qdf
-#
-# 2) Altera recommends that you do not modify this file. This
-#    file is updated automatically by the Quartus II software
-#    and any changes you make may be lost or overwritten.
-#
-# -------------------------------------------------------------------------- #
+
+# Altera recommends that you do not modify this file. This
+# file is updated automatically by the Quartus II software
+# and any changes you make may be lost or overwritten.
 
 
 set_global_assignment -name FAMILY "Cyclone III"
-set_global_assignment -name DEVICE EP3C16E144C8
+set_global_assignment -name DEVICE EP3C25E144C8
 set_global_assignment -name TOP_LEVEL_ENTITY atari800core
-set_global_assignment -name ORIGINAL_QUARTUS_VERSION "12.1 SP1"
-set_global_assignment -name PROJECT_CREATION_TIME_DATE "13:58:39  APRIL 11, 2013"
+set_global_assignment -name ORIGINAL_QUARTUS_VERSION 7.2
+set_global_assignment -name PROJECT_CREATION_TIME_DATE "22:27:29  OCTOBER 30, 2007"
 set_global_assignment -name LAST_QUARTUS_VERSION "12.1 SP1.33"
-set_global_assignment -name PROJECT_OUTPUT_DIRECTORY output_files
-set_global_assignment -name MIN_CORE_JUNCTION_TEMP 0
-set_global_assignment -name MAX_CORE_JUNCTION_TEMP 85
-set_global_assignment -name ERROR_CHECK_FREQUENCY_DIVISOR 1
+set_global_assignment -name USE_GENERATED_PHYSICAL_CONSTRAINTS OFF -section_id eda_palace
+set_global_assignment -name DEVICE_FILTER_PIN_COUNT 144
+set_global_assignment -name POWER_PRESET_COOLING_SOLUTION "NO HEAT SINK WITH STILL AIR"
+set_global_assignment -name POWER_BOARD_THERMAL_MODEL "NONE (CONSERVATIVE)"
+set_global_assignment -name OPTIMIZE_HOLD_TIMING "ALL PATHS"
+set_global_assignment -name FITTER_EFFORT "AUTO FIT"
+set_global_assignment -name STRATIX_CONFIGURATION_DEVICE EPCS4
+set_global_assignment -name CYCLONEII_RESERVE_NCEO_AFTER_CONFIGURATION "USE AS REGULAR IO"
+set_global_assignment -name RESERVE_ASDO_AFTER_CONFIGURATION "AS INPUT TRI-STATED"
+set_global_assignment -name CYCLONEIII_CONFIGURATION_SCHEME "PASSIVE SERIAL"
+set_global_assignment -name GENERATE_RBF_FILE ON
+set_global_assignment -name FORCE_CONFIGURATION_VCCIO ON
 set_global_assignment -name STRATIX_DEVICE_IO_STANDARD "3.3-V LVTTL"
+
+set_location_assignment PIN_7 -to LED
+set_location_assignment PIN_22 -to CLOCK_50[0]
+set_location_assignment PIN_23 -to CLOCK_50[1]
+set_location_assignment PIN_128 -to CLOCK_32[0]
+set_location_assignment PIN_129 -to CLOCK_32[1]
+set_location_assignment PIN_54 -to CLOCK_27[0]
+set_location_assignment PIN_55 -to CLOCK_27[1]
+set_location_assignment PIN_144 -to VGA_R[5]
+set_location_assignment PIN_143 -to VGA_R[4]
+set_location_assignment PIN_142 -to VGA_R[3]
+set_location_assignment PIN_141 -to VGA_R[2]
+set_location_assignment PIN_137 -to VGA_R[1]
 set_location_assignment PIN_135 -to VGA_R[0]
-set_location_assignment PIN_134 -to VGA_R[1]
-set_location_assignment PIN_133 -to VGA_R[2]
-set_location_assignment PIN_132 -to VGA_R[3]
-set_location_assignment PIN_141 -to VGA_G[0]
-set_location_assignment PIN_142 -to VGA_G[1]
-set_location_assignment PIN_143 -to VGA_G[2]
-set_location_assignment PIN_144 -to VGA_G[3]
-set_location_assignment PIN_4 -to VGA_B[0]
-set_location_assignment PIN_7 -to VGA_B[1]
-set_location_assignment PIN_10 -to VGA_B[2]
-set_location_assignment PIN_11 -to VGA_B[3]
-set_location_assignment PIN_136 -to VGA_HS
-set_location_assignment PIN_137 -to VGA_VS
+set_location_assignment PIN_133 -to VGA_B[5]
+set_location_assignment PIN_132 -to VGA_B[4]
+set_location_assignment PIN_125 -to VGA_B[3]
+set_location_assignment PIN_121 -to VGA_B[2]
+set_location_assignment PIN_120 -to VGA_B[1]
+set_location_assignment PIN_115 -to VGA_B[0]
+set_location_assignment PIN_114 -to VGA_G[5]
+set_location_assignment PIN_113 -to VGA_G[4]
+set_location_assignment PIN_112 -to VGA_G[3]
+set_location_assignment PIN_111 -to VGA_G[2]
+set_location_assignment PIN_110 -to VGA_G[1]
+set_location_assignment PIN_106 -to VGA_G[0]
+set_location_assignment PIN_136 -to VGA_VS
+set_location_assignment PIN_119 -to VGA_HS
+set_location_assignment PIN_65 -to AUDIO_L
+set_location_assignment PIN_80 -to AUDIO_R
+set_location_assignment PIN_46 -to UART_TX
+set_location_assignment PIN_31 -to UART_RX
+set_location_assignment PIN_105 -to SPI_DO
+set_location_assignment PIN_88 -to SPI_DI
+set_location_assignment PIN_126 -to SPI_SCK
+set_location_assignment PIN_127 -to SPI_SS2
+set_location_assignment PIN_91 -to SPI_SS3
+set_location_assignment PIN_90 -to SPI_SS4
+set_location_assignment PIN_13 -to CONF_DATA0
+
+set_location_assignment PIN_49 -to SDRAM_A[0]
+set_location_assignment PIN_44 -to SDRAM_A[1]
+set_location_assignment PIN_42 -to SDRAM_A[2]
+set_location_assignment PIN_39 -to SDRAM_A[3]
+set_location_assignment PIN_4 -to SDRAM_A[4]
+set_location_assignment PIN_6 -to SDRAM_A[5]
+set_location_assignment PIN_8 -to SDRAM_A[6]
+set_location_assignment PIN_10 -to SDRAM_A[7]
+set_location_assignment PIN_11 -to SDRAM_A[8]
+set_location_assignment PIN_28 -to SDRAM_A[9]
+set_location_assignment PIN_50 -to SDRAM_A[10]
+set_location_assignment PIN_30 -to SDRAM_A[11]
+set_location_assignment PIN_32 -to SDRAM_A[12]
+set_location_assignment PIN_83 -to SDRAM_DQ[0]
+set_location_assignment PIN_79 -to SDRAM_DQ[1]
+set_location_assignment PIN_77 -to SDRAM_DQ[2]
+set_location_assignment PIN_76 -to SDRAM_DQ[3]
+set_location_assignment PIN_72 -to SDRAM_DQ[4]
+set_location_assignment PIN_71 -to SDRAM_DQ[5]
+set_location_assignment PIN_69 -to SDRAM_DQ[6]
+set_location_assignment PIN_68 -to SDRAM_DQ[7]
+set_location_assignment PIN_86 -to SDRAM_DQ[8]
+set_location_assignment PIN_87 -to SDRAM_DQ[9]
+set_location_assignment PIN_98 -to SDRAM_DQ[10]
+set_location_assignment PIN_99 -to SDRAM_DQ[11]
+set_location_assignment PIN_100 -to SDRAM_DQ[12]
+set_location_assignment PIN_101 -to SDRAM_DQ[13]
+set_location_assignment PIN_103 -to SDRAM_DQ[14]
+set_location_assignment PIN_104 -to SDRAM_DQ[15]
+set_location_assignment PIN_58 -to SDRAM_BA[0]
+set_location_assignment PIN_51 -to SDRAM_BA[1]
+set_location_assignment PIN_85 -to SDRAM_DQMH
+set_location_assignment PIN_67 -to SDRAM_DQML
+set_location_assignment PIN_60 -to SDRAM_nRAS
+set_location_assignment PIN_64 -to SDRAM_nCAS
+set_location_assignment PIN_66 -to SDRAM_nWE
+set_location_assignment PIN_59 -to SDRAM_nCS
+set_location_assignment PIN_33 -to SDRAM_CKE
+set_location_assignment PIN_43 -to SDRAM_CLK
+
+set_global_assignment -name CYCLONEII_OPTIMIZATION_TECHNIQUE BALANCED
+set_global_assignment -name SMART_RECOMPILE ON
 set_global_assignment -name ENABLE_SIGNALTAP ON
-set_location_assignment PIN_44 -to SD_CLK
-set_location_assignment PIN_46 -to SD_CMD
+set_global_assignment -name USE_SIGNALTAP_FILE stp1.stp
+set_global_assignment -name PHYSICAL_SYNTHESIS_COMBO_LOGIC ON
+set_global_assignment -name PHYSICAL_SYNTHESIS_REGISTER_DUPLICATION ON
+set_global_assignment -name PHYSICAL_SYNTHESIS_EFFORT NORMAL
+set_global_assignment -name FMAX_REQUIREMENT "114 MHz"
+set_global_assignment -name OPTIMIZE_MULTI_CORNER_TIMING OFF
+set_global_assignment -name MIN_CORE_JUNCTION_TEMP 0
+set_global_assignment -name MAX_CORE_JUNCTION_TEMP 85
 set_global_assignment -name USE_CONFIGURATION_DEVICE ON
-set_global_assignment -name STRATIX_CONFIGURATION_DEVICE EPCS4
+set_global_assignment -name TPD_REQUIREMENT "2 ns"
+set_global_assignment -name TSU_REQUIREMENT "2 ns"
+set_global_assignment -name TCO_REQUIREMENT "2 ns"
+set_global_assignment -name ALLOW_POWER_UP_DONT_CARE OFF
 set_global_assignment -name SYNTH_TIMING_DRIVEN_SYNTHESIS OFF
-set_global_assignment -name BLOCK_DESIGN_NAMING AUTO
-set_global_assignment -name POWER_PRESET_COOLING_SOLUTION "23 MM HEAT SINK WITH 200 LFPM AIRFLOW"
-set_global_assignment -name POWER_BOARD_THERMAL_MODEL "NONE (CONSERVATIVE)"
-set_global_assignment -name RESERVE_ASDO_AFTER_CONFIGURATION "USE AS REGULAR IO"
-set_global_assignment -name CYCLONEII_RESERVE_NCEO_AFTER_CONFIGURATION "USE AS REGULAR IO"
+set_global_assignment -name AUTO_RAM_TO_LCELL_CONVERSION OFF
+set_global_assignment -name AUTO_RAM_RECOGNITION ON
+set_global_assignment -name AUTO_ROM_RECOGNITION ON
+set_global_assignment -name PHYSICAL_SYNTHESIS_REGISTER_RETIMING ON
+set_global_assignment -name LL_ROOT_REGION ON -section_id "Root Region"
+set_global_assignment -name LL_MEMBER_STATE LOCKED -section_id "Root Region"
+set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -section_id Top
+set_global_assignment -name PARTITION_COLOR 2147039 -section_id Top
+set_global_assignment -name MISC_FILE atari800core.dpf
+set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -section_id Top
+
+set_global_assignment -name PHYSICAL_SYNTHESIS_ASYNCHRONOUS_SIGNAL_PIPELINING ON
+set_global_assignment -name PHYSICAL_SYNTHESIS_COMBO_LOGIC_FOR_AREA OFF
+set_global_assignment -name PHYSICAL_SYNTHESIS_MAP_LOGIC_TO_MEMORY_FOR_AREA OFF
+
+set_global_assignment -name PROJECT_OUTPUT_DIRECTORY out
+set_global_assignment -name PLACEMENT_EFFORT_MULTIPLIER 4.0
+set_global_assignment -name ROUTER_EFFORT_MULTIPLIER 4.0
+set_global_assignment -name CYCLONEII_M4K_COMPATIBILITY OFF
+
+#set_parameter -name ENABLE_RUNTIME_MOD YES -to "Minimig1:minimig|amiga_boot:BOOTROM1|altsyncram:Ram0_rtl_10"
+#set_parameter -name INSTANCE_NAME mig -to "Minimig1:minimig|amiga_boot:BOOTROM1|altsyncram:Ram0_rtl_10"
+
+set_global_assignment -name CRC_ERROR_OPEN_DRAIN OFF
 set_global_assignment -name RESERVE_DATA0_AFTER_CONFIGURATION "USE AS REGULAR IO"
 set_global_assignment -name RESERVE_DATA1_AFTER_CONFIGURATION "USE AS REGULAR IO"
 set_global_assignment -name RESERVE_FLASH_NCE_AFTER_CONFIGURATION "USE AS REGULAR IO"
 set_global_assignment -name RESERVE_DCLK_AFTER_CONFIGURATION "USE AS REGULAR IO"
-set_global_assignment -name SMART_RECOMPILE ON
-set_global_assignment -name ENABLE_DRC_SETTINGS ON
-set_global_assignment -name CYCLONEII_OPTIMIZATION_TECHNIQUE SPEED
-set_global_assignment -name PHYSICAL_SYNTHESIS_COMBO_LOGIC OFF
-set_global_assignment -name PHYSICAL_SYNTHESIS_REGISTER_DUPLICATION OFF
-set_global_assignment -name PHYSICAL_SYNTHESIS_REGISTER_RETIMING OFF
-set_global_assignment -name ROUTER_TIMING_OPTIMIZATION_LEVEL MAXIMUM
-set_global_assignment -name AUTO_PACKED_REGISTERS_STRATIXII NORMAL
-set_global_assignment -name FITTER_EFFORT "AUTO FIT"
-set_global_assignment -name OPTIMIZE_HOLD_TIMING "ALL PATHS"
+set_global_assignment -name OUTPUT_IO_TIMING_NEAR_END_VMEAS "HALF VCCIO" -rise
+set_global_assignment -name OUTPUT_IO_TIMING_NEAR_END_VMEAS "HALF VCCIO" -fall
+set_global_assignment -name OUTPUT_IO_TIMING_FAR_END_VMEAS "HALF SIGNAL SWING" -rise
+set_global_assignment -name OUTPUT_IO_TIMING_FAR_END_VMEAS "HALF SIGNAL SWING" -fall
 
-set_global_assignment -name USE_SIGNALTAP_FILE output_files/stp1.stp
-set_location_assignment PIN_28 -to AUDIO_L
-set_location_assignment PIN_30 -to AUDIO_R
-set_location_assignment PIN_53 -to CPU_RESET_n
-set_location_assignment PIN_55 -to FPGA_CLK
-set_location_assignment PIN_127 -to JOY1_n[0]
-set_location_assignment PIN_91 -to JOY1_n[1]
-set_location_assignment PIN_90 -to JOY1_n[2]
-set_location_assignment PIN_88 -to JOY1_n[3]
-set_location_assignment PIN_89 -to JOY1_n[4]
-set_location_assignment PIN_126 -to JOY1_n[5]
-set_location_assignment PIN_128 -to JOY2_n[0]
-set_location_assignment PIN_25 -to JOY2_n[1]
-set_location_assignment PIN_24 -to JOY2_n[2]
-set_location_assignment PIN_22 -to JOY2_n[3]
-set_location_assignment PIN_23 -to JOY2_n[4]
-set_location_assignment PIN_129 -to JOY2_n[5]
-set_location_assignment PIN_33 -to PS2K_DAT
-set_location_assignment PIN_39 -to PS2K_CLK
-set_location_assignment PIN_32 -to PS2M_DAT
-set_location_assignment PIN_31 -to PS2M_CLK
-set_location_assignment PIN_52 -to SD_DAT0
-set_location_assignment PIN_49 -to SD_DAT3
-set_location_assignment PIN_42 -to USB_P
-set_location_assignment PIN_43 -to USB_N
-set_location_assignment PIN_50 -to USB2_P
-set_location_assignment PIN_51 -to USB2_N
-set_location_assignment PIN_112 -to SDRAM_CLK
-set_location_assignment PIN_61 -to SDRAM_A[0]
-set_location_assignment PIN_60 -to SDRAM_A[1]
-set_location_assignment PIN_59 -to SDRAM_A[2]
-set_location_assignment PIN_58 -to SDRAM_A[3]
-set_location_assignment PIN_125 -to SDRAM_A[4]
-set_location_assignment PIN_121 -to SDRAM_A[5]
-set_location_assignment PIN_120 -to SDRAM_A[6]
-set_location_assignment PIN_119 -to SDRAM_A[7]
-set_location_assignment PIN_115 -to SDRAM_A[8]
-set_location_assignment PIN_114 -to SDRAM_A[9]
-set_location_assignment PIN_64 -to SDRAM_A[10]
-set_location_assignment PIN_113 -to SDRAM_A[11]
-set_location_assignment PIN_111 -to SDRAM_A[12]
-set_location_assignment PIN_66 -to SDRAM_BA[0]
-set_location_assignment PIN_65 -to SDRAM_BA[1]
-set_location_assignment PIN_87 -to SDRAM_DQ[0]
-set_location_assignment PIN_86 -to SDRAM_DQ[1]
-set_location_assignment PIN_85 -to SDRAM_DQ[2]
-set_location_assignment PIN_83 -to SDRAM_DQ[3]
-set_location_assignment PIN_80 -to SDRAM_DQ[4]
-set_location_assignment PIN_79 -to SDRAM_DQ[5]
-set_location_assignment PIN_77 -to SDRAM_DQ[6]
-set_location_assignment PIN_76 -to SDRAM_DQ[7]
-set_location_assignment PIN_106 -to SDRAM_DQ[8]
-set_location_assignment PIN_105 -to SDRAM_DQ[9]
-set_location_assignment PIN_104 -to SDRAM_DQ[10]
-set_location_assignment PIN_103 -to SDRAM_DQ[11]
-set_location_assignment PIN_101 -to SDRAM_DQ[12]
-set_location_assignment PIN_100 -to SDRAM_DQ[13]
-set_location_assignment PIN_99 -to SDRAM_DQ[14]
-set_location_assignment PIN_98 -to SDRAM_DQ[15]
-set_location_assignment PIN_67 -to SDRAM_CS_n
-set_location_assignment PIN_68 -to SDRAM_RAS_n
-set_location_assignment PIN_69 -to SDRAM_CAS_n
-set_location_assignment PIN_71 -to SDRAM_WE_n
-set_location_assignment PIN_6 -to CFG_DOUT
-set_location_assignment PIN_8 -to CFG_CS_n
-set_location_assignment PIN_12 -to CFG_CLK
-set_location_assignment PIN_13 -to CFG_DIN
-set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -section_id Top
-set_global_assignment -name PARTITION_COLOR 16764057 -section_id Top
-set_global_assignment -name LL_ROOT_REGION ON -section_id "Root Region"
-set_global_assignment -name LL_MEMBER_STATE LOCKED -section_id "Root Region"
-set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -section_id Top
-set_location_assignment PIN_72 -to SDRAM_DQM_n[0]
-set_location_assignment PIN_110 -to SDRAM_DQM_n[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQM_n[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQM_n[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to AUDIO_L
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to AUDIO_R
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to CPU_RESET_n
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to FPGA_CLK
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY1_n[5]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY1_n[4]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY1_n[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY1_n[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY1_n[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY1_n[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY2_n[5]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY2_n[4]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY2_n[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY2_n[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY2_n[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to JOY2_n[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to PS2K_CLK
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to PS2K_DAT
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to PS2M_CLK
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to PS2M_DAT
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to SD_CLK
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to SD_CMD
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to SD_DAT0
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to SD_DAT3
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to USB_P
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to USB_N
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to USB2_P
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to USB2_N
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_CLK
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[4]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[5]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[6]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[7]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[8]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[9]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[10]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_A[11]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_BA[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_BA[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[4]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[5]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[6]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[7]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[8]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[9]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[10]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[11]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[12]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[13]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[14]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_DQ[15]
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_CS_n
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_RAS_n
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_CAS_n
-set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDRAM_WE_n
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_B[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_B[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_B[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_B[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_G[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_G[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_G[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_G[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_HS
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_R[3]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_R[2]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_R[1]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_R[0]
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to VGA_VS
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to CFG_CLK
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to CFG_CS_n
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to CFG_DIN
-set_instance_assignment -name IO_STANDARD "3.3-V LVCMOS" -to CFG_DOUT
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to VGA_R
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to VGA_G
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to VGA_B
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to VGA_HS
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to VGA_VS
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_BA
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_RAS_n
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_CAS_n
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_WE_n
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_CS_n
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ
-set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to CFG_CLK
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to CFG_CS_n
-set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to CFG_DOUT
-set_instance_assignment -name FAST_INPUT_REGISTER ON -to CFG_DIN
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[0]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[1]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[2]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[3]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[4]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[5]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[6]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[8]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[9]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[10]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_A[11]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[0]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[1]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[2]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[6]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[7]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[8]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[10]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[11]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[12]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[14]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_DQ[15]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_BA[0]
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_CS_n
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_RAS_n
-set_instance_assignment -name CLOCK_TO_OUTPUT_DELAY 1 -to SDRAM_WE_n
-set_instance_assignment -name IO_MAXIMUM_TOGGLE_RATE "0 MHz" -to VGA_B[3]
 
 
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[0]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[1]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[2]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[3]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[4]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[5]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[6]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[7]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[8]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[9]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[10]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[11]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[12]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[13]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[14]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQ[15]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[0]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[1]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[2]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[3]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[4]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[5]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[6]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[7]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[8]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[9]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[10]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[11]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_A[12]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_BA[0]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_BA[1]
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQMH
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_DQML
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_nRAS
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_nCAS
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_nWE
+set_instance_assignment -name FAST_OUTPUT_REGISTER ON -to SDRAM_nCS
+
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[0]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[1]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[2]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[3]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[4]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[5]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[6]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[7]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[8]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[9]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[10]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[11]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[12]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[13]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[14]
+set_instance_assignment -name FAST_OUTPUT_ENABLE_REGISTER ON -to SDRAM_DQ[15]
+
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[0]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[1]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[2]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[3]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[4]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[5]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[6]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[7]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[8]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[9]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[10]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[11]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[12]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[13]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[14]
+set_instance_assignment -name FAST_INPUT_REGISTER ON -to SDRAM_DQ[15]
+
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[0]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[1]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[2]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[3]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[4]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[5]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[6]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[7]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[8]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[9]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[10]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[11]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_A[12]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[0]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[1]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[2]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[3]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[4]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[5]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[6]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[7]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[8]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[9]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[10]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[11]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[12]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[13]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[14]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQ[15]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_BA[0]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_BA[1]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQML
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_DQMH
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_nRAS
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_nCAS
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_nWE
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_nCS
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_CKE
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to SDRAM_CLK
+
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_R[5]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_R[4]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_R[3]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_R[2]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_R[1]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_R[0]
+
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_G[5]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_G[4]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_G[3]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_G[2]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_G[1]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_G[0]
+
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_B[5]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_B[4]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_B[3]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_B[2]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_B[1]
+set_instance_assignment -name CURRENT_STRENGTH_NEW 4MA -to VGA_B[0]
+
+
+set_global_assignment -name VHDL_FILE data_io.vhdl
+set_global_assignment -name QIP_FILE basic.qip
+set_global_assignment -name VERILOG_FILE user_io.v
 set_global_assignment -name VERILOG_FILE hq_dac.v
 set_global_assignment -name VERILOG_FILE sdram_ctrl_4_ports.v
-set_global_assignment -name VHDL_FILE romlo.vhd
-set_global_assignment -name VHDL_FILE romhi.vhd
 set_global_assignment -name VHDL_FILE ramint.vhd
 set_global_assignment -name VHDL_FILE atari800core.vhd
 set_global_assignment -name VHDL_FILE spi_master.vhd
@@ -307,7 +326,6 @@
 set_global_assignment -name VHDL_FILE cpu_65xx_a.vhd
 set_global_assignment -name VHDL_FILE cpu.vhd
 set_global_assignment -name QIP_FILE pll.qip
-set_global_assignment -name SDC_FILE atari800core.sdc
 set_global_assignment -name VHDL_FILE reg_file.vhdl
 set_global_assignment -name VHDL_FILE address_decoder.vhdl
 set_global_assignment -name VHDL_FILE pokey.vhdl
@@ -345,4 +363,272 @@
 set_global_assignment -name SIGNALTAP_FILE output_files/stp1.stp
 set_global_assignment -name VHDL_FILE internalromram.vhd
 set_global_assignment -name VHDL_FILE sdram_statemachine_mcc.vhdl
+set_global_assignment -name SIGNALTAP_FILE stp1.stp
+set_global_assignment -name SDC_FILE atari800core.sdc
+set_global_assignment -name QIP_FILE rom16.qip
+set_global_assignment -name VHDL_FILE generic_ram_infer.vhdl
+set_global_assignment -name SLD_NODE_CREATOR_ID 110 -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_ENTITY_NAME sld_signaltap -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[0] -to CONF_DATA0 -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[1] -to SPI_DI -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[2] -to SPI_DO -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[3] -to SPI_SS2 -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_NODE_INFO=805334528" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_POWER_UP_TRIGGER=0" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_STORAGE_QUALIFIER_INVERSION_MASK_LENGTH=0" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_ATTRIBUTE_MEM_MODE=OFF" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_STATE_FLOW_USE_GENERATED=0" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_STATE_BITS=11" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_BUFFER_FULL_STOP=1" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_CURRENT_RESOURCE_WIDTH=1" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_TRIGGER_LEVEL=1" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_TRIGGER_IN_ENABLED=0" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_ADVANCED_TRIGGER_ENTITY=basic,1," -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_TRIGGER_LEVEL_PIPELINE=1" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_ENABLE_ADVANCED_TRIGGER=0" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_clk -to "data_io:mist_spi_interface|SPI_CLK" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[4] -to "data_io:mist_spi_interface|ADDR[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[5] -to "data_io:mist_spi_interface|ADDR[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[6] -to "data_io:mist_spi_interface|ADDR[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[7] -to "data_io:mist_spi_interface|ADDR[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[8] -to "data_io:mist_spi_interface|ADDR[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[9] -to "data_io:mist_spi_interface|ADDR[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[10] -to "data_io:mist_spi_interface|ADDR[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[11] -to "data_io:mist_spi_interface|ADDR[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[12] -to "data_io:mist_spi_interface|ADDR[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[13] -to "data_io:mist_spi_interface|DATA_OUT[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[14] -to "data_io:mist_spi_interface|DATA_OUT[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[15] -to "data_io:mist_spi_interface|DATA_OUT[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[16] -to "data_io:mist_spi_interface|DATA_OUT[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[17] -to "data_io:mist_spi_interface|DATA_OUT[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[18] -to "data_io:mist_spi_interface|DATA_OUT[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[19] -to "data_io:mist_spi_interface|DATA_OUT[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[20] -to "data_io:mist_spi_interface|DATA_OUT[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[21] -to "data_io:mist_spi_interface|WR_EN" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[22] -to "data_io:mist_spi_interface|cmd_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[23] -to "data_io:mist_spi_interface|cmd_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[24] -to "data_io:mist_spi_interface|cmd_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[25] -to "data_io:mist_spi_interface|cmd_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[26] -to "data_io:mist_spi_interface|cmd_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[27] -to "data_io:mist_spi_interface|cmd_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[28] -to "data_io:mist_spi_interface|cmd_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[29] -to "data_io:mist_spi_interface|cmd_reg[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[30] -to "data_io:mist_spi_interface|cnt_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[31] -to "data_io:mist_spi_interface|cnt_reg[10]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[32] -to "data_io:mist_spi_interface|cnt_reg[11]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[33] -to "data_io:mist_spi_interface|cnt_reg[12]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[34] -to "data_io:mist_spi_interface|cnt_reg[13]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[35] -to "data_io:mist_spi_interface|cnt_reg[14]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[36] -to "data_io:mist_spi_interface|cnt_reg[15]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[37] -to "data_io:mist_spi_interface|cnt_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[38] -to "data_io:mist_spi_interface|cnt_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[39] -to "data_io:mist_spi_interface|cnt_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[40] -to "data_io:mist_spi_interface|cnt_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[41] -to "data_io:mist_spi_interface|cnt_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[42] -to "data_io:mist_spi_interface|cnt_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[43] -to "data_io:mist_spi_interface|cnt_reg[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[44] -to "data_io:mist_spi_interface|cnt_reg[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[45] -to "data_io:mist_spi_interface|cnt_reg[9]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[46] -to "data_io:mist_spi_interface|ready" -section_id auto_signaltap_0
+set_global_assignment -name QIP_FILE mist_sector_buffer.qip
+set_global_assignment -name VHDL_FILE covox.vhd
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[0] -to CONF_DATA0 -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[1] -to SPI_DI -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[2] -to SPI_DO -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[3] -to SPI_SS2 -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[4] -to "data_io:mist_spi_interface|ADDR[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[5] -to "data_io:mist_spi_interface|ADDR[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[6] -to "data_io:mist_spi_interface|ADDR[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[7] -to "data_io:mist_spi_interface|ADDR[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[8] -to "data_io:mist_spi_interface|ADDR[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[9] -to "data_io:mist_spi_interface|ADDR[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[10] -to "data_io:mist_spi_interface|ADDR[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[11] -to "data_io:mist_spi_interface|ADDR[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[12] -to "data_io:mist_spi_interface|ADDR[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[13] -to "data_io:mist_spi_interface|DATA_OUT[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[14] -to "data_io:mist_spi_interface|DATA_OUT[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[15] -to "data_io:mist_spi_interface|DATA_OUT[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[16] -to "data_io:mist_spi_interface|DATA_OUT[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[17] -to "data_io:mist_spi_interface|DATA_OUT[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[18] -to "data_io:mist_spi_interface|DATA_OUT[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[19] -to "data_io:mist_spi_interface|DATA_OUT[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[20] -to "data_io:mist_spi_interface|DATA_OUT[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[21] -to "data_io:mist_spi_interface|WR_EN" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[22] -to "data_io:mist_spi_interface|cmd_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[23] -to "data_io:mist_spi_interface|cmd_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[24] -to "data_io:mist_spi_interface|cmd_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[25] -to "data_io:mist_spi_interface|cmd_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[26] -to "data_io:mist_spi_interface|cmd_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[27] -to "data_io:mist_spi_interface|cmd_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[28] -to "data_io:mist_spi_interface|cmd_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[29] -to "data_io:mist_spi_interface|cmd_reg[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[30] -to "data_io:mist_spi_interface|cnt_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[31] -to "data_io:mist_spi_interface|cnt_reg[10]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[32] -to "data_io:mist_spi_interface|cnt_reg[11]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[33] -to "data_io:mist_spi_interface|cnt_reg[12]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[34] -to "data_io:mist_spi_interface|cnt_reg[13]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[35] -to "data_io:mist_spi_interface|cnt_reg[14]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[36] -to "data_io:mist_spi_interface|cnt_reg[15]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[37] -to "data_io:mist_spi_interface|cnt_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[38] -to "data_io:mist_spi_interface|cnt_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[39] -to "data_io:mist_spi_interface|cnt_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[40] -to "data_io:mist_spi_interface|cnt_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[41] -to "data_io:mist_spi_interface|cnt_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[42] -to "data_io:mist_spi_interface|cnt_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[43] -to "data_io:mist_spi_interface|cnt_reg[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[44] -to "data_io:mist_spi_interface|cnt_reg[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[45] -to "data_io:mist_spi_interface|cnt_reg[9]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[46] -to "data_io:mist_spi_interface|ready" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_SEGMENT_SIZE=2048" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_SAMPLE_DEPTH=2048" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[47] -to "data_io:mist_spi_interface|request" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[48] -to "data_io:mist_spi_interface|sbuf_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[49] -to "data_io:mist_spi_interface|sbuf_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[50] -to "data_io:mist_spi_interface|sbuf_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[51] -to "data_io:mist_spi_interface|sbuf_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[52] -to "data_io:mist_spi_interface|sbuf_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[53] -to "data_io:mist_spi_interface|sbuf_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[54] -to "data_io:mist_spi_interface|sbuf_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[55] -to "data_io:mist_spi_interface|sector[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[56] -to "data_io:mist_spi_interface|sector[10]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[57] -to "data_io:mist_spi_interface|sector[11]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[58] -to "data_io:mist_spi_interface|sector[12]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[59] -to "data_io:mist_spi_interface|sector[13]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[60] -to "data_io:mist_spi_interface|sector[14]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[61] -to "data_io:mist_spi_interface|sector[15]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[62] -to "data_io:mist_spi_interface|sector[16]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[63] -to "data_io:mist_spi_interface|sector[17]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[64] -to "data_io:mist_spi_interface|sector[18]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[65] -to "data_io:mist_spi_interface|sector[19]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[66] -to "data_io:mist_spi_interface|sector[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[67] -to "data_io:mist_spi_interface|sector[20]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[68] -to "data_io:mist_spi_interface|sector[21]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[69] -to "data_io:mist_spi_interface|sector[22]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[70] -to "data_io:mist_spi_interface|sector[23]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[71] -to "data_io:mist_spi_interface|sector[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[72] -to "data_io:mist_spi_interface|sector[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[73] -to "data_io:mist_spi_interface|sector[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[74] -to "data_io:mist_spi_interface|sector[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[75] -to "data_io:mist_spi_interface|sector[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[76] -to "data_io:mist_spi_interface|sector[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[77] -to "data_io:mist_spi_interface|sector[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[78] -to "data_io:mist_spi_interface|sector[9]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[79] -to "pia:b2v_inst16|portb_output_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[80] -to "pia:b2v_inst16|portb_output_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[81] -to "pia:b2v_inst16|portb_output_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[82] -to "pia:b2v_inst16|portb_output_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[83] -to "pia:b2v_inst16|portb_output_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[84] -to "pia:b2v_inst16|portb_output_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[85] -to "pia:b2v_inst16|portb_output_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[86] -to "pia:b2v_inst16|portb_output_reg[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[87] -to "zpu_config_regs:b2v_inst24|sector[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[88] -to "zpu_config_regs:b2v_inst24|sector[10]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[89] -to "zpu_config_regs:b2v_inst24|sector[11]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[90] -to "zpu_config_regs:b2v_inst24|sector[12]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[91] -to "zpu_config_regs:b2v_inst24|sector[13]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[92] -to "zpu_config_regs:b2v_inst24|sector[14]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[93] -to "zpu_config_regs:b2v_inst24|sector[15]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[94] -to "zpu_config_regs:b2v_inst24|sector[16]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[95] -to "zpu_config_regs:b2v_inst24|sector[17]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[96] -to "zpu_config_regs:b2v_inst24|sector[18]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[97] -to "zpu_config_regs:b2v_inst24|sector[19]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[98] -to "zpu_config_regs:b2v_inst24|sector[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[99] -to "zpu_config_regs:b2v_inst24|sector[20]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[100] -to "zpu_config_regs:b2v_inst24|sector[21]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[101] -to "zpu_config_regs:b2v_inst24|sector[22]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[102] -to "zpu_config_regs:b2v_inst24|sector[23]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[103] -to "zpu_config_regs:b2v_inst24|sector[24]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[104] -to "zpu_config_regs:b2v_inst24|sector[25]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[105] -to "zpu_config_regs:b2v_inst24|sector[26]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[106] -to "zpu_config_regs:b2v_inst24|sector[27]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[107] -to "zpu_config_regs:b2v_inst24|sector[28]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[108] -to "zpu_config_regs:b2v_inst24|sector[29]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[109] -to "zpu_config_regs:b2v_inst24|sector[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[110] -to "zpu_config_regs:b2v_inst24|sector[30]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[111] -to "zpu_config_regs:b2v_inst24|sector[31]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[112] -to "zpu_config_regs:b2v_inst24|sector[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[113] -to "zpu_config_regs:b2v_inst24|sector[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[114] -to "zpu_config_regs:b2v_inst24|sector[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[115] -to "zpu_config_regs:b2v_inst24|sector[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[116] -to "zpu_config_regs:b2v_inst24|sector[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[117] -to "zpu_config_regs:b2v_inst24|sector[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_trigger_in[118] -to "zpu_config_regs:b2v_inst24|sector[9]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[47] -to "data_io:mist_spi_interface|request" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[48] -to "data_io:mist_spi_interface|sbuf_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[49] -to "data_io:mist_spi_interface|sbuf_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[50] -to "data_io:mist_spi_interface|sbuf_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[51] -to "data_io:mist_spi_interface|sbuf_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[52] -to "data_io:mist_spi_interface|sbuf_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[53] -to "data_io:mist_spi_interface|sbuf_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[54] -to "data_io:mist_spi_interface|sbuf_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[55] -to "data_io:mist_spi_interface|sector[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[56] -to "data_io:mist_spi_interface|sector[10]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[57] -to "data_io:mist_spi_interface|sector[11]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[58] -to "data_io:mist_spi_interface|sector[12]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[59] -to "data_io:mist_spi_interface|sector[13]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[60] -to "data_io:mist_spi_interface|sector[14]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[61] -to "data_io:mist_spi_interface|sector[15]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[62] -to "data_io:mist_spi_interface|sector[16]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[63] -to "data_io:mist_spi_interface|sector[17]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[64] -to "data_io:mist_spi_interface|sector[18]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[65] -to "data_io:mist_spi_interface|sector[19]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[66] -to "data_io:mist_spi_interface|sector[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[67] -to "data_io:mist_spi_interface|sector[20]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[68] -to "data_io:mist_spi_interface|sector[21]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[69] -to "data_io:mist_spi_interface|sector[22]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[70] -to "data_io:mist_spi_interface|sector[23]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[71] -to "data_io:mist_spi_interface|sector[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[72] -to "data_io:mist_spi_interface|sector[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[73] -to "data_io:mist_spi_interface|sector[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[74] -to "data_io:mist_spi_interface|sector[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[75] -to "data_io:mist_spi_interface|sector[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[76] -to "data_io:mist_spi_interface|sector[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[77] -to "data_io:mist_spi_interface|sector[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[78] -to "data_io:mist_spi_interface|sector[9]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[79] -to "pia:b2v_inst16|portb_output_reg[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[80] -to "pia:b2v_inst16|portb_output_reg[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[81] -to "pia:b2v_inst16|portb_output_reg[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[82] -to "pia:b2v_inst16|portb_output_reg[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[83] -to "pia:b2v_inst16|portb_output_reg[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[84] -to "pia:b2v_inst16|portb_output_reg[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[85] -to "pia:b2v_inst16|portb_output_reg[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[86] -to "pia:b2v_inst16|portb_output_reg[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[87] -to "zpu_config_regs:b2v_inst24|sector[0]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[88] -to "zpu_config_regs:b2v_inst24|sector[10]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[89] -to "zpu_config_regs:b2v_inst24|sector[11]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[90] -to "zpu_config_regs:b2v_inst24|sector[12]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[91] -to "zpu_config_regs:b2v_inst24|sector[13]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[92] -to "zpu_config_regs:b2v_inst24|sector[14]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[93] -to "zpu_config_regs:b2v_inst24|sector[15]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[94] -to "zpu_config_regs:b2v_inst24|sector[16]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[95] -to "zpu_config_regs:b2v_inst24|sector[17]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[96] -to "zpu_config_regs:b2v_inst24|sector[18]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[97] -to "zpu_config_regs:b2v_inst24|sector[19]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[98] -to "zpu_config_regs:b2v_inst24|sector[1]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[99] -to "zpu_config_regs:b2v_inst24|sector[20]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[100] -to "zpu_config_regs:b2v_inst24|sector[21]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[101] -to "zpu_config_regs:b2v_inst24|sector[22]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[102] -to "zpu_config_regs:b2v_inst24|sector[23]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[103] -to "zpu_config_regs:b2v_inst24|sector[24]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[104] -to "zpu_config_regs:b2v_inst24|sector[25]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[105] -to "zpu_config_regs:b2v_inst24|sector[26]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[106] -to "zpu_config_regs:b2v_inst24|sector[27]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[107] -to "zpu_config_regs:b2v_inst24|sector[28]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[108] -to "zpu_config_regs:b2v_inst24|sector[29]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[109] -to "zpu_config_regs:b2v_inst24|sector[2]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[110] -to "zpu_config_regs:b2v_inst24|sector[30]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[111] -to "zpu_config_regs:b2v_inst24|sector[31]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[112] -to "zpu_config_regs:b2v_inst24|sector[3]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[113] -to "zpu_config_regs:b2v_inst24|sector[4]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[114] -to "zpu_config_regs:b2v_inst24|sector[5]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[115] -to "zpu_config_regs:b2v_inst24|sector[6]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[116] -to "zpu_config_regs:b2v_inst24|sector[7]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[117] -to "zpu_config_regs:b2v_inst24|sector[8]" -section_id auto_signaltap_0
+set_instance_assignment -name CONNECT_TO_SLD_NODE_ENTITY_PORT acq_data_in[118] -to "zpu_config_regs:b2v_inst24|sector[9]" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_DATA_BITS=119" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_TRIGGER_BITS=119" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_INVERSION_MASK=0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_INVERSION_MASK_LENGTH=382" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_NODE_CRC_LOWORD=25945" -section_id auto_signaltap_0
+set_global_assignment -name SLD_NODE_PARAMETER_ASSIGNMENT "SLD_NODE_CRC_HIWORD=37736" -section_id auto_signaltap_0
 set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -section_id Top
\ No newline at end of file
Binary files atari800core_v1_20140121_mcc216/atari800core.qws and atari800core_v1_20140312_mist/atari800core.qws differ
diff -ur atari800core_v1_20140121_mcc216/atari800core.sdc atari800core_v1_20140312_mist/atari800core.sdc
--- atari800core_v1_20140121_mcc216/atari800core.sdc	2014-01-21 19:27:45.000000000 +0000
+++ atari800core_v1_20140312_mist/atari800core.sdc	2014-02-16 08:53:36.000000000 +0000
@@ -1,3 +1,3 @@
-create_clock -period 5MHz [get_ports FPGA_CLK]
+create_clock -period 27MHz [get_ports CLOCK_27[0]]
 derive_pll_clocks
 derive_clock_uncertainty
\ No newline at end of file
diff -ur atari800core_v1_20140121_mcc216/atari800core.vhd atari800core_v1_20140312_mist/atari800core.vhd
--- atari800core_v1_20140121_mcc216/atari800core.vhd	2014-01-28 20:47:59.000000000 +0000
+++ atari800core_v1_20140312_mist/atari800core.vhd	2014-03-12 05:00:20.000000000 +0000
@@ -18,49 +18,155 @@
 
 LIBRARY ieee;
 USE ieee.std_logic_1164.all; 
+use ieee.numeric_std.all;
 
 LIBRARY work;
 
 ENTITY atari800core IS 
 	PORT
 	(
-		FPGA_CLK :  IN  STD_LOGIC;
-		PS2K_CLK :  IN  STD_LOGIC;
-		PS2K_DAT :  IN  STD_LOGIC;
-		PS2M_CLK :  IN  STD_LOGIC;
-		PS2M_DAT :  IN  STD_LOGIC;		
+		CLOCK_27 :  IN  STD_LOGIC_VECTOR(1 downto 0);
+--		PS2K_CLK :  IN  STD_LOGIC;
+--		PS2K_DAT :  IN  STD_LOGIC;
+--		PS2M_CLK :  IN  STD_LOGIC;
+--		PS2M_DAT :  IN  STD_LOGIC;		
 
 		VGA_VS :  OUT  STD_LOGIC;
 		VGA_HS :  OUT  STD_LOGIC;
-		VGA_B :  OUT  STD_LOGIC_VECTOR(3 DOWNTO 0);
-		VGA_G :  OUT  STD_LOGIC_VECTOR(3 DOWNTO 0);
-		VGA_R :  OUT  STD_LOGIC_VECTOR(3 DOWNTO 0);
+		VGA_B :  OUT  STD_LOGIC_VECTOR(5 DOWNTO 0);
+		VGA_G :  OUT  STD_LOGIC_VECTOR(5 DOWNTO 0);
+		VGA_R :  OUT  STD_LOGIC_VECTOR(5 DOWNTO 0);
 		
-		JOY1_n :  IN  STD_LOGIC_VECTOR(5 DOWNTO 0);
-		JOY2_n :  IN  STD_LOGIC_VECTOR(5 DOWNTO 0);
+--		JOY1_n :  IN  STD_LOGIC_VECTOR(5 DOWNTO 0);
+--		JOY2_n :  IN  STD_LOGIC_VECTOR(5 DOWNTO 0);
 		
 		AUDIO_L : OUT std_logic;
 		AUDIO_R : OUT std_logic;
 
 		SDRAM_BA :  OUT  STD_LOGIC_VECTOR(1 downto 0);
-		SDRAM_CS_N :  OUT  STD_LOGIC;
-		SDRAM_RAS_N :  OUT  STD_LOGIC;
-		SDRAM_CAS_N :  OUT  STD_LOGIC;
-		SDRAM_WE_N :  OUT  STD_LOGIC;
-		SDRAM_DQM_n :  OUT  STD_LOGIC_vector(1 downto 0);
+		SDRAM_nCS :  OUT  STD_LOGIC;
+		SDRAM_nRAS :  OUT  STD_LOGIC;
+		SDRAM_nCAS :  OUT  STD_LOGIC;
+		SDRAM_nWE :  OUT  STD_LOGIC;
+		SDRAM_DQMH :  OUT  STD_LOGIC;
+		SDRAM_DQML :  OUT  STD_LOGIC;
 		SDRAM_CLK :  OUT  STD_LOGIC;
-		--SDRAM_CKE :  OUT  STD_LOGIC;
+		SDRAM_CKE :  OUT  STD_LOGIC;
 		SDRAM_A :  OUT  STD_LOGIC_VECTOR(12 DOWNTO 0);
 		SDRAM_DQ :  INOUT  STD_LOGIC_VECTOR(15 DOWNTO 0);
 
-		SD_DAT0 :  IN  STD_LOGIC;
-		SD_CLK :  OUT  STD_LOGIC;
-		SD_CMD :  OUT  STD_LOGIC;
-		SD_DAT3 :  OUT  STD_LOGIC
+--		SD_DAT0 :  IN  STD_LOGIC;
+--		SD_CLK :  OUT  STD_LOGIC;
+--		SD_CMD :  OUT  STD_LOGIC;
+--		SD_DAT3 :  OUT  STD_LOGIC
+
+		LED : OUT std_logic;
+		
+		UART_TX :  OUT  STD_LOGIC;
+		UART_RX :  IN  STD_LOGIC;
+		
+		SPI_DO :  INOUT  STD_LOGIC;
+		SPI_DI :  IN  STD_LOGIC;
+		SPI_SCK :  IN  STD_LOGIC;
+		SPI_SS2 :  IN  STD_LOGIC;		
+		SPI_SS3 :  IN  STD_LOGIC;		
+		SPI_SS4 :  IN  STD_LOGIC;
+		CONF_DATA0 :  IN  STD_LOGIC -- AKA SPI_SS5
 	);
 END atari800core;
 
 ARCHITECTURE bdf_type OF atari800core IS 
+--
+--component generic_ram_infer IS
+--	generic
+--	(
+--		ADDRESS_WIDTH : natural := 9;
+--		SPACE : natural := 512;
+--		DATA_WIDTH : natural := 8
+--	);
+--   PORT
+--   (
+--      clock: IN   std_logic;
+--      data:  IN   std_logic_vector (data_width-1 DOWNTO 0);
+--      address:  IN   std_logic_vector(address_width-1 downto 0);
+--      we:    IN   std_logic;
+--      q:     OUT  std_logic_vector (data_width-1 DOWNTO 0)
+--   );
+--END component;
+
+component mist_sector_buffer IS
+	PORT
+	(
+		address_a		: IN STD_LOGIC_VECTOR (8 DOWNTO 0);
+		address_b		: IN STD_LOGIC_VECTOR (6 DOWNTO 0);
+		clock_a		: IN STD_LOGIC  := '1';
+		clock_b		: IN STD_LOGIC ;
+		data_a		: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
+		data_b		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
+		wren_a		: IN STD_LOGIC  := '0';
+		wren_b		: IN STD_LOGIC  := '0';
+		q_a		: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
+		q_b		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
+	);
+END component;
+
+component synchronizer IS
+PORT 
+( 
+	CLK : IN STD_LOGIC;
+	RAW : IN STD_LOGIC;
+	SYNC : OUT STD_LOGIC
+);
+END component;
+
+component data_io IS 
+	PORT
+	(
+		CLK : in std_logic;
+		RESET_n : in std_logic;
+		
+		-- SPI connection - up to upstream to make miso 'Z' on ss_io going high
+	   SPI_CLK : in std_logic;
+	   SPI_SS_IO : in std_logic;
+	   SPI_MISO: out std_logic;
+	   SPI_MOSI : in std_logic;
+		
+		-- Sector access request
+		request : in std_logic;
+		sector : in std_logic_vector(23 downto 0);
+		ready : out std_logic;
+		
+		-- DMA to RAM
+		ADDR: out std_logic_vector(8 downto 0);
+		DATA_OUT : out std_logic_vector(7 downto 0);
+		DATA_IN : in std_logic_vector(7 downto 0);
+		WR_EN : out std_logic
+	 );
+end component;
+
+component user_io
+	PORT(
+	   SPI_CLK : in std_logic;
+	   SPI_SS_IO : in std_logic;
+	   SPI_MISO : out std_logic;
+	   SPI_MOSI : in std_logic;
+	   CORE_TYPE : in std_logic_vector(7 downto 0);
+		JOY0 : out std_logic_vector(5 downto 0);
+		JOY1 : out std_logic_vector(5 downto 0);
+		KEYBOARD : out std_logic_vector(127 downto 0);
+		BUTTONS : out std_logic_vector(1 downto 0);
+		SWITCHES : out std_logic_vector(1 downto 0)
+	  );
+end component;
+
+COMPONENT complete_address_decoder IS
+generic (width : natural := 1);
+PORT 
+( 
+	addr_in : in std_logic_vector(width-1 downto 0);			
+	addr_decoded : out std_logic_vector((2**width)-1 downto 0)
+);
+END component;
 
 COMPONENT cpu
 	PORT(CLK : IN STD_LOGIC;
@@ -151,6 +257,8 @@
 		 CHANNEL_1 : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
 		 CHANNEL_2 : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
 		 CHANNEL_3 : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
+		 COVOX_CHANNEL_0 : IN STD_LOGIC_VECTOR(7 downto 0);
+		 COVOX_CHANNEL_1 : IN STD_LOGIC_VECTOR(7 downto 0);
 		 CHANNEL_ENABLE : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
 		 VOLUME_OUT : OUT STD_LOGIC_VECTOR(15 DOWNTO 0)
 	);
@@ -177,6 +285,7 @@
 		 ZPU_DI : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
 		 ZPU_RAM_DI : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
 		 ZPU_ROM_DI : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
+		 ZPU_SECTOR_DI : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
 		 MEMORY_FETCH : OUT STD_LOGIC;
 		 ZPU_READ_ENABLE : OUT STD_LOGIC;
 		 ZPU_32BIT_WRITE_ENABLE : OUT STD_LOGIC;
@@ -328,9 +437,11 @@
 		 CACHE_POKEY_DATA : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
 		 PORTB : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
 		 RAM_DATA : IN STD_LOGIC_VECTOR(15 DOWNTO 0);
-		 ram_select : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
+		 ram_select : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
 		 ROM_DATA : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
-		 rom_select : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
+		 rom_select : in std_logic_vector(5 downto 0);
+		 cart_select : in std_logic_vector(6 downto 0);
+		 cart_activate : in std_logic;
 		 SDRAM_DATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
 		 ZPU_ADDR : IN STD_LOGIC_VECTOR(23 DOWNTO 0);
 		 ZPU_WRITE_DATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
@@ -363,7 +474,8 @@
 		 RAM_ADDR : OUT STD_LOGIC_VECTOR(18 DOWNTO 0);
 		 ROM_ADDR : OUT STD_LOGIC_VECTOR(21 DOWNTO 0);
 		 SDRAM_ADDR : OUT STD_LOGIC_VECTOR(22 DOWNTO 0);
-		 WRITE_DATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
+		 WRITE_DATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
+		 D6_WR_ENABLE : out std_logic
 	);
 END COMPONENT;
 
@@ -386,7 +498,7 @@
 		 ADDRESS_IN : IN STD_LOGIC_VECTOR(22 DOWNTO 0);
 		 DATA_IN : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
 		 SDRAM_DQ : INOUT STD_LOGIC_VECTOR(15 DOWNTO 0);
-		 REPLY : OUT STD_LOGIC;
+		 COMPLETE : OUT STD_LOGIC;
 		 SDRAM_BA0 : OUT STD_LOGIC;
 		 SDRAM_BA1 : OUT STD_LOGIC;
 		 SDRAM_CKE : OUT STD_LOGIC;
@@ -509,10 +621,13 @@
 		 DATA_OUT : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
 		 LEDG : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
 		 LEDR : OUT STD_LOGIC_VECTOR(9 DOWNTO 0);
-		 RAM_SELECT : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
-		 ROM_SELECT : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
+		 RAM_SELECT : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
+		 ROM_SELECT : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
 		 THROTTLE_COUNT_6502 : OUT STD_LOGIC_VECTOR(5 DOWNTO 0);
-		 ZPU_HEX : OUT STD_LOGIC_VECTOR(15 DOWNTO 0)
+		 ZPU_HEX : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
+		 sector : out std_logic_vector(31 downto 0);
+		 sector_request : out std_logic;
+		 sector_ready : in std_logic
 	);
 END COMPONENT;
 
@@ -581,6 +696,20 @@
 );
 END component;
 
+component covox IS
+PORT 
+( 
+	CLK : IN STD_LOGIC;
+	ADDR : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
+	DATA_IN : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
+	WR_EN : IN STD_LOGIC;
+	
+	covox_channel0 : out std_logic_vector(7 downto 0);
+	covox_channel1 : out std_logic_vector(7 downto 0);
+	covox_channel2 : out std_logic_vector(7 downto 0);
+	covox_channel3 : out std_logic_vector(7 downto 0)
+);
+END component;
 
 SIGNAL	ANTIC_ADDR :  STD_LOGIC_VECTOR(15 DOWNTO 0);
 SIGNAL	ANTIC_AN :  STD_LOGIC_VECTOR(2 DOWNTO 0);
@@ -642,7 +771,7 @@
 SIGNAL	GTIA_SOUND :  STD_LOGIC;
 SIGNAL	GTIA_WRITE_ENABLE :  STD_LOGIC;
 SIGNAL	IRQ_n :  STD_LOGIC;
-SIGNAL	KBCODE :  STD_LOGIC_VECTOR(7 DOWNTO 0);
+SIGNAL	KBCODE_DUMMY :  STD_LOGIC_VECTOR(7 DOWNTO 0);
 SIGNAL	KEY_HELD :  STD_LOGIC;
 SIGNAL	KEY_INTERRUPT :  STD_LOGIC;
 SIGNAL	KEYBOARD_RESPONSE :  STD_LOGIC_VECTOR(1 DOWNTO 0);
@@ -682,14 +811,14 @@
 SIGNAL	RAM_DO :  STD_LOGIC_VECTOR(15 DOWNTO 0);
 SIGNAL	RAM_REQUEST :  STD_LOGIC;
 SIGNAL	RAM_REQUEST_COMPLETE :  STD_LOGIC;
-SIGNAL	RAM_SELECT :  STD_LOGIC_VECTOR(1 DOWNTO 0);
+SIGNAL	RAM_SELECT :  STD_LOGIC_VECTOR(3 DOWNTO 0);
 SIGNAL	RAM_WRITE_ENABLE :  STD_LOGIC;
 SIGNAL	RESET_N :  STD_LOGIC;
 SIGNAL	ROM_ADDR :  STD_LOGIC_VECTOR(21 DOWNTO 0);
 SIGNAL	ROM_DO :  STD_LOGIC_VECTOR(7 DOWNTO 0);
 SIGNAL	ROM_REQUEST :  STD_LOGIC;
 SIGNAL	ROM_REQUEST_COMPLETE :  STD_LOGIC;
-SIGNAL	ROM_SELECT :  STD_LOGIC_VECTOR(1 DOWNTO 0);
+SIGNAL	ROM_SELECT :  STD_LOGIC_VECTOR(3 DOWNTO 0);
 SIGNAL	SCANDOUBLER_SHARED_ENABLE_HIGH :  STD_LOGIC;
 SIGNAL	SCANDOUBLER_SHARED_ENABLE_LOW :  STD_LOGIC;
 SIGNAL	SDRAM_ADDR :  STD_LOGIC_VECTOR(22 DOWNTO 0);
@@ -733,6 +862,7 @@
 SIGNAL	ZPU_READ_ENABLE :  STD_LOGIC;
 SIGNAL	ZPU_RESET :  STD_LOGIC;
 SIGNAL	ZPU_ROM_DATA :  STD_LOGIC_VECTOR(31 DOWNTO 0);
+SIGNAL	ZPU_SECTOR_DATA :  STD_LOGIC_VECTOR(31 DOWNTO 0);
 SIGNAL	ZPU_STACK_WRITE :  STD_LOGIC_VECTOR(3 DOWNTO 0);
 SIGNAL	SYNTHESIZED_WIRE_0 :  STD_LOGIC_VECTOR(3 DOWNTO 0);
 SIGNAL	SYNTHESIZED_WIRE_1 :  STD_LOGIC_VECTOR(3 DOWNTO 0);
@@ -754,10 +884,344 @@
 SIGNAL	LEDG_dummy :  STD_LOGIC_VECTOR(7 DOWNTO 0);
 signal UART_TXD_dummy : std_logic;
 
+-- STUB OUT FOR NOW
+SIGNAL		PS2K_CLK :  STD_LOGIC;
+SIGNAL		PS2K_DAT :  STD_LOGIC;
+signal		JOY1_n :  STD_LOGIC_VECTOR(5 DOWNTO 0);
+signal		JOY2_n :  STD_LOGIC_VECTOR(5 DOWNTO 0);
+signal		JOY1 :  STD_LOGIC_VECTOR(5 DOWNTO 0);
+signal		JOY2 :  STD_LOGIC_VECTOR(5 DOWNTO 0);
+
+
+SIGNAL		SD_DAT0 :  STD_LOGIC;
+SIGNAL		SD_CLK :  STD_LOGIC;
+SIGNAL		SD_CMD :  STD_LOGIC;
+SIGNAL		SD_DAT3 :  STD_LOGIC;
+
+signal mist_buttons : std_logic_vector(1 downto 0);
+signal mist_switches : std_logic_vector(1 downto 0);
+
+signal keyboard : std_logic_vector(127 downto 0);
+signal atari_keyboard : std_logic_vector(63 downto 0);
+
+SIGNAL	SHIFT_PRESSED_DUMMY :  STD_LOGIC;
+SIGNAL	BREAK_PRESSED_DUMMY :  STD_LOGIC;
+SIGNAL	CONTROL_PRESSED :  STD_LOGIC;
+
+SIGNAL	CONSOL_OPTION_DUMMY :  STD_LOGIC;
+SIGNAL	CONSOL_SELECT_DUMMY :  STD_LOGIC;
+SIGNAL	CONSOL_START_DUMMY :  STD_LOGIC;
+
+signal capslock_pressed : std_logic;
+signal capsheld_next : std_logic;
+signal capsheld_reg : std_logic;
+
+signal mist_sector_ready : std_logic;
+signal mist_sector_ready_sync : std_logic;
+signal mist_sector_request : std_logic;
+signal mist_sector_request_sync : std_logic;
+signal mist_sector : std_logic_vector(31 downto 0);
+signal mist_sector_sync : std_logic_vector(31 downto 0);
+
+		
+signal mist_addr : std_logic_vector(8 downto 0);
+signal mist_do : std_logic_vector(7 downto 0);
+signal mist_di : std_logic_vector(7 downto 0);
+signal mist_wren : std_logic;
+
+signal spi_miso_data : std_logic;
+signal spi_miso_io : std_logic;
+
+signal covox_write_enable : std_logic;
+signal covox_channel0 : std_logic_vector(7 downto 0);
+signal covox_channel1 : std_logic_vector(7 downto 0);
+signal covox_channel2 : std_logic_vector(7 downto 0);
+signal covox_channel3 : std_logic_vector(7 downto 0);
+
 BEGIN 
 
+	
+-- mist spi io
+mist_spi_interface : data_io 
+	PORT map
+	(
+		CLK =>spi_sck,
+		RESET_n =>reset_n,
+		
+		-- SPI connection - up to upstream to make miso 'Z' on ss_io going high
+		SPI_CLK =>spi_sck,
+		SPI_SS_IO => spi_ss2,
+		SPI_MISO => spi_miso_data,
+		SPI_MOSI => spi_di,
+		
+		-- Sector access request
+		request => mist_sector_request_sync,
+		sector => mist_sector_sync(23 downto 0),
+		ready => mist_sector_ready,
+		
+		-- DMA to RAM
+		ADDR => mist_addr,
+		DATA_OUT => mist_do,
+		DATA_IN => mist_di,
+		WR_EN => mist_wren
+	 );
+ 
+	select_sync : synchronizer
+	PORT MAP ( CLK => clk, raw => mist_sector_ready, sync=>mist_sector_ready_sync);
+
+	select_sync2 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector_request, sync=>mist_sector_request_sync);
+
+	sector_sync0 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(0), sync=>mist_sector_sync(0));
+
+	sector_sync1 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(1), sync=>mist_sector_sync(1));
+
+	sector_sync2 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(2), sync=>mist_sector_sync(2));
+
+	sector_sync3 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(3), sync=>mist_sector_sync(3));
+
+	sector_sync4 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(4), sync=>mist_sector_sync(4));
+
+	sector_sync5 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(5), sync=>mist_sector_sync(5));
+
+	sector_sync6 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(6), sync=>mist_sector_sync(6));
+
+	sector_sync7 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(7), sync=>mist_sector_sync(7));
+
+	sector_sync8 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(8), sync=>mist_sector_sync(8));
+
+	sector_sync9 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(9), sync=>mist_sector_sync(9));
+
+	sector_sync10 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(10), sync=>mist_sector_sync(10));
+
+	sector_sync11 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(11), sync=>mist_sector_sync(11));
+
+	sector_sync12 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(12), sync=>mist_sector_sync(12));
+
+	sector_sync13 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(13), sync=>mist_sector_sync(13));
+
+	sector_sync14 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(14), sync=>mist_sector_sync(14));
+
+	sector_sync15 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(15), sync=>mist_sector_sync(15));
+
+	sector_sync16 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(16), sync=>mist_sector_sync(16));
+
+	sector_sync17 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(17), sync=>mist_sector_sync(17));
 
+	sector_sync18 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(18), sync=>mist_sector_sync(18));
+
+	sector_sync19 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(19), sync=>mist_sector_sync(19));
+
+	sector_sync20 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(20), sync=>mist_sector_sync(20));
+
+	sector_sync21 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(21), sync=>mist_sector_sync(21));
+
+	sector_sync22 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(22), sync=>mist_sector_sync(22));
+
+	sector_sync23 : synchronizer
+	PORT MAP ( CLK => spi_sck, raw => mist_sector(23), sync=>mist_sector_sync(23));
+	
+	
+	spi_do <= spi_miso_io when CONF_DATA0 ='0' else spi_miso_data when spi_SS2='0' else 'Z';
+
+	-- TODO, dual port, dual clock! 
+--	mist_sector_buffer : generic_ram_infer
+--	generic map
+--	(
+--		ADDRESS_WIDTH => 9,
+--		SPACE => 512,
+--		DATA_WIDTH => 8
+--	)
+--   PORT map
+--   (
+--      clock => spi_sck,
+--      data => mist_do,
+--      address => mist_addr,
+--      we => mist_wren,
+--      q => mist_di
+--   );
+
+mist_sector_buffer1 : mist_sector_buffer
+	PORT map
+	(
+		address_a		=> mist_addr,
+		address_b		=> ZPU_ADDR_ROM_RAM(8 DOWNTO 2),
+		clock_a		=> spi_sck,
+		clock_b		=> clk,
+		data_a		=> mist_do,
+		data_b		=> zpu_do,
+		wren_a		=> mist_wren,
+		wren_b		=> '0',
+		q_a		=> mist_di,
+		q_b		=> zpu_sector_data
+	);
+	
+my_user_io : user_io
+	PORT map(
+	   SPI_CLK => SPI_SCK,
+	   SPI_SS_IO => CONF_DATA0,
+	   SPI_MISO => SPI_miso_io,
+	   SPI_MOSI => SPI_DI,
+	   CORE_TYPE => x"A4",
+		JOY0 => joy1,
+		JOY1 => joy2,
+		KEYBOARD => keyboard,
+		BUTTONS => mist_buttons,
+		SWITCHES => mist_switches
+	  );
+	  
+	 joy1_n <= not(joy1);
+	 joy2_n <= not(joy2);
+	 
+	process(clk,reset_n)
+	begin
+		if (reset_n='0') then
+			capsheld_reg <= '0';
+		elsif (clk'event and clk='1') then
+			capsheld_reg <= capsheld_next;
+		end if;
+	end process;
+
+	process(keyboard,capsheld_reg)
+	begin
+		capsheld_next <= capsheld_reg;
+		capslock_pressed <= '0';
+		
+		if ((keyboard(58) xor capsheld_reg)='1') then
+			capsheld_next <= keyboard(58);
+			
+			-- assert something for 10 frames
+			capslock_pressed <= '1';
+		end if;
+	end process;
+	
+atari_keyboard(63) <= keyboard(30);
+atari_keyboard(62) <= keyboard(31);
+atari_keyboard(61) <= keyboard(34);
+atari_keyboard(60) <= '0';
+atari_keyboard(58) <= keyboard(32);
+atari_keyboard(57) <= keyboard(35);
+atari_keyboard(56) <= keyboard(33);
+atari_keyboard(55) <= keyboard(13);
+atari_keyboard(54) <= keyboard(12);
+atari_keyboard(53) <= keyboard(9);
+atari_keyboard(52) <= keyboard(14);
+atari_keyboard(51) <= keyboard(8);
+atari_keyboard(50) <= keyboard(11);
+atari_keyboard(48) <= keyboard(10);
+atari_keyboard(47) <= keyboard(16);
+atari_keyboard(46) <= keyboard(17);
+atari_keyboard(45) <= keyboard(20);
+atari_keyboard(44) <= keyboard(15);
+atari_keyboard(43) <= keyboard(21);
+atari_keyboard(42) <= keyboard(18);
+atari_keyboard(40) <= keyboard(19);
+atari_keyboard(39) <= keyboard(56);
+atari_keyboard(38) <= keyboard(53);
+atari_keyboard(37) <= keyboard(50);
+atari_keyboard(35) <= keyboard(49);
+atari_keyboard(34) <= keyboard(52);
+atari_keyboard(33) <= keyboard(57);
+atari_keyboard(32) <= keyboard(51);
+atari_keyboard(31) <= keyboard(2);
+atari_keyboard(30) <= keyboard(3);
+atari_keyboard(29) <= keyboard(6);
+atari_keyboard(28) <= keyboard(1);
+atari_keyboard(27) <= keyboard(7);
+atari_keyboard(26) <= keyboard(4);
+atari_keyboard(24) <= keyboard(5);
+atari_keyboard(23) <= keyboard(44);
+atari_keyboard(22) <= keyboard(45);
+atari_keyboard(21) <= keyboard(48);
+atari_keyboard(18) <= keyboard(46);
+atari_keyboard(17) <= keyboard(59);
+atari_keyboard(16) <= keyboard(47);
+atari_keyboard(15) <= keyboard(27);
+atari_keyboard(14) <= keyboard(26);
+atari_keyboard(13) <= keyboard(23);
+atari_keyboard(12) <= keyboard(28);
+atari_keyboard(11) <= keyboard(22);
+atari_keyboard(10) <= keyboard(25);
+atari_keyboard(8) <= keyboard(24);
+atari_keyboard(7) <= keyboard(41);
+atari_keyboard(6) <= keyboard(40);
+atari_keyboard(5) <= keyboard(37);
+atari_keyboard(2) <= keyboard(39);
+atari_keyboard(1) <= keyboard(36);
+atari_keyboard(0) <= keyboard(38);
+
+	  
+shift_pressed <= keyboard(54) or keyboard(42);
+control_pressed <= keyboard(29);
+break_pressed <= keyboard(96); -- TODO - not on st keyboard
+
+consol_start <= keyboard(60); --F2
+consol_select <= keyboard(61); --F3
+consol_option <= keyboard(62); -- F4
+		
+--f5 <= keyboard(63);
+--f6 <= keyboard(64);
+--f7 <= keyboard(65);
+--f8 <= keyboard(66);
+--f9 <= keyboard(67);
+--f10 <= keyboard(68);
+
+virtual_keys <= keyboard(65)&keyboard(66)&keyboard(67)&keyboard(68);
+SYSTEM_RESET_REQUEST <= keyboard(63);
+
+process(keyboard_scan, atari_keyboard, control_pressed, shift_pressed, break_pressed)
+	begin	
+		keyboard_response <= (others=>'1');		
+		
+		if (atari_keyboard(to_integer(unsigned(not(keyboard_scan)))) = '1') then
+			keyboard_response(0) <= '0';
+		end if;
+		
+--		if (key_held='1' and kbcode(5 downto 0) = not(keyboard_scan)) then
+--			keyboard_response(0) <= '0';
+--		end if;
+		
+		if (keyboard_scan(5 downto 4)="00" and break_pressed = '1') then
+			keyboard_response(1) <= '0';
+		end if;
+		
+		if (keyboard_scan(5 downto 4)="10" and shift_pressed = '1') then
+			keyboard_response(1) <= '0';
+		end if;
 
+		if (keyboard_scan(5 downto 4)="11" and control_pressed = '1') then
+			keyboard_response(1) <= '0';
+		end if;
+end process;		 
+		  
+	-- decode address
+--decode_addr1 : complete_address_decoder
+--	generic map(width=>6)
+--	port map (addr_in=>keyboard_scan, addr_decoded=>keyboard_scan_decoded);
+	  
 b2v_a_6502 : cpu
 PORT MAP(CLK => CLK,
 		 RESET => CPU_6502_RESET,
@@ -804,6 +1268,8 @@
 		 CHANNEL_1 => SYNTHESIZED_WIRE_1,
 		 CHANNEL_2 => SYNTHESIZED_WIRE_2,
 		 CHANNEL_3 => SYNTHESIZED_WIRE_3,
+		 COVOX_CHANNEL_0 => covox_channel0,
+		 COVOX_CHANNEL_1 => covox_channel1,
 		 CHANNEL_ENABLE => "1111",
 		 VOLUME_OUT => AUDIO_LEFT);
 		 
@@ -848,6 +1314,7 @@
 		 ZPU_DI => MEMORY_DATA,
 		 ZPU_RAM_DI => ZPU_RAM_DATA,
 		 ZPU_ROM_DI => ZPU_ROM_DATA,
+		 ZPU_SECTOR_DI => zpu_sector_data,
 		 MEMORY_FETCH => ZPU_FETCH,
 		 ZPU_READ_ENABLE => ZPU_READ_ENABLE,
 		 ZPU_32BIT_WRITE_ENABLE => ZPU_32BIT_WRITE_ENABLE,
@@ -867,6 +1334,8 @@
 		 CHANNEL_1 => SYNTHESIZED_WIRE_5,
 		 CHANNEL_2 => SYNTHESIZED_WIRE_6,
 		 CHANNEL_3 => SYNTHESIZED_WIRE_7,
+		 COVOX_CHANNEL_0 => covox_channel2,
+		 COVOX_CHANNEL_1 => covox_channel3, 
 		 CHANNEL_ENABLE => "1111",
 		 VOLUME_OUT => AUDIO_RIGHT);
 
@@ -944,24 +1413,26 @@
 		 SCANDOUBLER_ENABLE_HIGH => SCANDOUBLER_SHARED_ENABLE_HIGH);
 
 
-b2v_inst18 : pokey_ps2_decoder
-PORT MAP(CLK => CLK,
-		 RESET_N => RESET_N,
-		 KEY_EVENT => SYNTHESIZED_WIRE_8,
-		 KEY_EXTENDED => SYNTHESIZED_WIRE_9,
-		 KEY_UP => SYNTHESIZED_WIRE_10,
-		 KEY_CODE => SYNTHESIZED_WIRE_11,
-		 KEY_HELD => KEY_HELD,
-		 SHIFT_PRESSED => SHIFT_PRESSED,
-		 BREAK_PRESSED => BREAK_PRESSED,
-		 CONSOL_START => CONSOL_START,
-		 CONSOL_SELECT => CONSOL_SELECT,
-		 CONSOL_OPTION => CONSOL_OPTION,
-		 SYSTEM_RESET => SYSTEM_RESET_REQUEST,
-		 KBCODE => KBCODE,
-		 VIRTUAL_STICKS => VIRTUAL_STICKS,
-		 VIRTUAL_TRIGGER => VIRTUAL_TRIGGERS,
-		 VIRTUAL_KEYS => VIRTUAL_KEYS);
+virtual_sticks <= (others=>'1');
+virtual_triggers <= "0011";
+--b2v_inst18 : pokey_ps2_decoder
+--PORT MAP(CLK => CLK,
+--		 RESET_N => RESET_N,
+--		 KEY_EVENT => SYNTHESIZED_WIRE_8,
+--		 KEY_EXTENDED => SYNTHESIZED_WIRE_9,
+--		 KEY_UP => SYNTHESIZED_WIRE_10,
+--		 KEY_CODE => SYNTHESIZED_WIRE_11,
+--		 KEY_HELD => KEY_HELD,
+--		 SHIFT_PRESSED => SHIFT_PRESSED_DUMMY,
+--		 BREAK_PRESSED => BREAK_PRESSED_DUMMY,
+--		 CONSOL_START => CONSOL_START_DUMMY,
+--		 CONSOL_SELECT => CONSOL_SELECT_DUMMY,
+--		 CONSOL_OPTION => CONSOL_OPTION_DUMMY,
+--		 SYSTEM_RESET => SYSTEM_RESET_REQUEST,
+--		 KBCODE => KBCODE_dummy,
+--		 VIRTUAL_STICKS => VIRTUAL_STICKS,
+--		 VIRTUAL_TRIGGER => VIRTUAL_TRIGGERS,
+--		 VIRTUAL_KEYS => VIRTUAL_KEYS);
 
 -- no cart!
 CART_RD4 <= '0';
@@ -1003,9 +1474,9 @@
 		 CACHE_POKEY_DATA => CACHE_POKEY_DO,
 		 PORTB => PORTB_OUT,
 		 RAM_DATA => RAM_DO,
-		 ram_select => RAM_SELECT,
+		 ram_select => RAM_SELECT(2 downto 0),
 		 ROM_DATA => ROM_DO,
-		 rom_select => ROM_SELECT,
+		 rom_select => "00"&ROM_SELECT, -- TODO
 		 SDRAM_DATA => SDRAM_DO,
 		 ZPU_ADDR => ZPU_ADDR_FETCH,
 		 ZPU_WRITE_DATA => ZPU_DO,
@@ -1038,7 +1509,10 @@
 		 RAM_ADDR => RAM_ADDR,
 		 ROM_ADDR => ROM_ADDR,
 		 SDRAM_ADDR => SDRAM_ADDR,
-		 WRITE_DATA => WRITE_DATA);
+		 WRITE_DATA => WRITE_DATA,
+		 d6_wr_enable => covox_write_enable,
+		 cart_select => "0000000",
+		 cart_activate => '0');
 
 b2v_inst21 : zpu_rom
 PORT MAP(clock => CLK,
@@ -1058,10 +1532,9 @@
 		 colour_in => SYNTHESIZED_WIRE_14,
 		 VSYNC => VGA_VS,
 		 HSYNC => VGA_HS,
-		 B => VGA_B,
-		 G => VGA_G,
-		 R => VGA_R);
-
+		 B => VGA_B(5 downto 2),
+		 G => VGA_G(5 downto 2),
+		 R => VGA_R(5 downto 2));
 
 b2v_inst23 : zpu_ram
 PORT MAP(wren => ZPU_STACK_WRITE(2),
@@ -1105,7 +1578,11 @@
 		 RAM_SELECT => RAM_SELECT,
 		 ROM_SELECT => ROM_SELECT,
 		 THROTTLE_COUNT_6502 => THROTTLE_COUNT_6502,
-		 ZPU_HEX => ZPU_HEX);
+		 ZPU_HEX => ZPU_HEX,
+		 sector_request => mist_sector_request,
+		 sector => mist_sector,
+		 sector_ready => mist_sector_ready_sync
+		 );
 
 
 b2v_inst25 : zpu_ram
@@ -1133,7 +1610,7 @@
 
 
 b2v_inst5 : pll
-PORT MAP(inclk0 => FPGA_CLK,
+PORT MAP(inclk0 => CLOCK_27(0),
 		 c0 => CLK_SDRAM,
 		 c1 => CLK,
 		 c2 => SDRAM_CLK,
@@ -1164,27 +1641,27 @@
 		 DATA_OUT => POKEY_DO,
 		 keyboard_scan => KEYBOARD_SCAN);
 
-	process(keyboard_scan, kbcode, key_held, shift_pressed, break_pressed)
-	begin	
-		keyboard_response <= (others=>'1');
-		
-		if (key_held='1' and kbcode(5 downto 0) = not(keyboard_scan)) then
-			keyboard_response(0) <= '0';
-		end if;
-		
-		if (keyboard_scan(5 downto 4)="00" and break_pressed = '1') then
-			keyboard_response(1) <= '0';
-		end if;
-		
-		if (keyboard_scan(5 downto 4)="10" and shift_pressed = '1') then
-			keyboard_response(1) <= '0';
-		end if;
-
-		if (keyboard_scan(5 downto 4)="11" and kbcode(7) = '1') then
-			keyboard_response(1) <= '0';
-		end if;
-	end process;		 
-		 	 
+--	process(keyboard_scan, kbcode, key_held, shift_pressed, break_pressed)
+--	begin	
+--		keyboard_response <= (others=>'1');
+--		
+--		if (key_held='1' and kbcode(5 downto 0) = not(keyboard_scan)) then
+--			keyboard_response(0) <= '0';
+--		end if;
+--		
+--		if (keyboard_scan(5 downto 4)="00" and break_pressed = '1') then
+--			keyboard_response(1) <= '0';
+--		end if;
+--		
+--		if (keyboard_scan(5 downto 4)="10" and shift_pressed = '1') then
+--			keyboard_response(1) <= '0';
+--		end if;
+--
+--		if (keyboard_scan(5 downto 4)="11" and kbcode(7) = '1') then
+--			keyboard_response(1) <= '0';
+--		end if;
+--	end process;		 
+--		 	 
 b2v_inst8 : gtia
 PORT MAP(CLK => CLK,
 		 WR_EN => GTIA_WRITE_ENABLE,
@@ -1281,39 +1758,7 @@
 	RAM_DATA => ram_do(7 downto 0)
 	);
 
---b2v_inst20 : sdram_statemachine
---GENERIC MAP(ADDRESS_WIDTH => 22,
---			AP_BIT => 10,
---			COLUMN_WIDTH => 8,
---			ROW_WIDTH => 12
---			)
---PORT MAP(CLK_SYSTEM => CLK,
---		 CLK_SDRAM => CLK_SDRAM,
---		 RESET_N => RESET_N,
---		 READ_EN => SDRAM_READ_ENABLE,
---		 WRITE_EN => SDRAM_WRITE_ENABLE,
---		 REQUEST => SDRAM_REQUEST,
---		 BYTE_ACCESS => WIDTH_8BIT_ACCESS,
---		 WORD_ACCESS => WIDTH_16BIT_ACCESS,
---		 LONGWORD_ACCESS => WIDTH_32BIT_ACCESS,
---		 REFRESH => SDRAM_REFRESH,
---		 ADDRESS_IN => SDRAM_ADDR,
---		 DATA_IN => WRITE_DATA,
---		 SDRAM_DQ => SDRAM_DQ,
---		 REPLY => SDRAM_REPLY,
---		 SDRAM_BA0 => SDRAM_BA(0),
---		 SDRAM_BA1 => SDRAM_BA(1),
---		 SDRAM_CKE => SDRAM_A(12),
---		 SDRAM_CS_N => SDRAM_CS_N,
---		 SDRAM_RAS_N => SDRAM_RAS_N,
---		 SDRAM_CAS_N => SDRAM_CAS_N,
---		 SDRAM_WE_N => SDRAM_WE_N,
---		 SDRAM_ldqm => SDRAM_DQM_n(0),
---		 SDRAM_udqm => SDRAM_DQM_n(1),
---		 DATA_OUT => SDRAM_DO,
---		 SDRAM_ADDR => SDRAM_A(11 downto 0));
-
-b2v_inst20 : sdram_statemachine_mcc
+b2v_inst20 : sdram_statemachine
 GENERIC MAP(ADDRESS_WIDTH => 22,
 			AP_BIT => 10,
 			COLUMN_WIDTH => 8,
@@ -1332,18 +1777,70 @@
 		 ADDRESS_IN => SDRAM_ADDR,
 		 DATA_IN => WRITE_DATA,
 		 SDRAM_DQ => SDRAM_DQ,
-		 REPLY => SDRAM_REQUEST_COMPLETE,
+		 COMPLETE => SDRAM_REQUEST_COMPLETE,
 		 SDRAM_BA0 => SDRAM_BA(0),
 		 SDRAM_BA1 => SDRAM_BA(1),
-		 --SDRAM_CKE => SDRAM_A(12), -- TODO?
-		 SDRAM_CS_N => SDRAM_CS_N,
-		 SDRAM_RAS_N => SDRAM_RAS_N,
-		 SDRAM_CAS_N => SDRAM_CAS_N,
-		 SDRAM_WE_N => SDRAM_WE_N,
-		 SDRAM_ldqm => SDRAM_DQM_n(0),
-		 SDRAM_udqm => SDRAM_DQM_n(1),
+		 SDRAM_CKE => SDRAM_CKE,
+		 SDRAM_CS_N => SDRAM_nCS,
+		 SDRAM_RAS_N => SDRAM_nRAS,
+		 SDRAM_CAS_N => SDRAM_nCAS,
+		 SDRAM_WE_N => SDRAM_nWE,
+		 SDRAM_ldqm => SDRAM_DQML,
+		 SDRAM_udqm => SDRAM_DQMH,
 		 DATA_OUT => SDRAM_DO,
-		 SDRAM_ADDR => SDRAM_A(12 downto 0)); -- TODO?
+		 SDRAM_ADDR => SDRAM_A(11 downto 0));
+		 
+SDRAM_A(12) <= '0';
+
+--b2v_inst20 : sdram_statemachine_mcc
+--GENERIC MAP(ADDRESS_WIDTH => 22,
+--			AP_BIT => 10,
+--			COLUMN_WIDTH => 8,
+--			ROW_WIDTH => 12
+--			)
+--PORT MAP(CLK_SYSTEM => CLK,
+--		 CLK_SDRAM => CLK_SDRAM,
+--		 RESET_N => RESET_N,
+--		 READ_EN => SDRAM_READ_ENABLE,
+--		 WRITE_EN => SDRAM_WRITE_ENABLE,
+--		 REQUEST => SDRAM_REQUEST,
+--		 BYTE_ACCESS => WIDTH_8BIT_ACCESS,
+--		 WORD_ACCESS => WIDTH_16BIT_ACCESS,
+--		 LONGWORD_ACCESS => WIDTH_32BIT_ACCESS,
+--		 REFRESH => SDRAM_REFRESH,
+--		 ADDRESS_IN => SDRAM_ADDR,
+--		 DATA_IN => WRITE_DATA,
+--		 SDRAM_DQ => SDRAM_DQ,
+--		 REPLY => SDRAM_REQUEST_COMPLETE,
+--		 SDRAM_BA0 => SDRAM_BA(0),
+--		 SDRAM_BA1 => SDRAM_BA(1),
+--		 --SDRAM_CKE => SDRAM_A(12), -- TODO?
+--		 SDRAM_CS_N => SDRAM_nCS,
+--		 SDRAM_RAS_N => SDRAM_nRAS,
+--		 SDRAM_CAS_N => SDRAM_nCAS,
+--		 SDRAM_WE_N => SDRAM_nWE,
+--		 SDRAM_ldqm => SDRAM_DQML,
+--		 SDRAM_udqm => SDRAM_DQMH,
+--		 DATA_OUT => SDRAM_DO,
+--		 SDRAM_ADDR => SDRAM_A(12 downto 0)); -- TODO?
 
+--SDRAM_CKE <= '1';		 
+LED <= '0';
+VGA_R(1 downto 0) <= "00";
+VGA_G(1 downto 0) <= "00";
+VGA_B(1 downto 0) <= "00";
+
+covox1 : covox
+	PORT map
+	( 
+		clk => clk,
+		addr => pbi_addr(1 downto 0),
+		data_in => WRITE_DATA(7 DOWNTO 0),
+		wr_en => covox_write_enable,
+		covox_channel0 => covox_channel0,
+		covox_channel1 => covox_channel1,
+		covox_channel2 => covox_channel2,
+		covox_channel3 => covox_channel3
+	);
 		
 END bdf_type;
\ No newline at end of file
Only in atari800core_v1_20140312_mist/: ataribas.mif
Only in atari800core_v1_20140312_mist/: basic.cmp
Only in atari800core_v1_20140312_mist/: basic.qip
Only in atari800core_v1_20140312_mist/: basic.vhd
Only in atari800core_v1_20140312_mist/: covox.vhd
Only in atari800core_v1_20140312_mist/: covox.vhd.bak
Only in atari800core_v1_20140312_mist/: custom_io.vhd
Only in atari800core_v1_20140312_mist/: data_io.v~
Only in atari800core_v1_20140312_mist/: data_io.vhdl
Only in atari800core_v1_20140312_mist/: data_io.vhdl.bak
Only in atari800core_v1_20140312_mist/: generic_ram_infer.vhdl
Only in atari800core_v1_20140312_mist/: generic_ram_infer.vhdl.bak
diff -ur atari800core_v1_20140121_mcc216/internalromram.vhd atari800core_v1_20140312_mist/internalromram.vhd
--- atari800core_v1_20140121_mcc216/internalromram.vhd	2014-01-21 20:44:04.000000000 +0000
+++ atari800core_v1_20140312_mist/internalromram.vhd	2014-03-08 17:35:06.000000000 +0000
@@ -34,16 +34,16 @@
 	);
 END component;
 
-component romlo IS
+component rom16 IS
 	PORT
 	(
-		address		: IN STD_LOGIC_VECTOR (10 DOWNTO 0);
+		address		: IN STD_LOGIC_VECTOR (13 DOWNTO 0);
 		clock		: IN STD_LOGIC  := '1';
 		q		: OUT STD_LOGIC_VECTOR (7 DOWNTO 0)
 	);
 END component;
 
-component romhi IS
+component basic IS
 	PORT
 	(
 		address		: IN STD_LOGIC_VECTOR (12 DOWNTO 0);
@@ -55,8 +55,8 @@
 	signal rom_request_reg : std_logic;
 	signal ram_request_reg : std_logic;
 	
-	signal ROMLO_DATA : std_logic_vector(7 downto 0);
-	signal ROMHI_DATA : std_logic_vector(7 downto 0);
+	signal ROM16_DATA : std_logic_vector(7 downto 0);
+	signal BASIC_DATA : std_logic_vector(7 downto 0);	
 	
 	signal RAM_WR_ENABLE_REAL : std_logic;
 	signal IRAM_DATA : std_logic_vector(7 downto 0);
@@ -74,26 +74,42 @@
 	end process;
 
 	rom_request_complete <= rom_request_reg;
-	ROM_DATA <= ROMLO_DATA when rom_addr(15 downto 12)=X"D" else ROMHI_DATA;	
-	romlo1 : romlo
-	PORT MAP(clock => clock,
-			 address => rom_addr(10 downto 0),
-			 q => ROMLO_data
-			 );	
-	romhi1 : romhi
-	PORT MAP(clock => clock,
-			 address => rom_addr(12 downto 0),
-			 q => ROMHI_data
-			 );
-	
-	ramint1 : ramint
-	PORT MAP(clock => clock,
-			 address => ram_addr(12 downto 0),
-			 data => ram_data_in(7 downto 0),
-			 wren => RAM_WR_ENABLE_REAL,
-			 q => iram_data
-			 );	
+	--C000 = basic. 
+	--0000-07FF = low
+	--0800-27ff high
+	
+	process(rom16_data,basic_data, rom_addr(15 downto 0))
+	begin
+		ROM_DATA <= ROM16_DATA;
+		if (rom_addr(15)='1') then
+			ROM_DATA <= BASIC_DATA;
+		end if;
+	end process;
+	
+	
+	--ROM_DATA <= ROMLO_DATA when rom_addr(15 downto 12)=X"D" else ROMHI_DATA;	
+	--ROM_DATA <= ROMHI_DATA;
+--	basic1 : basic
+--	PORT MAP(clock => clock,
+--			 address => rom_addr(12 downto 0),
+--			 q => BASIC_data
+--			 );			 
+--			 
+--	rom16a : rom16
+--	PORT MAP(clock => clock,
+--			 address => rom_addr(13 downto 0),
+--			 q => ROM16_data
+--			 );
+--	
+--	ramint1 : ramint
+--	PORT MAP(clock => clock,
+--			 address => ram_addr(12 downto 0),
+--			 data => ram_data_in(7 downto 0),
+--			 wren => RAM_WR_ENABLE_REAL,
+--			 q => iram_data
+--			 );	
 	ram_request_complete <= ram_request_reg;
+	
 	RAM_DATA <= IRAM_DATA when ram_addr(15 downto 13)= "000" else X"FF";
 	RAM_WR_ENABLE_REAL <= RAM_WR_ENABLE when ram_addr(15 downto 13)="000" else '0'; -- ban writes over 8k when using int ram - HACK
 end vhdl;
\ No newline at end of file
Only in atari800core_v1_20140312_mist/: mist_sector_buffer.cmp
Only in atari800core_v1_20140312_mist/: mist_sector_buffer.qip
Only in atari800core_v1_20140312_mist/: mist_sector_buffer.vhd
Only in atari800core_v1_20140312_mist/: os16.mif
Only in atari800core_v1_20140312_mist/: output_file.rbf
diff -ur atari800core_v1_20140121_mcc216/pll.bsf atari800core_v1_20140312_mist/pll.bsf
--- atari800core_v1_20140121_mcc216/pll.bsf	2014-01-26 09:19:13.000000000 +0000
+++ atari800core_v1_20140312_mist/pll.bsf	2014-03-01 09:10:29.000000000 +0000
@@ -20,8 +20,8 @@
 */
 (header "symbol" (version "1.2"))
 (symbol
-	(rect 0 0 248 184)
-	(text "pll" (rect 118 0 133 16)(font "Arial" (font_size 10)))
+	(rect 0 0 256 184)
+	(text "pll" (rect 122 0 137 16)(font "Arial" (font_size 10)))
 	(text "inst" (rect 8 168 25 180)(font "Arial" ))
 	(port
 		(pt 0 64)
@@ -31,70 +31,70 @@
 		(line (pt 0 64)(pt 40 64))
 	)
 	(port
-		(pt 248 64)
+		(pt 256 64)
 		(output)
 		(text "c0" (rect 0 0 14 14)(font "Arial" (font_size 8)))
-		(text "c0" (rect 232 50 242 63)(font "Arial" (font_size 8)))
+		(text "c0" (rect 240 50 250 63)(font "Arial" (font_size 8)))
 	)
 	(port
-		(pt 248 80)
+		(pt 256 80)
 		(output)
 		(text "c1" (rect 0 0 14 14)(font "Arial" (font_size 8)))
-		(text "c1" (rect 232 66 240 79)(font "Arial" (font_size 8)))
+		(text "c1" (rect 240 66 248 79)(font "Arial" (font_size 8)))
 	)
 	(port
-		(pt 248 96)
+		(pt 256 96)
 		(output)
 		(text "c2" (rect 0 0 14 14)(font "Arial" (font_size 8)))
-		(text "c2" (rect 232 82 242 95)(font "Arial" (font_size 8)))
+		(text "c2" (rect 240 82 250 95)(font "Arial" (font_size 8)))
 	)
 	(port
-		(pt 248 112)
+		(pt 256 112)
 		(output)
 		(text "locked" (rect 0 0 36 14)(font "Arial" (font_size 8)))
-		(text "locked" (rect 213 98 242 111)(font "Arial" (font_size 8)))
+		(text "locked" (rect 221 98 250 111)(font "Arial" (font_size 8)))
 	)
 	(drawing
-		(text "Cyclone III" (rect 186 168 417 347)(font "Arial" ))
-		(text "inclk0 frequency: 5.000 MHz" (rect 50 59 218 129)(font "Arial" ))
+		(text "Cyclone III" (rect 194 168 433 347)(font "Arial" ))
+		(text "inclk0 frequency: 27.000 MHz" (rect 50 59 223 129)(font "Arial" ))
 		(text "Operation Mode: Normal" (rect 50 72 199 155)(font "Arial" ))
 		(text "Clk " (rect 51 93 116 197)(font "Arial" ))
 		(text "Ratio" (rect 72 93 164 197)(font "Arial" ))
-		(text "Ph (dg)" (rect 98 93 225 197)(font "Arial" ))
-		(text "DC (%)" (rect 132 93 294 197)(font "Arial" ))
+		(text "Ph (dg)" (rect 99 93 227 197)(font "Arial" ))
+		(text "DC (%)" (rect 133 93 296 197)(font "Arial" ))
 		(text "c0" (rect 54 107 116 225)(font "Arial" ))
-		(text "23/2" (rect 74 107 164 225)(font "Arial" ))
-		(text "0.00" (rect 104 107 224 225)(font "Arial" ))
-		(text "50.00" (rect 136 107 293 225)(font "Arial" ))
+		(text "69/16" (rect 72 107 165 225)(font "Arial" ))
+		(text "0.00" (rect 105 107 226 225)(font "Arial" ))
+		(text "50.00" (rect 137 107 295 225)(font "Arial" ))
 		(text "c1" (rect 54 121 115 253)(font "Arial" ))
-		(text "23/2" (rect 74 121 164 253)(font "Arial" ))
-		(text "0.00" (rect 104 121 224 253)(font "Arial" ))
-		(text "50.00" (rect 136 121 293 253)(font "Arial" ))
+		(text "69/32" (rect 72 121 165 253)(font "Arial" ))
+		(text "0.00" (rect 105 121 226 253)(font "Arial" ))
+		(text "50.00" (rect 137 121 295 253)(font "Arial" ))
 		(text "c2" (rect 54 135 116 281)(font "Arial" ))
-		(text "23/2" (rect 74 135 164 281)(font "Arial" ))
-		(text "0.00" (rect 104 135 224 281)(font "Arial" ))
-		(text "50.00" (rect 136 135 293 281)(font "Arial" ))
-		(line (pt 0 0)(pt 249 0))
-		(line (pt 249 0)(pt 249 185))
-		(line (pt 0 185)(pt 249 185))
+		(text "69/16" (rect 72 135 165 281)(font "Arial" ))
+		(text "-67.06" (rect 101 135 226 281)(font "Arial" ))
+		(text "50.00" (rect 137 135 295 281)(font "Arial" ))
+		(line (pt 0 0)(pt 257 0))
+		(line (pt 257 0)(pt 257 185))
+		(line (pt 0 185)(pt 257 185))
 		(line (pt 0 0)(pt 0 185))
-		(line (pt 48 91)(pt 164 91))
-		(line (pt 48 104)(pt 164 104))
-		(line (pt 48 118)(pt 164 118))
-		(line (pt 48 132)(pt 164 132))
-		(line (pt 48 146)(pt 164 146))
+		(line (pt 48 91)(pt 165 91))
+		(line (pt 48 104)(pt 165 104))
+		(line (pt 48 118)(pt 165 118))
+		(line (pt 48 132)(pt 165 132))
+		(line (pt 48 146)(pt 165 146))
 		(line (pt 48 91)(pt 48 146))
 		(line (pt 69 91)(pt 69 146)(line_width 3))
-		(line (pt 95 91)(pt 95 146)(line_width 3))
-		(line (pt 129 91)(pt 129 146)(line_width 3))
-		(line (pt 163 91)(pt 163 146))
-		(line (pt 40 48)(pt 199 48))
-		(line (pt 199 48)(pt 199 167))
-		(line (pt 40 167)(pt 199 167))
+		(line (pt 96 91)(pt 96 146)(line_width 3))
+		(line (pt 130 91)(pt 130 146)(line_width 3))
+		(line (pt 164 91)(pt 164 146))
+		(line (pt 40 48)(pt 207 48))
+		(line (pt 207 48)(pt 207 167))
+		(line (pt 40 167)(pt 207 167))
 		(line (pt 40 48)(pt 40 167))
-		(line (pt 247 64)(pt 199 64))
-		(line (pt 247 80)(pt 199 80))
-		(line (pt 247 96)(pt 199 96))
-		(line (pt 247 112)(pt 199 112))
+		(line (pt 255 64)(pt 207 64))
+		(line (pt 255 80)(pt 207 80))
+		(line (pt 255 96)(pt 207 96))
+		(line (pt 255 112)(pt 207 112))
 	)
 )
diff -ur atari800core_v1_20140121_mcc216/PLLJ_PLLSPE_INFO.txt atari800core_v1_20140312_mist/PLLJ_PLLSPE_INFO.txt
--- atari800core_v1_20140121_mcc216/PLLJ_PLLSPE_INFO.txt	2014-02-03 19:43:41.000000000 +0000
+++ atari800core_v1_20140312_mist/PLLJ_PLLSPE_INFO.txt	2014-03-12 05:05:11.000000000 +0000
@@ -1,5 +1,5 @@
 PLL_Name	pll:b2v_inst5|altpll:altpll_component|pll_altpll:auto_generated|pll1
-PLLJITTER	NA
+PLLJITTER	26
 PLLSPEmax	84
 PLLSPEmin	-53
 
diff -ur atari800core_v1_20140121_mcc216/pll.vhd atari800core_v1_20140312_mist/pll.vhd
--- atari800core_v1_20140121_mcc216/pll.vhd	2014-01-26 09:19:13.000000000 +0000
+++ atari800core_v1_20140312_mist/pll.vhd	2014-03-01 09:10:29.000000000 +0000
@@ -154,20 +154,20 @@
 	altpll_component : altpll
 	GENERIC MAP (
 		bandwidth_type => "AUTO",
-		clk0_divide_by => 2,
+		clk0_divide_by => 16,
 		clk0_duty_cycle => 50,
-		clk0_multiply_by => 23,
+		clk0_multiply_by => 69,
 		clk0_phase_shift => "0",
-		clk1_divide_by => 2,
+		clk1_divide_by => 32,
 		clk1_duty_cycle => 50,
-		clk1_multiply_by => 23,
+		clk1_multiply_by => 69,
 		clk1_phase_shift => "0",
-		clk2_divide_by => 2,
+		clk2_divide_by => 16,
 		clk2_duty_cycle => 50,
-		clk2_multiply_by => 23,
-		clk2_phase_shift => "0",
+		clk2_multiply_by => 69,
+		clk2_phase_shift => "-1600",
 		compensate_clock => "CLK0",
-		inclk0_input_frequency => 200000,
+		inclk0_input_frequency => 37037,
 		intended_device_family => "Cyclone III",
 		lpm_hint => "CBX_MODULE_PREFIX=pll",
 		lpm_type => "altpll",
@@ -246,15 +246,15 @@
 -- Retrieval info: PRIVATE: CUR_DEDICATED_CLK STRING "c0"
 -- Retrieval info: PRIVATE: CUR_FBIN_CLK STRING "c0"
 -- Retrieval info: PRIVATE: DEVICE_SPEED_GRADE STRING "8"
--- Retrieval info: PRIVATE: DIV_FACTOR0 NUMERIC "20"
--- Retrieval info: PRIVATE: DIV_FACTOR1 NUMERIC "20"
--- Retrieval info: PRIVATE: DIV_FACTOR2 NUMERIC "20"
+-- Retrieval info: PRIVATE: DIV_FACTOR0 NUMERIC "16"
+-- Retrieval info: PRIVATE: DIV_FACTOR1 NUMERIC "32"
+-- Retrieval info: PRIVATE: DIV_FACTOR2 NUMERIC "16"
 -- Retrieval info: PRIVATE: DUTY_CYCLE0 STRING "50.00000000"
 -- Retrieval info: PRIVATE: DUTY_CYCLE1 STRING "50.00000000"
 -- Retrieval info: PRIVATE: DUTY_CYCLE2 STRING "50.00000000"
--- Retrieval info: PRIVATE: EFF_OUTPUT_FREQ_VALUE0 STRING "57.500000"
--- Retrieval info: PRIVATE: EFF_OUTPUT_FREQ_VALUE1 STRING "57.500000"
--- Retrieval info: PRIVATE: EFF_OUTPUT_FREQ_VALUE2 STRING "57.500000"
+-- Retrieval info: PRIVATE: EFF_OUTPUT_FREQ_VALUE0 STRING "116.437500"
+-- Retrieval info: PRIVATE: EFF_OUTPUT_FREQ_VALUE1 STRING "58.218750"
+-- Retrieval info: PRIVATE: EFF_OUTPUT_FREQ_VALUE2 STRING "116.437500"
 -- Retrieval info: PRIVATE: EXPLICIT_SWITCHOVER_COUNTER STRING "0"
 -- Retrieval info: PRIVATE: EXT_FEEDBACK_RADIO STRING "0"
 -- Retrieval info: PRIVATE: GLOCKED_COUNTER_EDIT_CHANGED STRING "1"
@@ -262,7 +262,7 @@
 -- Retrieval info: PRIVATE: GLOCKED_MODE_CHECK STRING "1"
 -- Retrieval info: PRIVATE: GLOCK_COUNTER_EDIT NUMERIC "1048575"
 -- Retrieval info: PRIVATE: HAS_MANUAL_SWITCHOVER STRING "1"
--- Retrieval info: PRIVATE: INCLK0_FREQ_EDIT STRING "5.000"
+-- Retrieval info: PRIVATE: INCLK0_FREQ_EDIT STRING "27.000"
 -- Retrieval info: PRIVATE: INCLK0_FREQ_UNIT_COMBO STRING "MHz"
 -- Retrieval info: PRIVATE: INCLK1_FREQ_EDIT STRING "100.000"
 -- Retrieval info: PRIVATE: INCLK1_FREQ_EDIT_CHANGED STRING "1"
@@ -281,13 +281,13 @@
 -- Retrieval info: PRIVATE: MIRROR_CLK0 STRING "0"
 -- Retrieval info: PRIVATE: MIRROR_CLK1 STRING "0"
 -- Retrieval info: PRIVATE: MIRROR_CLK2 STRING "0"
--- Retrieval info: PRIVATE: MULT_FACTOR0 NUMERIC "230"
--- Retrieval info: PRIVATE: MULT_FACTOR1 NUMERIC "230"
--- Retrieval info: PRIVATE: MULT_FACTOR2 NUMERIC "230"
+-- Retrieval info: PRIVATE: MULT_FACTOR0 NUMERIC "69"
+-- Retrieval info: PRIVATE: MULT_FACTOR1 NUMERIC "69"
+-- Retrieval info: PRIVATE: MULT_FACTOR2 NUMERIC "69"
 -- Retrieval info: PRIVATE: NORMAL_MODE_RADIO STRING "1"
--- Retrieval info: PRIVATE: OUTPUT_FREQ0 STRING "28.70000000"
--- Retrieval info: PRIVATE: OUTPUT_FREQ1 STRING "28.70000000"
--- Retrieval info: PRIVATE: OUTPUT_FREQ2 STRING "100.00000000"
+-- Retrieval info: PRIVATE: OUTPUT_FREQ0 STRING "57.40000000"
+-- Retrieval info: PRIVATE: OUTPUT_FREQ1 STRING "57.50000000"
+-- Retrieval info: PRIVATE: OUTPUT_FREQ2 STRING "57.50000000"
 -- Retrieval info: PRIVATE: OUTPUT_FREQ_MODE0 STRING "0"
 -- Retrieval info: PRIVATE: OUTPUT_FREQ_MODE1 STRING "0"
 -- Retrieval info: PRIVATE: OUTPUT_FREQ_MODE2 STRING "0"
@@ -298,7 +298,7 @@
 -- Retrieval info: PRIVATE: PHASE_RECONFIG_INPUTS_CHECK STRING "0"
 -- Retrieval info: PRIVATE: PHASE_SHIFT0 STRING "0.00000000"
 -- Retrieval info: PRIVATE: PHASE_SHIFT1 STRING "0.00000000"
--- Retrieval info: PRIVATE: PHASE_SHIFT2 STRING "0.00000000"
+-- Retrieval info: PRIVATE: PHASE_SHIFT2 STRING "-1.60000000"
 -- Retrieval info: PRIVATE: PHASE_SHIFT_STEP_ENABLED_CHECK STRING "0"
 -- Retrieval info: PRIVATE: PHASE_SHIFT_UNIT0 STRING "deg"
 -- Retrieval info: PRIVATE: PHASE_SHIFT_UNIT1 STRING "ns"
@@ -340,20 +340,20 @@
 -- Retrieval info: PRIVATE: ZERO_DELAY_RADIO STRING "0"
 -- Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
 -- Retrieval info: CONSTANT: BANDWIDTH_TYPE STRING "AUTO"
--- Retrieval info: CONSTANT: CLK0_DIVIDE_BY NUMERIC "2"
+-- Retrieval info: CONSTANT: CLK0_DIVIDE_BY NUMERIC "16"
 -- Retrieval info: CONSTANT: CLK0_DUTY_CYCLE NUMERIC "50"
--- Retrieval info: CONSTANT: CLK0_MULTIPLY_BY NUMERIC "23"
+-- Retrieval info: CONSTANT: CLK0_MULTIPLY_BY NUMERIC "69"
 -- Retrieval info: CONSTANT: CLK0_PHASE_SHIFT STRING "0"
--- Retrieval info: CONSTANT: CLK1_DIVIDE_BY NUMERIC "2"
+-- Retrieval info: CONSTANT: CLK1_DIVIDE_BY NUMERIC "32"
 -- Retrieval info: CONSTANT: CLK1_DUTY_CYCLE NUMERIC "50"
--- Retrieval info: CONSTANT: CLK1_MULTIPLY_BY NUMERIC "23"
+-- Retrieval info: CONSTANT: CLK1_MULTIPLY_BY NUMERIC "69"
 -- Retrieval info: CONSTANT: CLK1_PHASE_SHIFT STRING "0"
--- Retrieval info: CONSTANT: CLK2_DIVIDE_BY NUMERIC "2"
+-- Retrieval info: CONSTANT: CLK2_DIVIDE_BY NUMERIC "16"
 -- Retrieval info: CONSTANT: CLK2_DUTY_CYCLE NUMERIC "50"
--- Retrieval info: CONSTANT: CLK2_MULTIPLY_BY NUMERIC "23"
--- Retrieval info: CONSTANT: CLK2_PHASE_SHIFT STRING "0"
+-- Retrieval info: CONSTANT: CLK2_MULTIPLY_BY NUMERIC "69"
+-- Retrieval info: CONSTANT: CLK2_PHASE_SHIFT STRING "-1600"
 -- Retrieval info: CONSTANT: COMPENSATE_CLOCK STRING "CLK0"
--- Retrieval info: CONSTANT: INCLK0_INPUT_FREQUENCY NUMERIC "200000"
+-- Retrieval info: CONSTANT: INCLK0_INPUT_FREQUENCY NUMERIC "37037"
 -- Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
 -- Retrieval info: CONSTANT: LPM_TYPE STRING "altpll"
 -- Retrieval info: CONSTANT: OPERATION_MODE STRING "NORMAL"
diff -ur atari800core_v1_20140121_mcc216/pokey_mixer.vhdl atari800core_v1_20140312_mist/pokey_mixer.vhdl
--- atari800core_v1_20140121_mcc216/pokey_mixer.vhdl	2014-01-17 20:20:16.000000000 +0000
+++ atari800core_v1_20140312_mist/pokey_mixer.vhdl	2014-03-09 17:25:18.000000000 +0000
@@ -22,6 +22,9 @@
 	CHANNEL_3 : IN STD_LOGIC_VECTOR(3 downto 0);
 	
 	GTIA_SOUND : IN STD_LOGIC;
+
+	COVOX_CHANNEL_0 : IN STD_LOGIC_VECTOR(7 downto 0);
+	COVOX_CHANNEL_1 : IN STD_LOGIC_VECTOR(7 downto 0);
 	
 	VOLUME_OUT : OUT STD_LOGIC_vector(15 downto 0)
 );
@@ -30,6 +33,7 @@
 ARCHITECTURE vhdl OF pokey_mixer IS
 	signal volume_reg : std_logic_vector(15 downto 0);
 	signal volume_next : std_logic_vector(15 downto 0);
+	signal volume_next_real : std_logic_vector(15 downto 0);	
 	
 	signal volume_sum : std_logic_vector(5 downto 0);
 	
@@ -38,13 +42,13 @@
 	signal channel_2_en : std_logic_vector(3 downto 0);
 	signal channel_3_en : std_logic_vector(3 downto 0);
 	
-	signal gtia_en : std_logic_vector(5 downto 0);
+	signal gtia_en : std_logic_vector(15 downto 0);
 BEGIN
 	-- register
 	process(clk)
 	begin
 		if (clk'event and clk='1') then
-			volume_reg <= volume_next;
+			volume_reg <= volume_next_real;
 		end if;
 	end process;
 	
@@ -73,9 +77,7 @@
 --		end if;
 	end process;
 	
-	gtia_en <= "0000"&gtia_sound&gtia_sound;  -- only room for 3 more! TODO, regenerate...
-	
-	process (channel_0_en,channel_1_en,channel_2_en,channel_3_en,gtia_en)
+	process (channel_0_en,channel_1_en,channel_2_en,channel_3_en,covox_CHANNEL_0,covox_channel_1,gtia_en)
 	begin
 		volume_sum <= 
 			std_logic_vector
@@ -89,12 +91,13 @@
 						unsigned('0'&CHANNEL_2_en) + 
 						unsigned('0'&CHANNEL_3_en)
 					))
-					+ 
-					unsigned(gtia_en)
 			);
 	end process;
 	
-	process (volume_sum)
+	gtia_en(15 downto 13) <= (others=>'0');
+	gtia_en(12) <= gtia_sound;
+	gtia_en(11 downto 0) <= (others=>'0');
+ 	process (volume_sum, volume_next, gtia_en, covOX_CHANNEL_0,covOX_CHANNEL_1)
 	begin
 		case volume_sum is 
 			when "000000" =>
@@ -223,9 +226,24 @@
 				volume_next <= X"79FF"; -- in case GTIA playing at full vol!
 		end case;
 		
+--		volume_next_real <= std_LOGIC_vector(
+--			(unsigned('0'&volume_next(15 downto 1)) 
+--			+ unsigned(gtia_en)) 
+--			+ (unsigned("00"&covox_CHANNEL_0) 
+--			+ unsigned("00"&covox_CHANNEL_1)));
+		
+		--volume_next_real <= '0'&volume_next(15 downto 1);
+		
+		volume_next_real <= std_LOGIC_vector(
+			(unsigned("00"&volume_next(15 downto 2)) 
+			+ unsigned(gtia_en)) 		
+			+ (unsigned("000"&covox_CHANNEL_0&"00000") 
+			+ unsigned("000"&covox_CHANNEL_1&"00000")));
+		
 	end process;
 			
 	-- output
+	-- TODO
 	volume_out <= volume_reg;
 		
 END vhdl;
\ No newline at end of file
Only in atari800core_v1_20140312_mist/: pokey_mixer.vhdl.bak
Only in atari800core_v1_20140312_mist/: rom16.cmp
Only in atari800core_v1_20140312_mist/: rom16.qip
Only in atari800core_v1_20140312_mist/: rom16.vhd
diff -ur atari800core_v1_20140121_mcc216/sdram_statemachine.vhdl atari800core_v1_20140312_mist/sdram_statemachine.vhdl
--- atari800core_v1_20140121_mcc216/sdram_statemachine.vhdl	2014-01-22 21:37:54.000000000 +0000
+++ atari800core_v1_20140312_mist/sdram_statemachine.vhdl	2014-02-16 20:26:57.000000000 +0000
@@ -28,13 +28,13 @@
 	ADDRESS_IN : in std_logic_vector(ADDRESS_WIDTH downto 0); -- 1 extra bit for byte alignment
 	READ_EN : in std_logic; -- if no reads pending may be a good time to do a refresh
 	WRITE_EN : in std_logic;
-	REQUEST : in std_logic; -- Toggle this to issue a new request
+	REQUEST : in std_logic; -- set true to request
 	BYTE_ACCESS : in std_logic; -- ldqm/udqm set based on a(0) - if 0=0111, if 1=1011. Data fields valid:7 downto 0.
 	WORD_ACCESS : in std_logic; -- ldqm/udqm set based on a(0) - if 0=0011, if 1=1001. Data fields valid:15 downto 0.
 	LONGWORD_ACCESS : in std_logic; -- a(0) ignored. lqdm/udqm mask is 0000
 	REFRESH : in std_logic;
 
-	REPLY : out std_logic; -- This matches the request once complete
+	COMPLETE : out std_logic;
 	DATA_OUT : out std_logic_vector(31 downto 0);
 
 	-- sdram itself
@@ -184,6 +184,9 @@
 	signal udqm_reg : std_logic;
 	signal cke_reg : std_logic;
 	
+	signal sdram_request_reg : std_logic;
+	signal sdram_request_next : std_logic;
+	
 BEGIN
 	-- register
 	process(CLK_SDRAM,reset_n)
@@ -247,6 +250,8 @@
 			
 			data_out_sreg <= (others=>'0');
 			reply_sreg <= '0';
+			
+			sdram_request_reg <= '0';
 		elsif (CLK_SYSTEM'event and CLK_SYSTEM='1') then
 			data_in_sreg <= data_in_snext;
 			address_in_sreg <= address_in_snext;
@@ -258,11 +263,13 @@
 			
 			data_out_sreg <= data_out_snext;
 			reply_sreg <= reply_snext;
+			
+			sdram_request_reg <= sdram_request_next;
 		end if;
 	end process;
 
 	-- Inputs - NB, clocked at a smaller multiple
-	process(data_in_sreg, address_in_sreg, read_en_sreg, write_en_sreg, request_sreg, dqm_mask_sreg, refresh_sreg, data_in, address_in, read_en, write_en, request, byte_access, word_access, longword_access, refresh)
+	process(data_in_sreg, address_in_sreg, read_en_sreg, write_en_sreg, request_sreg, dqm_mask_sreg, refresh_sreg, data_in, address_in, read_en, write_en, sdram_request_next, byte_access, word_access, longword_access, refresh)
 	begin
 		data_in_snext <= data_in_sreg;
 		address_in_snext <= address_in_sreg;
@@ -275,12 +282,12 @@
 	
 		-- only snap inputs on new request
 		-- in theory I could keep the requests in a fifo so I can handle several without waiting - processed in order
-		if ((request xor request_sreg) = '1') then
+		if ((sdram_request_next xor request_sreg) = '1') then
 			data_in_snext <= data_in;
 			address_in_snext <= address_in(ADDRESS_WIDTH downto 1);
 			read_en_snext <= read_en;
 			write_en_snext <= write_en;
-			request_snext <= request;
+			request_snext <= sdram_request_next;
 			
 			dqm_mask_snext(0) <= (byte_access or word_access) and address_in(0); -- masked on misaligned byte or word
 			dqm_mask_snext(1) <= (byte_access) and not(address_in(0)); -- masked on aligned byte only
@@ -509,7 +516,11 @@
 	data_out_snext <= data_out_reg;
 	
 	-- outputs to rest of system
-	REPLY <= reply_sreg;
+	--REPLY <= reply_sreg;
 	DATA_OUT <= DATA_OUT_sreg;
-		
+
+	-- a little sdram glue - move to sdram wrapper?
+	COMPLETE <= (reply_sreg xnor sdram_request_reg) and not(request);
+	sdram_request_next <= sdram_request_reg xor request;
+	
 END vhdl;
Only in atari800core_v1_20140312_mist/: stp1.stp
Only in atari800core_v1_20140312_mist/: user_io.v
Only in atari800core_v1_20140312_mist/: user_io.v.bak
diff -ur atari800core_v1_20140121_mcc216/zpu/HelloTinyROM_ROM.mif atari800core_v1_20140312_mist/zpu/HelloTinyROM_ROM.mif
--- atari800core_v1_20140121_mcc216/zpu/HelloTinyROM_ROM.mif	2014-01-31 21:09:40.000000000 +0000
+++ atari800core_v1_20140312_mist/zpu/HelloTinyROM_ROM.mif	2014-03-09 18:12:34.000000000 +0000
@@ -169,8 +169,8 @@
 009e : 00000000;
 009f : 00000000;
 00a0 : 71fc0608;
-00a1 : 0b0b80f5;
-00a2 : d0738306;
+00a1 : 0b0b80ef;
+00a2 : 98738306;
 00a3 : 10100508;
 00a4 : 060b0b0b;
 00a5 : 88a20400;
@@ -216,7 +216,7 @@
 00cd : 00000000;
 00ce : 00000000;
 00cf : 00000000;
-00d0 : 810b80fb;
+00d0 : 810b80f5;
 00d1 : ac0c5104;
 00d2 : 00000000;
 00d3 : 00000000;
@@ -289,8 +289,8 @@
 0116 : 83e08008;
 0117 : 83e08408;
 0118 : 83e08808;
-0119 : 757580ef;
-011a : fe2d5050;
+0119 : 757580e9;
+011a : c62d5050;
 011b : 83e08008;
 011c : 5683e088;
 011d : 0c83e084;
@@ -299,7 +299,7 @@
 0120 : e0800883;
 0121 : e0840883;
 0122 : e0880875;
-0123 : 7580ee92;
+0123 : 7580e7da;
 0124 : 2d505083;
 0125 : e0800856;
 0126 : 83e0880c;
@@ -308,31 +308,31 @@
 0129 : 51040000;
 012a : 800489aa;
 012b : 0489aa0b;
-012c : 80c1a404;
+012c : 80c1eb04;
 012d : fd3d0d75;
 012e : b9297681;
-012f : 2a0580fd;
-0130 : fc085473;
+012f : 2a0580f8;
+0130 : 80085473;
 0131 : 0c853d0d;
 0132 : 04803d0d;
 0133 : 81ff5180;
-0134 : 0b83e0c8;
+0134 : 0b83e0cc;
 0135 : 1234ff11;
 0136 : 5170f438;
 0137 : 823d0d04;
 0138 : fa3d0d78;
-0139 : 0b0b80f6;
-013a : a85383e2;
-013b : f4525680;
-013c : cdd13f80;
+0139 : 0b0b80ef;
+013a : ec5383e2;
+013b : f8525680;
+013c : ce9b3f80;
 013d : 5383e080;
 013e : 08732e8a;
 013f : 387283e0;
 0140 : 800c883d;
 0141 : 0d0483e0;
 0142 : 945283e2;
-0143 : f45180ce;
-0144 : c53f83e0;
+0143 : f85180cf;
+0144 : 8f3f83e0;
 0145 : 800880d5;
 0146 : 3883e09d;
 0147 : 33537280;
@@ -360,3685 +360,3494 @@
 015d : 3d0d0483;
 015e : e0940883;
 015f : e0800c88;
-0160 : 3d0d04fd;
-0161 : 3d0d800b;
-0162 : 80fdec08;
-0163 : 5353ff72;
-0164 : 0c80fdf0;
-0165 : 0873710c;
-0166 : 5284d851;
-0167 : fe963f88;
-0168 : 800a5380;
-0169 : 73708105;
-016a : 553472a8;
-016b : 800a2e09;
-016c : 8106f038;
-016d : 80fdec08;
-016e : 5485aad5;
-016f : aad5740c;
-0170 : 80fdf008;
-0171 : 5285aad5;
-0172 : aad5720c;
-0173 : 82800a53;
-0174 : 80737084;
-0175 : 05550c72;
-0176 : 81800a2e;
-0177 : 098106f0;
-0178 : 3880740c;
-0179 : ff720c84;
-017a : d851fdc8;
-017b : 3f853d0d;
-017c : 04fd3d0d;
-017d : 800b80fd;
-017e : ec085353;
-017f : ff87c3e1;
-0180 : f0720c80;
-0181 : fdf00873;
-0182 : 710c528c;
-0183 : 9ac051fd;
-0184 : a33f8880;
-0185 : 0a538073;
-0186 : 70810555;
-0187 : 34728184;
-0188 : 80802e09;
-0189 : 8106ef38;
-018a : 80fdec08;
-018b : 5485aad5;
-018c : aad5740c;
-018d : 80fdf008;
-018e : 5285aad5;
-018f : aad5720c;
-0190 : 82800a53;
-0191 : 80737084;
-0192 : 05550c72;
-0193 : 84848080;
-0194 : 2e098106;
-0195 : ef388074;
-0196 : 0cff87c3;
-0197 : e1f0720c;
-0198 : 8c9ac051;
-0199 : fcce3f85;
-019a : 3d0d04ff;
-019b : 3d0d80fe;
-019c : 80087008;
-019d : 52527381;
-019e : 2e8b3870;
-019f : 81800772;
-01a0 : 0c833d0d;
-01a1 : 0470feff;
-01a2 : 06720c83;
-01a3 : 3d0d04ff;
-01a4 : 3d0d80fe;
-01a5 : 80087008;
-01a6 : 5252738b;
-01a7 : 3870ffbf;
-01a8 : 06720c83;
-01a9 : 3d0d0470;
-01aa : 80c00772;
-01ab : 0c833d0d;
-01ac : 04ff0b83;
-01ad : e0b00c80;
-01ae : cee33f80;
-01af : d1e73f83;
-01b0 : e08008f3;
-01b1 : 3880d4ac;
-01b2 : 3f800b83;
-01b3 : e0800c04;
-01b4 : 803d0d70;
-01b5 : 83e0800c;
-01b6 : 823d0d04;
-01b7 : ff3d0d73;
-01b8 : 70335351;
-01b9 : 81113371;
-01ba : 34718112;
-01bb : 34833d0d;
-01bc : 04fb3d0d;
-01bd : 77028405;
-01be : a2052256;
-01bf : 56807071;
-01c0 : 55555271;
-01c1 : 7527ac38;
-01c2 : 75137033;
-01c3 : 70147081;
-01c4 : ff065551;
-01c5 : 51517174;
-01c6 : 27893881;
-01c7 : 127081ff;
-01c8 : 06535171;
-01c9 : 81147083;
-01ca : ffff0655;
-01cb : 52547473;
-01cc : 26d63871;
-01cd : 83e0800c;
-01ce : 873d0d04;
-01cf : f83d0d7a;
-01d0 : 57800b8a;
-01d1 : 3d238070;
-01d2 : 7183e2e4;
-01d3 : 0c0b0b80;
-01d4 : f6ac5357;
-01d5 : 5880dabf;
-01d6 : 3f765180;
-01d7 : dab93f0b;
-01d8 : 0b80faf4;
-01d9 : 5180daaf;
-01da : 3f765180;
-01db : c2f13f83;
-01dc : e0800878;
-01dd : 2e8f380b;
-01de : 0b80f6b8;
-01df : 5180da97;
-01e0 : 3f8a3d0d;
-01e1 : 040b0b80;
-01e2 : f6c05180;
-01e3 : da893f75;
-01e4 : 17703355;
-01e5 : 5573802e;
-01e6 : 80fd3873;
-01e7 : ae2e8638;
-01e8 : 811656eb;
-01e9 : 39800b81;
-01ea : 16335556;
-01eb : 7380d82e;
-01ec : 09810683;
-01ed : 38815673;
-01ee : 80f83270;
-01ef : 30708025;
-01f0 : 78075151;
-01f1 : 5473802e;
-01f2 : 80cd3880;
-01f3 : 0b821633;
-01f4 : 55567380;
-01f5 : c62e0981;
-01f6 : 06833881;
-01f7 : 567380e6;
-01f8 : 32703070;
-01f9 : 80257807;
-01fa : 51515473;
-01fb : 802ea838;
-01fc : 800b8316;
-01fd : 33555673;
-01fe : 80c42e09;
-01ff : 81068338;
-0200 : 81567380;
-0201 : e4327030;
-0202 : 70802578;
-0203 : 07515154;
-0204 : 73802e83;
-0205 : 38815880;
-0206 : 0b8a3d23;
-0207 : 8a3dfc05;
-0208 : 53905283;
-0209 : e2e85180;
-020a : c2f53f89;
-020b : 3d225574;
-020c : 902e8e38;
-020d : 0b0b80f6;
-020e : c45180d8;
-020f : da3ffec1;
-0210 : 3983e2e8;
-0211 : 51fd953f;
-0212 : 83e2ea51;
-0213 : fd8e3f83;
-0214 : e2ec51fd;
-0215 : 873f800b;
-0216 : 83e3880c;
-0217 : 77812e81;
-0218 : 8c3883e2;
-0219 : e83383e2;
-021a : e9337188;
-021b : 2b075556;
-021c : 7383ffff;
-021d : 2e82ce38;
-021e : 7385962e;
-021f : 8e380b0b;
-0220 : 80f6dc51;
-0221 : 80d8903f;
-0222 : fdf7390b;
-0223 : 0b80f6f0;
-0224 : 5180d883;
-0225 : 3f7483e3;
-0226 : 900c83e2;
-0227 : ec3383e2;
-0228 : ed337188;
-0229 : 2b075555;
-022a : 7381802e;
-022b : 81d33873;
-022c : 82802e84;
-022d : 81387381;
-022e : ff2681b8;
-022f : 380b0b80;
-0230 : f6f85180;
-0231 : d7d13f83;
-0232 : e2ea3383;
-0233 : e2eb3371;
-0234 : 882b0752;
-0235 : 5680d8ce;
-0236 : 3f0b0b80;
-0237 : f6fc5180;
-0238 : d7b53f81;
-0239 : 0b83e2e4;
-023a : 0c8a3d0d;
-023b : 040b0b80;
-023c : f7805180;
-023d : d7a13f80;
-023e : 0b83e390;
-023f : 0c820b83;
-0240 : e2e834ff;
-0241 : 960b83e2;
-0242 : e9347651;
-0243 : f7d23f83;
-0244 : e0800854;
-0245 : 800b83e0;
-0246 : 800824a9;
-0247 : 3873842c;
-0248 : 7083ffff;
-0249 : 0670882a;
-024a : 57515474;
-024b : 83e2ea34;
-024c : 7383e2eb;
-024d : 34800b83;
-024e : e2ec34ff;
-024f : 800b83e2;
-0250 : ed34fed6;
-0251 : 3983e080;
-0252 : 088f0570;
-0253 : 842c7083;
-0254 : ffff0670;
-0255 : 882a5851;
-0256 : 51547483;
-0257 : e2ea3473;
-0258 : 83e2eb34;
-0259 : 800b83e2;
-025a : ec34ff80;
-025b : 0b83e2ed;
-025c : 34fea739;
-025d : 0b0b80f7;
-025e : 885180d6;
-025f : 9a3ffc81;
-0260 : 3983e2ea;
-0261 : 3383e2eb;
-0262 : 3371882b;
-0263 : 075558ad;
-0264 : 80742781;
-0265 : f2380b0b;
-0266 : 80f79851;
-0267 : 80d5f83f;
-0268 : 83e2ea33;
-0269 : 83e2eb33;
-026a : 71882b07;
-026b : 525680d6;
-026c : f53f0b0b;
-026d : 80f6fc51;
-026e : 80d5dc3f;
-026f : 810b83e2;
-0270 : e40cfea5;
-0271 : 390b0b80;
-0272 : f79c5180;
-0273 : d5c93ffe;
-0274 : 800b83e3;
-0275 : 900c810b;
-0276 : 83e3880c;
-0277 : ff0b83e2;
-0278 : e834ff0b;
-0279 : 83e2e934;
-027a : 7651f5f4;
-027b : 3f83e080;
-027c : 0883e394;
-027d : 0c83e080;
-027e : 0854800b;
-027f : 83e08008;
-0280 : 2480d338;
-0281 : 73842c70;
-0282 : 83ffff06;
-0283 : 70882a57;
-0284 : 51547483;
-0285 : e2ea3473;
-0286 : 83e2eb34;
-0287 : 800b83e2;
-0288 : ec34ff80;
-0289 : 0b83e2ed;
-028a : 34805574;
-028b : 17547333;
-028c : 83e2d816;
-028d : 34811555;
-028e : 748c2efc;
-028f : dd387417;
-0290 : 54733383;
-0291 : e2d81634;
-0292 : 81155574;
-0293 : 8c2e0981;
-0294 : 06d938fc;
-0295 : c53983e0;
-0296 : 80088f05;
-0297 : 70842c70;
-0298 : 83ffff06;
-0299 : 70882a58;
-029a : 51515474;
-029b : 83e2ea34;
-029c : 7383e2eb;
-029d : 34800b83;
-029e : e2ec34ff;
-029f : 800b83e2;
-02a0 : ed348055;
-02a1 : ffa5390b;
-02a2 : 0b80f7a4;
-02a3 : 5180d487;
-02a4 : 3f83e2ea;
-02a5 : 3383e2eb;
-02a6 : 3371882b;
-02a7 : 07525680;
-02a8 : d5843f0b;
-02a9 : 0b80f6fc;
-02aa : 5180d3eb;
-02ab : 3f810b83;
-02ac : e2e40cfc;
-02ad : b4390b0b;
-02ae : 80f7a851;
-02af : 80d3d83f;
-02b0 : 83e2ea33;
-02b1 : 83e2eb33;
-02b2 : 71882b07;
-02b3 : 525680d4;
-02b4 : d53f0b0b;
-02b5 : 80f6fc51;
-02b6 : 80d3bc3f;
-02b7 : 810b83e2;
-02b8 : e40cfc85;
-02b9 : 39f73d0d;
-02ba : 7b5a8c9a;
-02bb : c051f3c4;
-02bc : 3f805780;
-02bd : d0f83f76;
-02be : 54800b86;
-02bf : b8c01534;
-02c0 : 81145473;
-02c1 : 87c02e09;
-02c2 : 8106ee38;
-02c3 : 0b0b80f6;
-02c4 : a85283e2;
-02c5 : f45180c1;
-02c6 : aa3f83e0;
-02c7 : 800883db;
-02c8 : 38807083;
-02c9 : e3a80855;
-02ca : 59599473;
-02cb : 258638ec;
-02cc : 13fe0658;
-02cd : 80732482;
-02ce : ff3883e0;
-02cf : 945283e2;
-02d0 : f45180c2;
-02d1 : 913f83e0;
-02d2 : 800880db;
-02d3 : 3883e09d;
-02d4 : 33537280;
-02d5 : 2e80d038;
-02d6 : 83e09c33;
-02d7 : 70822a70;
-02d8 : 81065154;
-02d9 : 5472d338;
-02da : 73812a81;
-02db : 065574ca;
-02dc : 3873842a;
-02dd : 70810651;
-02de : 537282a3;
-02df : 3883e3a8;
-02e0 : 08772e81;
-02e1 : de38ff18;
-02e2 : 58807824;
-02e3 : 82b23881;
-02e4 : 175783e0;
-02e5 : 945283e2;
-02e6 : f45180c1;
-02e7 : b93f83e0;
-02e8 : 8008802e;
-02e9 : ffa7380b;
-02ea : 0b80fb80;
-02eb : 5180d1e7;
-02ec : 3f955180;
-02ed : cfcb3f80;
-02ee : 0b83e0b4;
-02ef : 0c7951f6;
-02f0 : fb3f80fd;
-02f1 : 80087033;
-02f2 : 7081ff06;
-02f3 : 70812a81;
-02f4 : 32708106;
-02f5 : 51525651;
-02f6 : 537280eb;
-02f7 : 38738132;
-02f8 : 70810651;
-02f9 : 537282e1;
-02fa : 3873832a;
-02fb : 81327081;
-02fc : 06515372;
-02fd : 82c23873;
-02fe : 822a8132;
-02ff : 70810651;
-0300 : 537282a3;
-0301 : 3880fcf8;
-0302 : 08703370;
-0303 : 81ff0651;
-0304 : 54547280;
-0305 : 2e81f038;
-0306 : 80ced33f;
-0307 : 80fd8408;
-0308 : 80fd9408;
-0309 : 54547333;
-030a : 733480fd;
+0160 : 3d0d04fe;
+0161 : 3d0d7453;
+0162 : 7283e0b4;
+0163 : 082e9838;
+0164 : 80f7d808;
+0165 : 73710c52;
+0166 : 71087081;
+0167 : 06515170;
+0168 : f7387283;
+0169 : e0b40c84;
+016a : 3d0d04fd;
+016b : 3d0d800b;
+016c : 80f7f008;
+016d : 5353ff72;
+016e : 0c80f7f4;
+016f : 0873710c;
+0170 : 5284d851;
+0171 : fdee3f88;
+0172 : 800a5380;
+0173 : 73708105;
+0174 : 553472a8;
+0175 : 800a2e09;
+0176 : 8106f038;
+0177 : 80f7f008;
+0178 : 5485aad5;
+0179 : aad5740c;
+017a : 80f7f408;
+017b : 5285aad5;
+017c : aad5720c;
+017d : 82800a53;
+017e : 80737084;
+017f : 05550c72;
+0180 : 81800a2e;
+0181 : 098106f0;
+0182 : 3880740c;
+0183 : ff720c84;
+0184 : d851fda0;
+0185 : 3f853d0d;
+0186 : 04fd3d0d;
+0187 : 800b80f7;
+0188 : f0085353;
+0189 : ff87c3e1;
+018a : f0720c80;
+018b : f7f40873;
+018c : 710c528c;
+018d : 9ac051fc;
+018e : fb3f8880;
+018f : 0a538073;
+0190 : 70810555;
+0191 : 34728184;
+0192 : 80802e09;
+0193 : 8106ef38;
+0194 : 80f7f008;
+0195 : 5485aad5;
+0196 : aad5740c;
+0197 : 80f7f408;
+0198 : 5285aad5;
+0199 : aad5720c;
+019a : 82800a53;
+019b : 80737084;
+019c : 05550c72;
+019d : 84848080;
+019e : 2e098106;
+019f : ef388074;
+01a0 : 0cff87c3;
+01a1 : e1f0720c;
+01a2 : 8c9ac051;
+01a3 : fca63f85;
+01a4 : 3d0d04ff;
+01a5 : 3d0d80f8;
+01a6 : 84087008;
+01a7 : 52527381;
+01a8 : 2e8b3870;
+01a9 : 81800772;
+01aa : 0c833d0d;
+01ab : 0470feff;
+01ac : 06720c83;
+01ad : 3d0d04ff;
+01ae : 3d0d80f8;
+01af : 84087008;
+01b0 : 5252738b;
+01b1 : 3870ffbf;
+01b2 : 06720c83;
+01b3 : 3d0d0470;
+01b4 : 80c00772;
+01b5 : 0c833d0d;
+01b6 : 04ff0b83;
+01b7 : e0b40c81;
+01b8 : 80800b83;
+01b9 : e0ac0c80;
+01ba : 0b83e080;
+01bb : 0c04fc3d;
+01bc : 0d760284;
+01bd : 05a20522;
+01be : 028805a6;
+01bf : 05227a54;
+01c0 : 555555fc;
+01c1 : fe3f7280;
+01c2 : 2ea43883;
+01c3 : e0ac0814;
+01c4 : 52713375;
+01c5 : 70810557;
+01c6 : 34811470;
+01c7 : 83ffff06;
+01c8 : ff157083;
+01c9 : ffff0656;
+01ca : 52555272;
+01cb : de38800b;
+01cc : 83e0800c;
+01cd : 863d0d04;
+01ce : 803d0d70;
+01cf : 83e0800c;
+01d0 : 823d0d04;
+01d1 : ff3d0d73;
+01d2 : 70335351;
+01d3 : 81113371;
+01d4 : 34718112;
+01d5 : 34833d0d;
+01d6 : 04fb3d0d;
+01d7 : 77028405;
+01d8 : a2052256;
+01d9 : 56807071;
+01da : 55555271;
+01db : 7527ac38;
+01dc : 75137033;
+01dd : 70147081;
+01de : ff065551;
+01df : 51517174;
+01e0 : 27893881;
+01e1 : 127081ff;
+01e2 : 06535171;
+01e3 : 81147083;
+01e4 : ffff0655;
+01e5 : 52547473;
+01e6 : 26d63871;
+01e7 : 83e0800c;
+01e8 : 873d0d04;
+01e9 : f83d0d7a;
+01ea : 57800b8a;
+01eb : 3d238070;
+01ec : 7183e2e8;
+01ed : 0c0b0b80;
+01ee : eff05357;
+01ef : 5880d39f;
+01f0 : 3f765180;
+01f1 : d3993f0b;
+01f2 : 0b80f4f4;
+01f3 : 5180d38f;
+01f4 : 3f765180;
+01f5 : c2d23f83;
+01f6 : e0800878;
+01f7 : 2e8f380b;
+01f8 : 0b80effc;
+01f9 : 5180d2f7;
+01fa : 3f8a3d0d;
+01fb : 040b0b80;
+01fc : f0845180;
+01fd : d2e93f75;
+01fe : 17703355;
+01ff : 5573802e;
+0200 : 80fd3873;
+0201 : ae2e8638;
+0202 : 811656eb;
+0203 : 39800b81;
+0204 : 16335556;
+0205 : 7380d82e;
+0206 : 09810683;
+0207 : 38815673;
+0208 : 80f83270;
+0209 : 30708025;
+020a : 78075151;
+020b : 5473802e;
+020c : 80cd3880;
+020d : 0b821633;
+020e : 55567380;
+020f : c62e0981;
+0210 : 06833881;
+0211 : 567380e6;
+0212 : 32703070;
+0213 : 80257807;
+0214 : 51515473;
+0215 : 802ea838;
+0216 : 800b8316;
+0217 : 33555673;
+0218 : 80c42e09;
+0219 : 81068338;
+021a : 81567380;
+021b : e4327030;
+021c : 70802578;
+021d : 07515154;
+021e : 73802e83;
+021f : 38815880;
+0220 : 0b8a3d23;
+0221 : 8a3dfc05;
+0222 : 53905283;
+0223 : e2ec5180;
+0224 : c2d63f89;
+0225 : 3d225574;
+0226 : 902e8e38;
+0227 : 0b0b80f0;
+0228 : 885180d1;
+0229 : ba3ffec1;
+022a : 3983e2ec;
+022b : 51fd953f;
+022c : 83e2ee51;
+022d : fd8e3f83;
+022e : e2f051fd;
+022f : 873f800b;
+0230 : 83e38c0c;
+0231 : 77812e81;
+0232 : 8c3883e2;
+0233 : ec3383e2;
+0234 : ed337188;
+0235 : 2b075556;
+0236 : 7383ffff;
+0237 : 2e82ce38;
+0238 : 7385962e;
+0239 : 8e380b0b;
+023a : 80f0a051;
+023b : 80d0f03f;
+023c : fdf7390b;
+023d : 0b80f0b4;
+023e : 5180d0e3;
+023f : 3f7483e3;
+0240 : 940c83e2;
+0241 : f03383e2;
+0242 : f1337188;
+0243 : 2b075555;
+0244 : 7381802e;
+0245 : 81d33873;
+0246 : 82802e84;
+0247 : 81387381;
+0248 : ff2681b8;
+0249 : 380b0b80;
+024a : f0bc5180;
+024b : d0b13f83;
+024c : e2ee3383;
+024d : e2ef3371;
+024e : 882b0752;
+024f : 5680d1ae;
+0250 : 3f0b0b80;
+0251 : f0c05180;
+0252 : d0953f81;
+0253 : 0b83e2e8;
+0254 : 0c8a3d0d;
+0255 : 040b0b80;
+0256 : f0c45180;
+0257 : d0813f80;
+0258 : 0b83e394;
+0259 : 0c820b83;
+025a : e2ec34ff;
+025b : 960b83e2;
+025c : ed347651;
+025d : f6ea3f83;
+025e : e0800854;
+025f : 800b83e0;
+0260 : 800824a9;
+0261 : 3873842c;
+0262 : 7083ffff;
+0263 : 0670882a;
+0264 : 57515474;
+0265 : 83e2ee34;
+0266 : 7383e2ef;
+0267 : 34800b83;
+0268 : e2f034ff;
+0269 : 800b83e2;
+026a : f134fed6;
+026b : 3983e080;
+026c : 088f0570;
+026d : 842c7083;
+026e : ffff0670;
+026f : 882a5851;
+0270 : 51547483;
+0271 : e2ee3473;
+0272 : 83e2ef34;
+0273 : 800b83e2;
+0274 : f034ff80;
+0275 : 0b83e2f1;
+0276 : 34fea739;
+0277 : 0b0b80f0;
+0278 : cc5180ce;
+0279 : fa3ffc81;
+027a : 3983e2ee;
+027b : 3383e2ef;
+027c : 3371882b;
+027d : 075558ad;
+027e : 80742781;
+027f : f2380b0b;
+0280 : 80f0dc51;
+0281 : 80ced83f;
+0282 : 83e2ee33;
+0283 : 83e2ef33;
+0284 : 71882b07;
+0285 : 525680cf;
+0286 : d53f0b0b;
+0287 : 80f0c051;
+0288 : 80cebc3f;
+0289 : 810b83e2;
+028a : e80cfea5;
+028b : 390b0b80;
+028c : f0e05180;
+028d : cea93ffe;
+028e : 800b83e3;
+028f : 940c810b;
+0290 : 83e38c0c;
+0291 : ff0b83e2;
+0292 : ec34ff0b;
+0293 : 83e2ed34;
+0294 : 7651f58c;
+0295 : 3f83e080;
+0296 : 0883e398;
+0297 : 0c83e080;
+0298 : 0854800b;
+0299 : 83e08008;
+029a : 2480d338;
+029b : 73842c70;
+029c : 83ffff06;
+029d : 70882a57;
+029e : 51547483;
+029f : e2ee3473;
+02a0 : 83e2ef34;
+02a1 : 800b83e2;
+02a2 : f034ff80;
+02a3 : 0b83e2f1;
+02a4 : 34805574;
+02a5 : 17547333;
+02a6 : 83e2dc16;
+02a7 : 34811555;
+02a8 : 748c2efc;
+02a9 : dd387417;
+02aa : 54733383;
+02ab : e2dc1634;
+02ac : 81155574;
+02ad : 8c2e0981;
+02ae : 06d938fc;
+02af : c53983e0;
+02b0 : 80088f05;
+02b1 : 70842c70;
+02b2 : 83ffff06;
+02b3 : 70882a58;
+02b4 : 51515474;
+02b5 : 83e2ee34;
+02b6 : 7383e2ef;
+02b7 : 34800b83;
+02b8 : e2f034ff;
+02b9 : 800b83e2;
+02ba : f1348055;
+02bb : ffa5390b;
+02bc : 0b80f0e8;
+02bd : 5180cce7;
+02be : 3f83e2ee;
+02bf : 3383e2ef;
+02c0 : 3371882b;
+02c1 : 07525680;
+02c2 : cde43f0b;
+02c3 : 0b80f0c0;
+02c4 : 5180cccb;
+02c5 : 3f810b83;
+02c6 : e2e80cfc;
+02c7 : b4390b0b;
+02c8 : 80f0ec51;
+02c9 : 80ccb83f;
+02ca : 83e2ee33;
+02cb : 83e2ef33;
+02cc : 71882b07;
+02cd : 525680cd;
+02ce : b53f0b0b;
+02cf : 80f0c051;
+02d0 : 80cc9c3f;
+02d1 : 810b83e2;
+02d2 : e80cfc85;
+02d3 : 39f73d0d;
+02d4 : 7b5a8c9a;
+02d5 : c051f2dc;
+02d6 : 3f805780;
+02d7 : c9d83f76;
+02d8 : 54800b86;
+02d9 : b8c01534;
+02da : 81145473;
+02db : 87c02e09;
+02dc : 8106ee38;
+02dd : 0b0b80ef;
+02de : ec5283e2;
+02df : f85180c1;
+02e0 : 8c3f83e0;
+02e1 : 800883db;
+02e2 : 38807083;
+02e3 : e3ac0855;
+02e4 : 59599473;
+02e5 : 258638ec;
+02e6 : 13fe0658;
+02e7 : 80732482;
+02e8 : ff3883e0;
+02e9 : 945283e2;
+02ea : f85180c1;
+02eb : f33f83e0;
+02ec : 800880db;
+02ed : 3883e09d;
+02ee : 33537280;
+02ef : 2e80d038;
+02f0 : 83e09c33;
+02f1 : 70822a70;
+02f2 : 81065154;
+02f3 : 5472d338;
+02f4 : 73812a81;
+02f5 : 065574ca;
+02f6 : 3873842a;
+02f7 : 70810651;
+02f8 : 537282a3;
+02f9 : 3883e3ac;
+02fa : 08772e81;
+02fb : de38ff18;
+02fc : 58807824;
+02fd : 82b23881;
+02fe : 175783e0;
+02ff : 945283e2;
+0300 : f85180c1;
+0301 : 9b3f83e0;
+0302 : 8008802e;
+0303 : ffa7380b;
+0304 : 0b80f580;
+0305 : 5180cac7;
+0306 : 3f955180;
+0307 : c8ab3f80;
+0308 : 0b83e0b8;
+0309 : 0c7951f6;
+030a : fb3f80f7;
 030b : 80087033;
 030c : 7081ff06;
 030d : 70812a81;
 030e : 32708106;
 030f : 51525651;
-0310 : 5372802e;
-0311 : ff973883;
-0312 : e3a80882;
-0313 : 0583e3a8;
-0314 : 0c84f180;
-0315 : 51f0dd3f;
-0316 : 805780ce;
-0317 : 913f7654;
-0318 : fd973974;
-0319 : 83e09d57;
-031a : 54731a53;
-031b : 75337334;
-031c : 75337081;
-031d : ff065455;
-031e : 72802efe;
-031f : 8938ff80;
-0320 : 15537276;
-0321 : 70810558;
-0322 : 34811454;
-0323 : 738f2e09;
-0324 : 8106d638;
-0325 : ff185877;
-0326 : 8025fdf3;
-0327 : 38a2390b;
-0328 : 0b80f7ac;
-0329 : 5180cfef;
-032a : 3f83e3a8;
-032b : 08772e09;
-032c : 8106fdd2;
-032d : 38ffac39;
-032e : 7883e3a8;
-032f : 0cfcfb39;
-0330 : 83e09d51;
-0331 : 80cfd03f;
-0332 : 81197081;
-0333 : 06545972;
-0334 : 802e9338;
-0335 : 945180cd;
-0336 : a23f78a8;
-0337 : 2efdc838;
-0338 : 811757fd;
-0339 : ad390b0b;
-033a : 80fb8051;
-033b : 80cfa83f;
-033c : 78a82e09;
-033d : 8106e938;
-033e : fdad390b;
-033f : 0b80f7b4;
-0340 : 5180cf93;
-0341 : 3fff3973;
-0342 : 337081ff;
-0343 : 06515372;
-0344 : 802ef438;
-0345 : 8c9ac051;
-0346 : ef9a3f83;
-0347 : e2e40883;
-0348 : e0800c8b;
-0349 : 3d0d0483;
-034a : e3a808fe;
-034b : 0683e3a8;
-034c : 0c84f180;
-034d : 51fe9e39;
-034e : 83e3a808;
-034f : 810783e3;
-0350 : a80c84f1;
-0351 : 8051fe8d;
-0352 : 3983e3a8;
-0353 : 08fe0583;
-0354 : e3a80c84;
-0355 : f18051fd;
-0356 : fc39e23d;
-0357 : 0d800b80;
-0358 : fdf40870;
-0359 : 08708106;
-035a : 51565658;
-035b : 73782e09;
-035c : 810682a7;
-035d : 38740870;
-035e : 812a7081;
-035f : 06515154;
-0360 : 7380c938;
-0361 : 74087082;
-0362 : 2a708106;
-0363 : 51515473;
-0364 : 802e9038;
-0365 : 8051f1d3;
-0366 : 3f8151f1;
-0367 : ce3f80fd;
-0368 : f4085574;
-0369 : 0870832a;
-036a : 70810651;
-036b : 51547380;
-036c : 2e963880;
-036d : 51f1b43f;
-036e : 80fda008;
-036f : 54807434;
-0370 : f0af3f81;
-0371 : 51f1a43f;
-0372 : a03d0d04;
-0373 : 8151f1bf;
-0374 : 3ff09e3f;
-0375 : 8e3d57a1;
-0376 : 5380f5e0;
-0377 : 52765180;
-0378 : d8d13f80;
-0379 : 56848c80;
-037a : 16761855;
-037b : 55733375;
-037c : 34811656;
-037d : 75a12e09;
-037e : 8106ea38;
-037f : 80fd9c08;
-0380 : 54807434;
-0381 : 80fd9808;
-0382 : 54867434;
-0383 : 80fd9408;
-0384 : 54807434;
-0385 : 80fd9008;
-0386 : 548f7434;
-0387 : 80fd8c08;
-0388 : 54807434;
-0389 : 80fd8808;
-038a : 54807434;
-038b : 80fcfc08;
-038c : 54ff7434;
-038d : 80fcf408;
-038e : 54e07434;
-038f : 80fcec08;
-0390 : 54a27434;
-0391 : 815180ca;
-0392 : be3f83e3;
-0393 : 9851f995;
-0394 : 3f83e080;
-0395 : 08802ead;
-0396 : 38810b83;
-0397 : e0b40c0b;
-0398 : 0b80f7c4;
-0399 : 5180ccaf;
-039a : 3f9ec2a0;
-039b : 51ecc53f;
-039c : 8051eff7;
-039d : 3f80fda0;
-039e : 08548074;
-039f : 34eef23f;
-03a0 : 8151efe7;
-03a1 : 3f83e0ac;
-03a2 : 085180c9;
-03a3 : fa3f8051;
-03a4 : effd3f80;
-03a5 : fdf40855;
-03a6 : fdea3977;
-03a7 : 78797a5f;
-03a8 : 595a5b81;
-03a9 : 51efe83f;
-03aa : 815180c9;
-03ab : da3f84df;
-03ac : e0801886;
-03ad : b8801955;
-03ae : 55733375;
-03af : 34811858;
-03b0 : 7788802e;
-03b1 : 098106e6;
-03b2 : 3880c058;
-03b3 : 86b88018;
-03b4 : 54807434;
-03b5 : 81185877;
-03b6 : 88802e09;
-03b7 : 8106ed38;
-03b8 : 83a08058;
-03b9 : 84dc8080;
-03ba : 18888080;
-03bb : 19565474;
-03bc : 33743484;
-03bd : 80801854;
-03be : 80743481;
-03bf : 18587783;
-03c0 : a09f2e09;
-03c1 : 8106dd38;
-03c2 : 83a48058;
-03c3 : 84dc8080;
-03c4 : 18888080;
-03c5 : 19565474;
-03c6 : 33743484;
-03c7 : 80801854;
-03c8 : 80743481;
-03c9 : 18587783;
-03ca : a49f2e09;
-03cb : 8106dd38;
-03cc : 83a88058;
-03cd : 84dc8080;
-03ce : 18888080;
-03cf : 19565474;
-03d0 : 33743484;
-03d1 : 80801854;
-03d2 : 80743481;
-03d3 : 18587783;
-03d4 : a88f2e09;
-03d5 : 8106dd38;
-03d6 : 80fcfc08;
-03d7 : 70337081;
-03d8 : ff069a3d;
-03d9 : 595c5154;
-03da : a15380f6;
-03db : 84527551;
-03dc : 80d5c03f;
-03dd : 805886b8;
-03de : 80187817;
-03df : 55557333;
-03e0 : 75348118;
-03e1 : 5877a12e;
-03e2 : 098106ea;
-03e3 : 3880fd9c;
-03e4 : 08548074;
-03e5 : 3480fd98;
-03e6 : 0854ff9c;
-03e7 : 743480fd;
-03e8 : 94085480;
-03e9 : 743480fd;
-03ea : 9008548f;
-03eb : 743480fd;
-03ec : 8c085480;
-03ed : 743480fd;
-03ee : 88085480;
-03ef : 743480fc;
-03f0 : f40854e0;
-03f1 : 743480fc;
-03f2 : ec0854a2;
-03f3 : 743480fc;
-03f4 : fc0854ff;
-03f5 : 743480fc;
-03f6 : e8085483;
-03f7 : 743480fc;
-03f8 : f0085482;
-03f9 : 7434fd5d;
-03fa : 87a9c051;
-03fb : e9c63f80;
-03fc : c6fc3f80;
-03fd : 58800b86;
-03fe : b8c01934;
+0310 : 537280eb;
+0311 : 38738132;
+0312 : 70810651;
+0313 : 537282f2;
+0314 : 3873832a;
+0315 : 81327081;
+0316 : 06515372;
+0317 : 82d33873;
+0318 : 822a8132;
+0319 : 70810651;
+031a : 537282b4;
+031b : 3880f6f8;
+031c : 08703370;
+031d : 81ff0651;
+031e : 54547280;
+031f : 2e828138;
+0320 : 80c7b33f;
+0321 : 80f78408;
+0322 : 80f79408;
+0323 : 54547333;
+0324 : 733480f7;
+0325 : 80087033;
+0326 : 7081ff06;
+0327 : 70812a81;
+0328 : 32708106;
+0329 : 51525651;
+032a : 5372802e;
+032b : ff973883;
+032c : e3ac0882;
+032d : 0583e3ac;
+032e : 0c84f180;
+032f : 51eff53f;
+0330 : 805780c6;
+0331 : f13f7654;
+0332 : fd973974;
+0333 : 83e09d57;
+0334 : 54731a53;
+0335 : 75337334;
+0336 : 75337081;
+0337 : ff065455;
+0338 : 72802efe;
+0339 : 8938ff80;
+033a : 15537276;
+033b : 70810558;
+033c : 34811454;
+033d : 738f2e09;
+033e : 8106d638;
+033f : ff185877;
+0340 : 8025fdf3;
+0341 : 38a2390b;
+0342 : 0b80f0f0;
+0343 : 5180c8cf;
+0344 : 3f83e3ac;
+0345 : 08772e09;
+0346 : 8106fdd2;
+0347 : 38ffac39;
+0348 : 7883e3ac;
+0349 : 0cfcfb39;
+034a : 83e09d51;
+034b : 80c8b03f;
+034c : 81197081;
+034d : 06545972;
+034e : 802e9338;
+034f : 945180c6;
+0350 : 823f78a8;
+0351 : 2efdc838;
+0352 : 811757fd;
+0353 : ad390b0b;
+0354 : 80f58051;
+0355 : 80c8883f;
+0356 : 78a82e09;
+0357 : 8106e938;
+0358 : fdad390b;
+0359 : 0b80f0f8;
+035a : 5180c7f3;
+035b : 3f8051f0;
+035c : 923f8480;
+035d : 5283e0ac;
+035e : 085180ca;
+035f : ee3fff39;
+0360 : 73337081;
+0361 : ff065153;
+0362 : 72802ef4;
+0363 : 388c9ac0;
+0364 : 51eea13f;
+0365 : 83e2e808;
+0366 : 83e0800c;
+0367 : 8b3d0d04;
+0368 : 83e3ac08;
+0369 : fe0683e3;
+036a : ac0c84f1;
+036b : 8051fe8d;
+036c : 3983e3ac;
+036d : 08810783;
+036e : e3ac0c84;
+036f : f18051fd;
+0370 : fc3983e3;
+0371 : ac08fe05;
+0372 : 83e3ac0c;
+0373 : 84f18051;
+0374 : fdeb39e2;
+0375 : 3d0d800b;
+0376 : 80f7f808;
+0377 : 70087081;
+0378 : 06515656;
+0379 : 5873782e;
+037a : 09810683;
+037b : ee387408;
+037c : 70812a70;
+037d : 81065151;
+037e : 547380c9;
+037f : 38740870;
+0380 : 822a7081;
+0381 : 06515154;
+0382 : 73802e90;
+0383 : 388051f1;
+0384 : 823f8151;
+0385 : f0fd3f80;
+0386 : f7f80855;
+0387 : 74087083;
+0388 : 2a708106;
+0389 : 51515473;
+038a : 802e9638;
+038b : 8051f0e3;
+038c : 3f80f7a0;
+038d : 08548074;
+038e : 34efde3f;
+038f : 8151f0d3;
+0390 : 3fa03d0d;
+0391 : 048151f0;
+0392 : ee3f8151;
+0393 : 80c4803f;
+0394 : 8058be80;
+0395 : 0a1886b8;
+0396 : 80195555;
+0397 : 73337534;
+0398 : 81185877;
+0399 : 88802e09;
+039a : 8106e738;
+039b : 80c05886;
+039c : b8801854;
+039d : 80743481;
+039e : 18587788;
+039f : 802e0981;
+03a0 : 06ed3883;
+03a1 : a0805887;
+03a2 : f0808018;
+03a3 : 88808019;
+03a4 : 56547433;
+03a5 : 74348480;
+03a6 : 80185480;
+03a7 : 74348118;
+03a8 : 587783a0;
+03a9 : 9f2e0981;
+03aa : 06dd3883;
+03ab : a4805887;
+03ac : f0808018;
+03ad : 88808019;
+03ae : 56547433;
+03af : 74348480;
+03b0 : 80185480;
+03b1 : 74348118;
+03b2 : 587783a4;
+03b3 : 9f2e0981;
+03b4 : 06dd3883;
+03b5 : a8805887;
+03b6 : f0808018;
+03b7 : 88808019;
+03b8 : 56547433;
+03b9 : 74348480;
+03ba : 80185480;
+03bb : 74348118;
+03bc : 587783a8;
+03bd : 8f2e0981;
+03be : 06dd3880;
+03bf : f6fc0870;
+03c0 : 33903d58;
+03c1 : 5154a153;
+03c2 : 80efa852;
+03c3 : 755180cf;
+03c4 : ea3f8058;
+03c5 : 86b88018;
+03c6 : 78175555;
+03c7 : 73337534;
+03c8 : 81185877;
+03c9 : a12e0981;
+03ca : 06ea3880;
+03cb : f79c0854;
+03cc : 80743480;
+03cd : f7980854;
+03ce : ff9c7434;
+03cf : 80f79408;
+03d0 : 54807434;
+03d1 : 80f79008;
+03d2 : 548f7434;
+03d3 : 80f78c08;
+03d4 : 54807434;
+03d5 : 80f78808;
+03d6 : 54807434;
+03d7 : 80f6f408;
+03d8 : 54e07434;
+03d9 : 80f6ec08;
+03da : 54a27434;
+03db : 80f6fc08;
+03dc : 54ff7434;
+03dd : 80f6e808;
+03de : 54837434;
+03df : 80f6f008;
+03e0 : 54827434;
+03e1 : 815180c1;
+03e2 : c63f83e3;
+03e3 : 9c51f7bd;
+03e4 : 3f83e080;
+03e5 : 08802ead;
+03e6 : 38810b83;
+03e7 : e0b80c0b;
+03e8 : 0b80f188;
+03e9 : 5180c3b7;
+03ea : 3f9ec2a0;
+03eb : 51ea853f;
+03ec : 8051eddf;
+03ed : 3f80f7a0;
+03ee : 08548074;
+03ef : 34ecda3f;
+03f0 : 8151edcf;
+03f1 : 3f83e0b0;
+03f2 : 085180c1;
+03f3 : 823f8051;
+03f4 : ede53f80;
+03f5 : f7f80855;
+03f6 : fca33977;
+03f7 : 78797a5f;
+03f8 : 595a5b81;
+03f9 : 51edd03f;
+03fa : 815180c0;
+03fb : e23fbe80;
+03fc : 0a1886b8;
+03fd : 80195555;
+03fe : 73337534;
 03ff : 81185877;
-0400 : 87c02e09;
-0401 : 8106ee38;
-0402 : 0b0b80f7;
-0403 : d05180c9;
-0404 : 863f0b0b;
-0405 : 80f7e451;
-0406 : 80c8fc3f;
-0407 : 0b0b80f7;
-0408 : f85180c8;
-0409 : f23f80fe;
-040a : 80087008;
-040b : 70882c8f;
-040c : 06575556;
-040d : 78b33876;
-040e : 802ea738;
-040f : 75087716;
-0410 : 830671e1;
-0411 : ff067188;
-0412 : 2b07780c;
-0413 : 7a7b5a5e;
-0414 : 565487a9;
-0415 : c051e8dc;
-0416 : 3f80c692;
-0417 : 3f8058ff;
-0418 : 94398180;
-0419 : 5180c8a9;
-041a : 3f74812e;
-041b : 899c3881;
-041c : 752588dd;
-041d : 3874822e;
-041e : 88933874;
-041f : 832e869b;
-0420 : 380b0b80;
-0421 : f8805180;
-0422 : c88d3f0b;
-0423 : 0b80fb80;
-0424 : 5180c883;
-0425 : 3f0b0b80;
-0426 : f8885180;
-0427 : c7f93f80;
-0428 : fe800870;
-0429 : 08708c2c;
-042a : 8f065755;
-042b : 5678812e;
-042c : 83a23874;
-042d : 812e87a1;
-042e : 38817525;
-042f : 86e33874;
-0430 : 822e8cb2;
-0431 : 3874832e;
-0432 : 8ceb380b;
-0433 : 0b80f880;
-0434 : 5180c7c3;
-0435 : 3f0b0b80;
-0436 : fb805180;
-0437 : c7b93f0b;
-0438 : 0b80f894;
-0439 : 5180c7af;
-043a : 3f80fe80;
-043b : 087008bf;
-043c : 06565678;
-043d : 822e8680;
-043e : 38811570;
-043f : 83c19c35;
-0440 : 7083ffff;
-0441 : 06535154;
-0442 : 80c89b3f;
-0443 : 0b0b80f8;
-0444 : 9c5180c7;
-0445 : 823f7883;
-0446 : 2e85b838;
-0447 : 83e39851;
-0448 : 80c6f43f;
-0449 : 0b0b80f8;
-044a : a85180c6;
-044b : ea3f7884;
-044c : 2e84c338;
-044d : 83e3d851;
-044e : 80c6dc3f;
-044f : 0b0b80f8;
-0450 : b05180c6;
-0451 : d23f7885;
-0452 : 2e848638;
-0453 : 83e2c851;
-0454 : 80c6c43f;
-0455 : 0b0b80f8;
-0456 : b85180c6;
-0457 : ba3f7886;
-0458 : 2e85b438;
-0459 : 83e0b851;
-045a : 80c6ac3f;
-045b : 7c832693;
-045c : 387b812e;
-045d : 87c93876;
-045e : 812e8a94;
-045f : 3876ff2e;
-0460 : 89a83878;
-0461 : 872e88a4;
-0462 : 380b0b80;
-0463 : f8c05180;
-0464 : c6853f78;
-0465 : 872e86ab;
-0466 : 3878882e;
-0467 : 8897380b;
-0468 : 0b80f8c8;
-0469 : 5180c5ef;
-046a : 3f78882e;
-046b : 81d33880;
-046c : 7080fd80;
-046d : 08703370;
-046e : 81ff0670;
-046f : 812a8132;
-0470 : 81065b59;
-0471 : 5156585c;
-0472 : 7580e938;
-0473 : 74813270;
-0474 : 81065154;
-0475 : 7388b938;
-0476 : 74832a81;
-0477 : 32708106;
-0478 : 51547388;
-0479 : 9a387482;
-047a : 2a813270;
-047b : 81065154;
-047c : 7387fb38;
-047d : 80fcf808;
-047e : 70337081;
-047f : ff065155;
-0480 : 5573802e;
-0481 : 87ca3880;
-0482 : c2e43f80;
-0483 : fd840880;
-0484 : fd940855;
-0485 : 55743374;
-0486 : 3480fd80;
-0487 : 08703370;
-0488 : 81ff0670;
-0489 : 812a8132;
-048a : 81065957;
-048b : 51547580;
-048c : 2eff9938;
-048d : 8119fd11;
-048e : 5e598879;
-048f : 25fba938;
-0490 : 8859855d;
-0491 : 87a9c051;
-0492 : e4ea3f80;
-0493 : c2a03f80;
-0494 : 58fba239;
-0495 : 76802e87;
-0496 : c8387508;
-0497 : 77168306;
-0498 : 71fc9fff;
-0499 : 06718c2b;
-049a : 07780c56;
-049b : 54807058;
-049c : 5c87a9c0;
-049d : 51e4bd3f;
-049e : 80c1f33f;
-049f : 8058faf5;
-04a0 : 397b812e;
-04a1 : 098106fe;
-04a2 : a63880c0;
-04a3 : 5886b880;
-04a4 : 1884dfe0;
-04a5 : 80195555;
-04a6 : 73337534;
-04a7 : 81185877;
-04a8 : 88802e09;
-04a9 : 8106e638;
-04aa : 83a08058;
-04ab : 84808018;
-04ac : 84dc8080;
-04ad : 19555573;
-04ae : 33753481;
-04af : 18587783;
-04b0 : a09f2e09;
-04b1 : 8106e538;
-04b2 : 83a48058;
-04b3 : 84808018;
-04b4 : 84dc8080;
-04b5 : 19555573;
-04b6 : 33753481;
-04b7 : 18587783;
-04b8 : a49f2e09;
-04b9 : 8106e538;
-04ba : 83a88058;
-04bb : 84808018;
-04bc : 84dc8080;
-04bd : 19555573;
-04be : 33753481;
-04bf : 18587783;
-04c0 : a88f2e09;
-04c1 : 8106e538;
-04c2 : 80fcfc08;
-04c3 : 54797434;
-04c4 : 83e0ac08;
-04c5 : 5180c0ef;
-04c6 : 3f7a802e;
-04c7 : a7380b0b;
-04c8 : 80f7c451;
-04c9 : 80c2f03f;
-04ca : 9ec2a051;
-04cb : e3863f80;
-04cc : 51e6b83f;
-04cd : 80fda008;
-04ce : 54807434;
-04cf : e5b33f81;
-04d0 : 51e6a83f;
-04d1 : 8051e6c7;
-04d2 : 3f80fdf4;
-04d3 : 0855f4a5;
-04d4 : 39818051;
-04d5 : 80c2ba3f;
-04d6 : 83e2c851;
-04d7 : 80c2b83f;
-04d8 : 0b0b80f8;
-04d9 : b85180c2;
-04da : ae3f7886;
-04db : 2e098106;
-04dc : fbf23881;
-04dd : a2398180;
-04de : 5180c295;
-04df : 3f83e3d8;
-04e0 : 5180c293;
-04e1 : 3f0b0b80;
-04e2 : f8b05180;
-04e3 : c2893f78;
-04e4 : 852e0981;
-04e5 : 06fbb538;
-04e6 : ffb7390b;
-04e7 : 0b80f8d0;
-04e8 : 5180c1f3;
-04e9 : 3f0b0b80;
-04ea : fb805180;
-04eb : c1e93f0b;
-04ec : 0b80f888;
-04ed : 5180c1df;
-04ee : 3f80fe80;
-04ef : 08700870;
-04f0 : 8c2c8f06;
-04f1 : 57555678;
-04f2 : 812e0981;
-04f3 : 06f9e438;
-04f4 : fd823981;
-04f5 : 805180c1;
-04f6 : b83f83e3;
-04f7 : 985180c1;
-04f8 : b63f0b0b;
-04f9 : 80f8a851;
-04fa : 80c1ac3f;
-04fb : 78842e09;
-04fc : 8106fac0;
-04fd : 38feff39;
-04fe : 76802e83;
-04ff : 82387615;
-0500 : 7009709f;
-0501 : 2c720678;
-0502 : 0852bf06;
-0503 : 71c00607;
-0504 : 780c5555;
-0505 : fcd73981;
-0506 : 805180c0;
-0507 : f43ffac4;
-0508 : 3974f9a7;
-0509 : 380b0b80;
-050a : f8e05180;
-050b : c0e93f0b;
-050c : 0b80fb80;
-050d : 5180c0df;
-050e : 3f0b0b80;
-050f : f8945180;
-0510 : c0d53f80;
-0511 : fe800870;
-0512 : 08bf0656;
-0513 : 5678822e;
-0514 : 098106f9;
-0515 : a438ffa0;
-0516 : 390b0b80;
-0517 : f8f05180;
-0518 : c0b53f0b;
-0519 : 0b80fb80;
-051a : 5180c0ab;
-051b : 3f0b0b80;
-051c : f8945180;
-051d : c0a13f80;
-051e : fe800870;
-051f : 08bf0656;
-0520 : 5678822e;
-0521 : 098106f8;
-0522 : f038feec;
-0523 : 390b0b80;
-0524 : f98c5180;
-0525 : c0813f0b;
-0526 : 0b80fb80;
-0527 : 51bff83f;
-0528 : 0b0b80f8;
-0529 : 8851bfef;
-052a : 3f80fe80;
-052b : 08700870;
-052c : 8c2c8f06;
-052d : 57555678;
-052e : 812e0981;
-052f : 06f7f438;
-0530 : fb92397b;
-0531 : 812e0981;
-0532 : 06f9d438;
-0533 : 7b5bfbba;
-0534 : 3974f7ad;
-0535 : 380b0b80;
-0536 : f9a051bf;
-0537 : ba3f0b0b;
-0538 : 80fb8051;
-0539 : bfb13f0b;
-053a : 0b80f888;
-053b : 51bfa83f;
-053c : 80fe8008;
-053d : 7008708c;
-053e : 2c8f0657;
-053f : 55567881;
-0540 : 2e098106;
-0541 : f7ad38fa;
-0542 : cb390b0b;
-0543 : 80f9a851;
-0544 : bf853f0b;
-0545 : 0b80fb80;
-0546 : 51befc3f;
-0547 : 0b0b80f8;
-0548 : 8851bef3;
-0549 : 3f80fe80;
-054a : 08700870;
-054b : 8c2c8f06;
-054c : 57555678;
-054d : 812e0981;
-054e : 06f6f838;
-054f : fa963978;
-0550 : 842eb638;
-0551 : 78842494;
-0552 : 3878832e;
-0553 : 83d938fe;
-0554 : 1983e0b4;
-0555 : 0c807058;
-0556 : 5cfa9639;
-0557 : 78852e83;
-0558 : cd387886;
-0559 : 2e098106;
-055a : e63883e0;
-055b : b851eaf5;
-055c : 3ffe1983;
-055d : e0b40cdd;
-055e : 3983e3d8;
-055f : 51f03981;
-0560 : 8051be8d;
-0561 : 3f811570;
-0562 : 83c19c35;
-0563 : 7083ffff;
-0564 : 06535154;
-0565 : bf903f0b;
-0566 : 0b80f89c;
-0567 : 51bdf83f;
-0568 : 78832e09;
-0569 : 8106f6f4;
-056a : 38fca839;
-056b : 818051bd;
-056c : e03ff7d5;
-056d : 39818051;
-056e : bdd73f0b;
-056f : 0b80f8c8;
-0570 : 51bdd43f;
-0571 : 78882e09;
-0572 : 8106f7e3;
-0573 : 38f9b239;
-0574 : 815c7433;
-0575 : 7081ff06;
-0576 : 515473f4;
-0577 : 8b387433;
-0578 : 7081ff06;
-0579 : 51547380;
-057a : 2ee838f3;
-057b : fb39ff57;
-057c : 87a9c051;
-057d : ddbe3fba;
-057e : f53f8058;
-057f : f3f73981;
-0580 : 5787a9c0;
-0581 : 51ddad3f;
-0582 : bae43f80;
-0583 : 58f3e639;
-0584 : ff19fd11;
-0585 : 5e597880;
-0586 : 25f3cd38;
-0587 : 7559f3c6;
-0588 : 39818051;
-0589 : bceb3ff5;
-058a : 8a398058;
-058b : 83e39818;
-058c : 703383e3;
-058d : d81a5758;
-058e : 54743374;
-058f : 3483e2c8;
-0590 : 18567533;
-0591 : 753483e0;
-0592 : b8185473;
-0593 : 33763476;
-0594 : 74348118;
-0595 : 58778f2e;
-0596 : f8933883;
-0597 : e3981870;
-0598 : 3383e3d8;
-0599 : 1a575854;
-059a : 74337434;
-059b : 83e2c818;
-059c : 56753375;
-059d : 3483e0b8;
-059e : 18547333;
-059f : 76347674;
-05a0 : 34811858;
-05a1 : 778f2e09;
-05a2 : 8106ffa0;
-05a3 : 38f7de39;
-05a4 : 805883e0;
-05a5 : b8187033;
-05a6 : 83e2c81a;
-05a7 : 57585474;
-05a8 : 33743483;
-05a9 : e3d81856;
-05aa : 75337534;
-05ab : 83e39818;
-05ac : 54733376;
-05ad : 34767434;
-05ae : 81185877;
-05af : 8f2ef7ad;
-05b0 : 3883e0b8;
-05b1 : 18703383;
-05b2 : e2c81a57;
-05b3 : 58547433;
-05b4 : 743483e3;
-05b5 : d8185675;
-05b6 : 33753483;
-05b7 : e3981854;
-05b8 : 73337634;
-05b9 : 76743481;
-05ba : 1858778f;
-05bb : 2e098106;
-05bc : ffa038f6;
-05bd : f8390b0b;
-05be : 80f9b051;
-05bf : bb993f0b;
-05c0 : 0b80fb80;
-05c1 : 51bb903f;
-05c2 : 0b0b80f8;
-05c3 : 9451bb87;
-05c4 : 3f80fe80;
-05c5 : 087008bf;
-05c6 : 06565678;
-05c7 : 822e0981;
-05c8 : 06f3d638;
-05c9 : f9d23983;
-05ca : e39851fc;
-05cb : c13983e2;
-05cc : c851fcba;
-05cd : 390b0b80;
-05ce : f9c451ba;
-05cf : da3f0b0b;
-05d0 : 80fb8051;
-05d1 : bad13f0b;
-05d2 : 0b80f894;
-05d3 : 51bac83f;
-05d4 : 80fe8008;
-05d5 : 7008bf06;
-05d6 : 56567882;
-05d7 : 2e098106;
-05d8 : f39738f9;
-05d9 : 9339fc3d;
-05da : 0d7680fd;
-05db : e0085555;
-05dc : 73087081;
-05dd : 32708106;
-05de : 51515372;
-05df : f33883e3;
-05e0 : 8c088605;
-05e1 : 51b5923f;
-05e2 : 80fde008;
-05e3 : 70087081;
-05e4 : 06515153;
-05e5 : 72802e93;
-05e6 : 38ebbf3f;
-05e7 : 80fde008;
-05e8 : 70087081;
-05e9 : 06515153;
-05ea : 72ef38b5;
-05eb : e33f83e0;
-05ec : 80087534;
-05ed : b5da3f83;
-05ee : e0800881;
-05ef : 1634b5d0;
-05f0 : 3f83e080;
-05f1 : 08821634;
-05f2 : b5c63f83;
-05f3 : e0800883;
-05f4 : 1634b5bc;
-05f5 : 3f83e080;
-05f6 : 08841634;
-05f7 : 80fde008;
-05f8 : 54730870;
+0400 : 88802e09;
+0401 : 8106e738;
+0402 : 80c05886;
+0403 : b8801854;
+0404 : 80743481;
+0405 : 18587788;
+0406 : 802e0981;
+0407 : 06ed3883;
+0408 : a0805887;
+0409 : f0808018;
+040a : 88808019;
+040b : 56547433;
+040c : 74348480;
+040d : 80185480;
+040e : 74348118;
+040f : 587783a0;
+0410 : 9f2e0981;
+0411 : 06dd3883;
+0412 : a4805887;
+0413 : f0808018;
+0414 : 88808019;
+0415 : 56547433;
+0416 : 74348480;
+0417 : 80185480;
+0418 : 74348118;
+0419 : 587783a4;
+041a : 9f2e0981;
+041b : 06dd3883;
+041c : a8805887;
+041d : f0808018;
+041e : 88808019;
+041f : 56547433;
+0420 : 74348480;
+0421 : 80185480;
+0422 : 74348118;
+0423 : 587783a8;
+0424 : 8f2e0981;
+0425 : 06dd3880;
+0426 : f6fc0870;
+0427 : 337081ff;
+0428 : 069a3d59;
+0429 : 5c5154a1;
+042a : 5380efa8;
+042b : 52755180;
+042c : ccc93f80;
+042d : 5886b880;
+042e : 18781755;
+042f : 55733375;
+0430 : 34811858;
+0431 : 77a12e09;
+0432 : 8106ea38;
+0433 : 80f79c08;
+0434 : 54807434;
+0435 : 80f79808;
+0436 : 54ff9c74;
+0437 : 3480f794;
+0438 : 08548074;
+0439 : 3480f790;
+043a : 08548f74;
+043b : 3480f78c;
+043c : 08548074;
+043d : 3480f788;
+043e : 08548074;
+043f : 3480f6f4;
+0440 : 0854e074;
+0441 : 3480f6ec;
+0442 : 0854a274;
+0443 : 3480f6fc;
+0444 : 0854ff74;
+0445 : 3480f6e8;
+0446 : 08548374;
+0447 : 3480f6f0;
+0448 : 08548274;
+0449 : 34fd5d87;
+044a : a9c051e7;
+044b : 873fbe86;
+044c : 3f805880;
+044d : 0b86b8c0;
+044e : 19348118;
+044f : 587787c0;
+0450 : 2e098106;
+0451 : ee380b0b;
+0452 : 80f19451;
+0453 : 80c0903f;
+0454 : 0b0b80f1;
+0455 : a85180c0;
+0456 : 863f0b0b;
+0457 : 80f1bc51;
+0458 : bffd3f80;
+0459 : f8840870;
+045a : 0870882c;
+045b : 8f065755;
+045c : 5678ad38;
+045d : 76802ea2;
+045e : 38750877;
+045f : 16882b71;
+0460 : e1ff0607;
+0461 : 770c5478;
+0462 : 79585c87;
+0463 : a9c051e6;
+0464 : a33fbda2;
+0465 : 3f8058ff;
+0466 : 9a398180;
+0467 : 51bfba3f;
+0468 : 74872695;
+0469 : 38741010;
+046a : 80efcc05;
+046b : 54730804;
+046c : 0b0b80f1;
+046d : c451bfa7;
+046e : 3f0b0b80;
+046f : f58051bf;
+0470 : 9e3f0b0b;
+0471 : 80f1cc51;
+0472 : bf953f80;
+0473 : f8840870;
+0474 : 08708c2c;
+0475 : 8f065755;
+0476 : 5678812e;
+0477 : 838c3874;
+0478 : 822e86cc;
+0479 : 38748224;
+047a : 86863874;
+047b : 812e87ca;
+047c : 380b0b80;
+047d : f1d851be;
+047e : e63f0b0b;
+047f : 80f58051;
+0480 : bedd3f0b;
+0481 : 0b80f1e0;
+0482 : 51bed43f;
+0483 : 80f88408;
+0484 : 7008bf06;
+0485 : 56567882;
+0486 : 2e85b638;
+0487 : 81157083;
+0488 : c19c3570;
+0489 : 83ffff06;
+048a : 535154bf;
+048b : c13f0b0b;
+048c : 80f1e851;
+048d : bea93f78;
+048e : 832e84f3;
+048f : 3883e39c;
+0490 : 51be9c3f;
+0491 : 0b0b80f1;
+0492 : f451be93;
+0493 : 3f78842e;
+0494 : 84bb3883;
+0495 : e3dc51be;
+0496 : 863f0b0b;
+0497 : 80f1fc51;
+0498 : bdfd3f78;
+0499 : 852e8484;
+049a : 3883e2cc;
+049b : 51bdf03f;
+049c : 0b0b80f2;
+049d : 8451bde7;
+049e : 3f78862e;
+049f : 83e53883;
+04a0 : e0bc51bd;
+04a1 : da3f7c83;
+04a2 : 2693387b;
+04a3 : 812e85df;
+04a4 : 3876812e;
+04a5 : 87f53876;
+04a6 : ff2e8789;
+04a7 : 3878872e;
+04a8 : 86fa380b;
+04a9 : 0b80f28c;
+04aa : 51bdb43f;
+04ab : 78872e85;
+04ac : b0387888;
+04ad : 2e8a8538;
+04ae : 0b0b80f2;
+04af : 9451bd9f;
+04b0 : 3f78882e;
+04b1 : 81d03880;
+04b2 : 7080f780;
+04b3 : 08703370;
+04b4 : 81ff0670;
+04b5 : 812a8132;
+04b6 : 81065b59;
+04b7 : 5156585c;
+04b8 : 7580e838;
+04b9 : 74813270;
+04ba : 81065154;
+04bb : 73899938;
+04bc : 74832a81;
+04bd : 32708106;
+04be : 51547388;
+04bf : fa387482;
+04c0 : 2a813270;
+04c1 : 81065154;
+04c2 : 7388db38;
+04c3 : 80f6f808;
+04c4 : 70337081;
+04c5 : ff065155;
+04c6 : 5573802e;
+04c7 : 84fe38ba;
+04c8 : 953f80f7;
+04c9 : 840880f7;
+04ca : 94085555;
+04cb : 74337434;
+04cc : 80f78008;
+04cd : 70337081;
+04ce : ff067081;
+04cf : 2a813281;
+04d0 : 06595751;
+04d1 : 5475802e;
+04d2 : ff9a3881;
+04d3 : 19fd115e;
+04d4 : 59887925;
+04d5 : fbd13888;
+04d6 : 59855d87;
+04d7 : a9c051e2;
+04d8 : d33fb9d2;
+04d9 : 3f8058fb;
+04da : ca397680;
+04db : 2e878238;
+04dc : 75087716;
+04dd : 8f0671fc;
+04de : 9fff0671;
+04df : 8c2b0778;
+04e0 : 0c565480;
+04e1 : 70585c87;
+04e2 : a9c051e2;
+04e3 : a73fb9a6;
+04e4 : 3f8058fb;
+04e5 : 9e397b81;
+04e6 : 2e098106;
+04e7 : fea93880;
+04e8 : c05886b8;
+04e9 : 8018be80;
+04ea : 0a195555;
+04eb : 73337534;
+04ec : 81185877;
+04ed : 88802e09;
+04ee : 8106e738;
+04ef : 83a08058;
+04f0 : 84808018;
+04f1 : 87f08080;
+04f2 : 19555573;
+04f3 : 33753481;
+04f4 : 18587783;
+04f5 : a09f2e09;
+04f6 : 8106e538;
+04f7 : 83a48058;
+04f8 : 84808018;
+04f9 : 87f08080;
+04fa : 19555573;
+04fb : 33753481;
+04fc : 18587783;
+04fd : a49f2e09;
+04fe : 8106e538;
+04ff : 83a88058;
+0500 : 84808018;
+0501 : 87f08080;
+0502 : 19555573;
+0503 : 33753481;
+0504 : 18587783;
+0505 : a88f2e09;
+0506 : 8106e538;
+0507 : 80f6fc08;
+0508 : 54797434;
+0509 : 83e0b008;
+050a : 51b8a43f;
+050b : 7a802ea6;
+050c : 380b0b80;
+050d : f18851ba;
+050e : a63f9ec2;
+050f : a051e0f4;
+0510 : 3f8051e4;
+0511 : ce3f80f7;
+0512 : a0085480;
+0513 : 7434e3c9;
+0514 : 3f8151e4;
+0515 : be3f8051;
+0516 : e4dd3f80;
+0517 : f7f80855;
+0518 : f38c3981;
+0519 : 8051b9f1;
+051a : 3ffc9439;
+051b : 818051b9;
+051c : e83f83e2;
+051d : cc51b9e7;
+051e : 3f0b0b80;
+051f : f28451b9;
+0520 : de3f7886;
+0521 : 2e098106;
+0522 : fbf538d7;
+0523 : 39818051;
+0524 : b9c73f83;
+0525 : e3dc51b9;
+0526 : c63f0b0b;
+0527 : 80f1fc51;
+0528 : b9bd3f78;
+0529 : 852e0981;
+052a : 06fbbe38;
+052b : ffbe3981;
+052c : 8051b9a5;
+052d : 3f83e39c;
+052e : 51b9a43f;
+052f : 0b0b80f1;
+0530 : f451b99b;
+0531 : 3f78842e;
+0532 : 098106fb;
+0533 : 8638ffbd;
+0534 : 3976802e;
+0535 : 84a43876;
+0536 : 15700970;
+0537 : 9f2c7206;
+0538 : 780852bf;
+0539 : 0671c006;
+053a : 07780c55;
+053b : 55fd9439;
+053c : 74832e81;
+053d : f6387484;
+053e : 2e098106;
+053f : f9f3380b;
+0540 : 0b80f29c;
+0541 : 51b8d83f;
+0542 : 0b0b80f5;
+0543 : 8051b8cf;
+0544 : 3f0b0b80;
+0545 : f1e051b8;
+0546 : c63f80f8;
+0547 : 84087008;
+0548 : bf065656;
+0549 : 78822e09;
+054a : 8106f9f0;
+054b : 38ffa239;
+054c : 0b0b80f2;
+054d : b851b8a7;
+054e : 3f0b0b80;
+054f : f58051b8;
+0550 : 9e3f0b0b;
+0551 : 80f1e051;
+0552 : b8953f80;
+0553 : f8840870;
+0554 : 08bf0656;
+0555 : 5678822e;
+0556 : 098106f9;
+0557 : bf38fef1;
+0558 : 397b812e;
+0559 : 098106fa;
+055a : cf387b5b;
+055b : fcb13978;
+055c : 842e84ba;
+055d : 38788424;
+055e : 849f3878;
+055f : 832e8e38;
+0560 : fe1983e0;
+0561 : b80c8070;
+0562 : 585cfbfb;
+0563 : 3983e39c;
+0564 : 51ebba3f;
+0565 : fe1983e0;
+0566 : b80ceb39;
+0567 : 815c7433;
+0568 : 7081ff06;
+0569 : 515473f6;
+056a : fe387433;
+056b : 7081ff06;
+056c : 51547380;
+056d : 2ee838f6;
+056e : ee390b0b;
+056f : 80f2d451;
+0570 : b79d3f0b;
+0571 : 0b80f580;
+0572 : 51b7943f;
+0573 : 0b0b80f1;
+0574 : e051b78b;
+0575 : 3f80f884;
+0576 : 087008bf;
+0577 : 06565678;
+0578 : 822e0981;
+0579 : 06f8b538;
+057a : fde7390b;
+057b : 0b80f2e4;
+057c : 51b6ec3f;
+057d : 0b0b80f5;
+057e : 8051b6e3;
+057f : 3f0b0b80;
+0580 : f1e051b6;
+0581 : da3f80f8;
+0582 : 84087008;
+0583 : bf065656;
+0584 : 78822e09;
+0585 : 8106f884;
+0586 : 38fdb639;
+0587 : 818051b6;
+0588 : b83ff8ff;
+0589 : 39805883;
+058a : e39c1870;
+058b : 3383e3dc;
+058c : 1a575854;
+058d : 74337434;
+058e : 83e2cc18;
+058f : 56753375;
+0590 : 3483e0bc;
+0591 : 18547333;
+0592 : 76347674;
+0593 : 34811858;
+0594 : 778f2efa;
+0595 : ae3883e3;
+0596 : 9c187033;
+0597 : 83e3dc1a;
+0598 : 57585474;
+0599 : 33743483;
+059a : e2cc1856;
+059b : 75337534;
+059c : 83e0bc18;
+059d : 54733376;
+059e : 34767434;
+059f : 81185877;
+05a0 : 8f2e0981;
+05a1 : 06ffa038;
+05a2 : f9f93980;
+05a3 : 5883e0bc;
+05a4 : 18703383;
+05a5 : e2cc1a57;
+05a6 : 58547433;
+05a7 : 743483e3;
+05a8 : dc185675;
+05a9 : 33753483;
+05aa : e39c1854;
+05ab : 73337634;
+05ac : 76743481;
+05ad : 1858778f;
+05ae : 2ef9c838;
+05af : 83e0bc18;
+05b0 : 703383e2;
+05b1 : cc1a5758;
+05b2 : 54743374;
+05b3 : 3483e3dc;
+05b4 : 18567533;
+05b5 : 753483e3;
+05b6 : 9c185473;
+05b7 : 33763476;
+05b8 : 74348118;
+05b9 : 58778f2e;
+05ba : 098106ff;
+05bb : a038f993;
+05bc : 39818051;
+05bd : b4e33ff5;
+05be : e6398180;
+05bf : 51b4da3f;
+05c0 : 81157083;
+05c1 : c19c3570;
+05c2 : 83ffff06;
+05c3 : 535154b5;
+05c4 : dd3f0b0b;
+05c5 : 80f1e851;
+05c6 : b4c53f78;
+05c7 : 832e0981;
+05c8 : 06f69a38;
+05c9 : fb89390b;
+05ca : 0b80f2f8;
+05cb : 51f58739;
+05cc : 0b0b80f3;
+05cd : 8851f4fe;
+05ce : 390b0b80;
+05cf : f39851f4;
+05d0 : f5390b0b;
+05d1 : 80f3ac51;
+05d2 : f4ec390b;
+05d3 : 0b80f3bc;
+05d4 : 51f4e339;
+05d5 : 0b0b80f3;
+05d6 : d051f4da;
+05d7 : 390b0b80;
+05d8 : f3d851f4;
+05d9 : d139ff57;
+05da : 87a9c051;
+05db : dac63fb1;
+05dc : c53f8058;
+05dd : f3bd3981;
+05de : 5787a9c0;
+05df : 51dab53f;
+05e0 : b1b43f80;
+05e1 : 58f3ac39;
+05e2 : ff19fd11;
+05e3 : 5e597880;
+05e4 : 25f39438;
+05e5 : 7559f38d;
+05e6 : 3978852e;
+05e7 : 98387886;
+05e8 : 2e098106;
+05e9 : fbda3883;
+05ea : e0bc51fb;
+05eb : e43983e3;
+05ec : dc51fbdd;
+05ed : 3983e2cc;
+05ee : 51fbd639;
+05ef : 818051b3;
+05f0 : 983f0b0b;
+05f1 : 80f29451;
+05f2 : b3953f78;
+05f3 : 882e0981;
+05f4 : 06f5f438;
+05f5 : f7c039fc;
+05f6 : 3d0d7680;
+05f7 : f7e40855;
+05f8 : 55730870;
 05f9 : 81327081;
 05fa : 06515153;
-05fb : 72f3380b;
-05fc : 0b80f9e0;
-05fd : 51b9a03f;
-05fe : 743383e0;
-05ff : c8348115;
-0600 : 3383e0c9;
-0601 : 34821533;
-0602 : 83e0ca34;
-0603 : 83153383;
-0604 : e0cb3484;
-0605 : 5283e0c8;
-0606 : 51ddd63f;
-0607 : 83e08008;
-0608 : 81ff0675;
-0609 : 335253b9;
-060a : fd3f8115;
-060b : 3351b9f6;
-060c : 3f821533;
-060d : 51b9ef3f;
-060e : 83153351;
-060f : b9e83f84;
-0610 : 153351b9;
-0611 : e13f7251;
-0612 : b9dc3f84;
-0613 : 15335572;
-0614 : 752ebd38;
-0615 : 0b0b80f9;
-0616 : e851b8bb;
-0617 : 3f83e38c;
-0618 : 08a82e80;
-0619 : cb38a80b;
-061a : 83e38c0c;
-061b : 0b0b80f9;
-061c : f051b8a3;
-061d : 3f83e38e;
-061e : 2251b9aa;
-061f : 3f0b0b80;
-0620 : fb8051b8;
-0621 : 923f80e4;
-0622 : 51d8a93f;
-0623 : 863d0d04;
-0624 : b4d43f83;
-0625 : e0800880;
-0626 : 2ee3380b;
-0627 : 0b80f9e8;
-0628 : 51b7f43f;
-0629 : 83e38c08;
-062a : a82e0981;
-062b : 06ffb738;
-062c : 860b83e3;
-062d : 8c0c0b0b;
-062e : 80f9f851;
-062f : b7d93f83;
-0630 : e38e2251;
-0631 : b8e03fff;
-0632 : b439fc3d;
-0633 : 0d765574;
-0634 : 83e0b008;
-0635 : 2eaf3880;
-0636 : 547451ac;
-0637 : c93f83e0;
-0638 : 800881ff;
-0639 : 06ff1570;
-063a : 81ff0672;
-063b : 30709f2a;
-063c : 51525653;
-063d : 5373802e;
-063e : 843871dd;
-063f : 3872fe38;
-0640 : 7483e0b0;
-0641 : 0c863d0d;
-0642 : 04fc3d0d;
-0643 : 76028405;
-0644 : a2052202;
-0645 : 8805a605;
-0646 : 227a5455;
-0647 : 5555ffaa;
-0648 : 3f72802e;
-0649 : a13883e3;
-064a : e8143375;
-064b : 70810557;
-064c : 34811470;
-064d : 83ffff06;
-064e : ff157083;
-064f : ffff0656;
-0650 : 52555272;
-0651 : e138800b;
-0652 : 83e0800c;
-0653 : 863d0d04;
-0654 : fe3d0d74;
-0655 : 02840596;
-0656 : 05225353;
-0657 : 71802e97;
-0658 : 38727081;
-0659 : 05543351;
-065a : b2873fff;
-065b : 127083ff;
-065c : ff065152;
-065d : 71eb3884;
-065e : 3d0d04fe;
-065f : 3d0d0292;
-0660 : 05220b0b;
-0661 : 80fa8052;
-0662 : 53b68c3f;
-0663 : 7251b796;
-0664 : 3f82ac51;
-0665 : d69e3f80;
-0666 : c351b1d5;
-0667 : 3f819651;
-0668 : d6923f72;
-0669 : 5283e0c8;
-066a : 51ffa53f;
-066b : 725283e0;
-066c : c851dabd;
-066d : 3f83e080;
-066e : 0881ff06;
-066f : 705253b1;
-0670 : b03f0b0b;
-0671 : 80fa8851;
-0672 : b5cd3f72;
-0673 : 51b6d73f;
-0674 : 0b0b80f9;
-0675 : 8851b5bf;
-0676 : 3f843d0d;
-0677 : 04f13d0d;
-0678 : 0b0b80fa;
-0679 : 9051b5af;
-067a : 3f0b0b80;
-067b : fa9851b5;
-067c : a63fd9bd;
-067d : 3f83e080;
-067e : 0881ff06;
-067f : 547383b1;
-0680 : 380b0b80;
-0681 : f6c051b5;
-0682 : 8e3f0b0b;
-0683 : 80faa451;
-0684 : b5853f83;
-0685 : e3ac5199;
-0686 : 9f3f83e0;
-0687 : 80088391;
-0688 : 380b0b80;
-0689 : f6c051b4;
-068a : ee3f0b0b;
-068b : 80faac51;
-068c : b4e53f0b;
-068d : 0b80f6a8;
-068e : 5283e2f4;
-068f : 51a3843f;
-0690 : 83e08008;
-0691 : 82eb380b;
-0692 : 0b80f6c0;
-0693 : 51b4c83f;
-0694 : 83e09452;
-0695 : 83e2f451;
-0696 : a3fc3f83;
-0697 : e08008a5;
-0698 : 3883e09d;
-0699 : 33547380;
-069a : 2e9b3883;
-069b : e09d51b4;
-069c : a63f83e0;
-069d : 945283e2;
-069e : f451a3da;
-069f : 3f83e080;
-06a0 : 08802edd;
-06a1 : 3880560b;
-06a2 : 0b80fab8;
-06a3 : 16547333;
-06a4 : 83e39817;
-06a5 : 34733383;
-06a6 : e3d81734;
-06a7 : 733383e2;
-06a8 : c8173473;
-06a9 : 3383e0b8;
-06aa : 17347333;
-06ab : 5473802e;
-06ac : 8c388116;
-06ad : 56758f2e;
-06ae : 098106cb;
-06af : 380b0b80;
-06b0 : fac4519c;
-06b1 : 9a3f9280;
-06b2 : 0a0b913d;
-06b3 : 5e5783e0;
-06b4 : 80088aee;
-06b5 : 38805574;
-06b6 : 913d237c;
-06b7 : 53848052;
-06b8 : 83e3e851;
-06b9 : 9db93f90;
-06ba : 3d227083;
-06bb : ffff0655;
-06bc : 5673752e;
-06bd : 9d3883e3;
-06be : e8155473;
-06bf : 33777081;
-06c0 : 05593481;
-06c1 : 15913d22;
-06c2 : 57557476;
-06c3 : 2e098106;
-06c4 : e5387583;
-06c5 : ffff0654;
-06c6 : 7384802e;
-06c7 : ffb73881;
-06c8 : 0b83e0b4;
-06c9 : 0c83e398;
-06ca : 51d8913f;
-06cb : 8051d6bb;
-06cc : 3f80fda0;
-06cd : 08548074;
-06ce : 34d5b63f;
-06cf : 8151d6ab;
-06d0 : 3f8051d6;
-06d1 : ca3f83e3;
-06d2 : 8c088605;
-06d3 : 51adca3f;
-06d4 : 8e3d5978;
-06d5 : 51f88f3f;
-06d6 : 8e3d33cf;
-06d7 : 117081ff;
-06d8 : 06515555;
-06d9 : 738226eb;
-06da : 38748f06;
-06db : 547383e0;
-06dc : b4082e97;
-06dd : 387383e0;
-06de : b40c7382;
-06df : 2e82b638;
-06e0 : 73822482;
-06e1 : 8a387381;
-06e2 : 2eb43883;
-06e3 : e2e40880;
-06e4 : 2ec13802;
-06e5 : b5053354;
-06e6 : 7380d22e;
-06e7 : 82a13873;
-06e8 : 80d22482;
-06e9 : 833873bf;
-06ea : 2e9d38ac;
-06eb : d53fffa3;
-06ec : 390b0b80;
-06ed : f6b851b1;
-06ee : de3f913d;
-06ef : 0d0483e3;
-06f0 : 9851d6f8;
-06f1 : 3fc5390b;
-06f2 : 0b80f894;
-06f3 : 51b1c83f;
-06f4 : 02b70533;
-06f5 : 70882b81;
-06f6 : fe800602;
-06f7 : 8805b605;
-06f8 : 33710551;
-06f9 : 5555add7;
-06fa : 3f80c151;
-06fb : ad833fd1;
-06fc : d83f860b;
-06fd : 83e0c834;
-06fe : 815283e0;
-06ff : c851b4a3;
-0700 : 3f8151fa;
-0701 : f63f7385;
-0702 : b238860b;
-0703 : 83e38c0c;
-0704 : 0b0b80f9;
-0705 : f851b0ff;
-0706 : 3f83e38e;
-0707 : 2251b286;
-0708 : 3f0b0b80;
-0709 : fad451b0;
-070a : ee3fad93;
-070b : 3f80c151;
-070c : acbf3fd1;
-070d : 943f980b;
-070e : 83e2ec33;
-070f : 83e2ed33;
-0710 : 71882b07;
-0711 : 56585573;
-0712 : 81802e82;
-0713 : b138b855;
-0714 : 7483e0c8;
-0715 : 34ff0b83;
-0716 : e0c934e0;
-0717 : 0b83e0ca;
-0718 : 34800b83;
-0719 : e0cb3484;
-071a : 5283e0c8;
-071b : 51b3b43f;
-071c : 8451fa87;
-071d : 3f83e0c8;
-071e : 3351b1aa;
-071f : 3f0b0b80;
-0720 : fadc51b0;
-0721 : 923facfc;
-0722 : 3faaf73f;
-0723 : fdc53973;
-0724 : 832e81e0;
-0725 : 3873842e;
-0726 : 098106fd;
-0727 : ee3883e0;
-0728 : b851d598;
-0729 : 3ffde439;
-072a : 7380d32e;
-072b : fef338aa;
-072c : d13ffd9f;
-072d : 3983e3d8;
-072e : 51d5813f;
-072f : fdcd3902;
-0730 : b7053370;
-0731 : 882b81fe;
-0732 : 80060288;
-0733 : 05b60533;
-0734 : 57760558;
-0735 : 588055ab;
-0736 : e63f80c1;
-0737 : 51ab923f;
-0738 : 74913d23;
-0739 : 0b0b80fa;
-073a : e451afab;
-073b : 3f7651b0;
-073c : b53f0b0b;
-073d : 80faf451;
-073e : af9d3f83;
-073f : e3880875;
-0740 : 2e098106;
-0741 : 81fd3883;
-0742 : e3900856;
-0743 : 83772581;
-0744 : bb3883e2;
-0745 : ec3383e2;
-0746 : ed337188;
-0747 : 2b07fc19;
-0748 : 71297805;
-0749 : 83800570;
-074a : 83ffff06;
-074b : 54585658;
-074c : aff43f0b;
-074d : 0b80fb80;
-074e : 51aedc3f;
-074f : 75519afd;
-0750 : 3f7c5374;
-0751 : 83ffff06;
-0752 : 705383e0;
-0753 : c8525498;
-0754 : ce3f7351;
-0755 : f8a53f0b;
-0756 : 0b80faec;
-0757 : 51aeb83f;
-0758 : 8051afc2;
-0759 : 3f0b0b80;
-075a : fb8051ae;
-075b : aa3fab94;
-075c : 3ffe9639;
-075d : 83e2c851;
-075e : d3c23ffc;
-075f : 8e3983e2;
-0760 : ea3383e2;
-0761 : eb337188;
-0762 : 2b075556;
-0763 : ad807427;
-0764 : fdbe3881;
-0765 : 98557483;
-0766 : e0c834ff;
-0767 : 0b83e0c9;
-0768 : 34e00b83;
-0769 : e0ca3480;
-076a : 0b83e0cb;
-076b : 34845283;
-076c : e0c851b0;
-076d : ee3f8451;
-076e : f7c13f83;
-076f : e0c83351;
-0770 : aee43f0b;
-0771 : 0b80fadc;
-0772 : 51fdb839;
-0773 : 76818029;
-0774 : 16ff8005;
-0775 : 56818076;
-0776 : 83ffff06;
-0777 : 5255aec6;
-0778 : 3f0b0b80;
-0779 : fb8051ad;
-077a : ae3f7551;
-077b : 99cf3f7c;
-077c : 537483ff;
-077d : ff067053;
-077e : 83e0c852;
-077f : 5497a03f;
-0780 : fed03983;
-0781 : e3940880;
-0782 : fc055480;
-0783 : fd527351;
-0784 : b19a3f83;
-0785 : e080080b;
-0786 : 0b80f79c;
-0787 : 525cacf7;
-0788 : 3f827725;
-0789 : 81af3876;
-078a : 82e82e83;
-078b : fc387682;
-078c : e92e81f5;
-078d : 387682f0;
-078e : 24a9380b;
-078f : 0b80faf8;
-0790 : 51acd43f;
-0791 : 81805473;
-0792 : 51f6b03f;
-0793 : 0b0b80fa;
-0794 : ec51acc3;
-0795 : 3f8051ad;
-0796 : cd3f0b0b;
-0797 : 80fb8051;
-0798 : fe89390b;
-0799 : 0b80fb84;
-079a : 51acac3f;
-079b : 7680fd29;
-079c : fd97d305;
-079d : 5198c63f;
-079e : 7c5380fd;
-079f : 5283e0c8;
-07a0 : 51969c3f;
-07a1 : 903d2270;
-07a2 : 83ffff06;
-07a3 : 81195955;
-07a4 : 567380fc;
-07a5 : 26833874;
-07a6 : 5776882c;
-07a7 : 547383e1;
-07a8 : c5347683;
-07a9 : e1c63475;
-07aa : 83e1c734;
-07ab : 0b0b80fa;
-07ac : f851abe3;
-07ad : 3f818054;
-07ae : ff8d39a8;
-07af : 0b83e38c;
-07b0 : 0c0b0b80;
-07b1 : f9f051ab;
-07b2 : ce3f83e3;
-07b3 : 8e2251ac;
-07b4 : d53ffacd;
-07b5 : 390b0b80;
-07b6 : fb8c51ab;
-07b7 : ba3fff17;
-07b8 : 70872b83;
-07b9 : ffff8006;
-07ba : 80fbb405;
-07bb : 83e0c858;
-07bc : 56548180;
-07bd : 54747081;
-07be : 05563376;
-07bf : 70810558;
-07c0 : 34ff1470;
-07c1 : 81ff0651;
-07c2 : 5473802e;
-07c3 : fead3874;
-07c4 : 70810556;
-07c5 : 33767081;
-07c6 : 055834ff;
-07c7 : 147081ff;
-07c8 : 06515473;
-07c9 : d038fe93;
-07ca : 390b0b80;
-07cb : fb9451aa;
-07cc : e63f7475;
-07cd : 5957800b;
-07ce : 83e2d818;
-07cf : 337081ff;
-07d0 : 06ffbf11;
-07d1 : 57575b5b;
-07d2 : 73992683;
-07d3 : 38815b80;
-07d4 : 0bd01655;
-07d5 : 56738926;
-07d6 : 83388156;
-07d7 : 7a760754;
-07d8 : 73802e8f;
-07d9 : 387983e0;
-07da : c8193481;
-07db : 187081ff;
-07dc : 06595476;
-07dd : 87327030;
-07de : 70720780;
-07df : 25798a32;
-07e0 : 70307072;
-07e1 : 07802573;
-07e2 : 07535459;
-07e3 : 51565474;
-07e4 : 802e9a38;
-07e5 : 77772695;
-07e6 : 38a00b83;
-07e7 : e0c81934;
-07e8 : 81187081;
-07e9 : ff065954;
-07ea : 767827ed;
-07eb : 38811770;
-07ec : 81ff0658;
-07ed : 548a7727;
-07ee : fefc388f;
-07ef : 5783e0c3;
-07f0 : 173383e0;
-07f1 : c81834ff;
-07f2 : 177081ff;
-07f3 : 06585476;
-07f4 : 8426ea38;
-07f5 : 9057800b;
-07f6 : 83e0c818;
-07f7 : 34811770;
-07f8 : 81ff0670;
-07f9 : 982b5258;
-07fa : 54738025;
-07fb : e93880c6;
-07fc : 547b858f;
-07fd : 24843880;
-07fe : c2547383;
-07ff : e0c83480;
-0800 : f10b83e0;
-0801 : cb34810b;
-0802 : 83e0cc34;
-0803 : 7b83e0c9;
-0804 : 347b882c;
-0805 : 547383e0;
-0806 : ca340b0b;
-0807 : 80faf851;
-0808 : a8f53f81;
-0809 : 8054fc9f;
-080a : 390b0b80;
-080b : fb9c51a8;
-080c : e63f7b83;
-080d : e0c9347b;
-080e : 882c5473;
-080f : 83e0ca34;
-0810 : d9390b0b;
-0811 : 80f6b851;
-0812 : a8cd3f87;
-0813 : e75681c8;
-0814 : 51c8e13f;
-0815 : 80fd8408;
-0816 : 80fd9408;
-0817 : 55557433;
-0818 : 7434ff16;
-0819 : 56758025;
-081a : e538903d;
-081b : 5d810b83;
-081c : e0b40c83;
-081d : e39851cd;
-081e : c33f8051;
-081f : cbed3f80;
-0820 : fda00854;
-0821 : 807434ca;
-0822 : e83f8151;
-0823 : cbdd3f80;
-0824 : 51cbfc3f;
-0825 : 83e38c08;
-0826 : 860551a2;
-0827 : fc3f8e3d;
-0828 : 59f5b039;
-0829 : ff3d0d80;
-082a : 0b83e0ac;
-082b : 0c800b83;
-082c : e3a80c80;
-082d : 0b83e0b4;
-082e : 0c8151cb;
-082f : d23fa80b;
-0830 : 83e38c0c;
-0831 : 83e0ac08;
-0832 : 51a5bc3f;
-0833 : 83e0ac08;
-0834 : ab38f289;
-0835 : 3f8151cb;
-0836 : b63f8051;
-0837 : cb8d3f80;
-0838 : fda00852;
-0839 : 807234ca;
-083a : 883f8151;
-083b : cafd3f80;
-083c : 51cb9c3f;
-083d : d8e43fd8;
-083e : e13ff939;
-083f : 8051caeb;
-0840 : 3f80fda0;
-0841 : 08528072;
-0842 : 34c9e63f;
-0843 : 8151cadb;
-0844 : 3f8051ca;
-0845 : fa3f80fa;
-0846 : 898051c7;
-0847 : 973ff1bd;
-0848 : 3f8151ca;
-0849 : ea3f8051;
-084a : cac13f80;
-084b : fda00852;
-084c : 807234c9;
-084d : bc3f8151;
-084e : cab13f80;
-084f : 51cad03f;
-0850 : ffb239f7;
-0851 : 3d0d7b83;
-0852 : e0900857;
-0853 : 58817827;
-0854 : 9c387788;
-0855 : 17082795;
-0856 : 38753357;
-0857 : 76822e81;
-0858 : d0387682;
-0859 : 24913876;
-085a : 812e80e6;
-085b : 38810b83;
-085c : e0800c8b;
-085d : 3d0d0476;
-085e : 832e0981;
-085f : 06ef3884;
-0860 : 5477822b;
-0861 : 83fc0653;
-0862 : 77872a8c;
-0863 : 17080552;
-0864 : 8b3dfc05;
-0865 : 51eef23f;
-0866 : 83e08008;
-0867 : d03802a7;
-0868 : 05330284;
-0869 : 05a60533;
-086a : 71982b71;
-086b : 902b0702;
-086c : 8c05a505;
-086d : 3370882b;
-086e : 72078f3d;
-086f : 337180ff;
-0870 : fffe8006;
-0871 : 0783e080;
-0872 : 0c525c57;
-0873 : 58568b3d;
-0874 : 0d047783;
-0875 : ffff0670;
-0876 : 812a1170;
-0877 : 83ffff06;
-0878 : 7083ff06;
-0879 : 71892a52;
-087a : 5c515155;
-087b : 7883ff2e;
-087c : 80f23882;
-087d : 5478538c;
-087e : 16081552;
-087f : 8b3dfc05;
-0880 : 51ee863f;
-0881 : 83e08008;
-0882 : fee33802;
-0883 : a505338b;
-0884 : 3d337188;
-0885 : 2b077981;
-0886 : 0671842a;
-0887 : 53575856;
-0888 : 74863876;
-0889 : 9fff0656;
-088a : 7583e080;
-088b : 0c8b3d0d;
-088c : 04765477;
-088d : 1083fe06;
-088e : 5377882a;
-088f : 8c170805;
-0890 : 528b3dfc;
-0891 : 0551edc1;
-0892 : 3f83e080;
-0893 : 08fe9e38;
-0894 : 02a50533;
-0895 : 8b3d3371;
-0896 : 882b0783;
-0897 : e0800c56;
-0898 : 8b3d0d04;
-0899 : 76547853;
-089a : 8c160815;
-089b : 528b3dfc;
-089c : 0551ed95;
-089d : 3f83e080;
-089e : 08fdf238;
-089f : 765483e0;
-08a0 : 8008538c;
-08a1 : 16081581;
-08a2 : 05528b3d;
-08a3 : fd0551fe;
-08a4 : f039fb3d;
-08a5 : 0d83e090;
-08a6 : 08fe1988;
-08a7 : 1208fe05;
-08a8 : 55565480;
-08a9 : 56747327;
-08aa : 8d388214;
-08ab : 33757129;
-08ac : 94160805;
-08ad : 57537583;
-08ae : e0800c87;
-08af : 3d0d04fc;
-08b0 : 3d0d7683;
-08b1 : e0900855;
-08b2 : 55807523;
-08b3 : 88150853;
-08b4 : 72812e88;
-08b5 : 38881408;
-08b6 : 73268b38;
-08b7 : 810b83e0;
-08b8 : 800c863d;
-08b9 : 0d047290;
-08ba : 38733352;
-08bb : 71832e09;
-08bc : 81068538;
-08bd : 90140853;
-08be : 728c160c;
-08bf : 72802e98;
-08c0 : 387251ff;
-08c1 : 8d3f83e0;
-08c2 : 80089016;
-08c3 : 0c805271;
-08c4 : 83e0800c;
-08c5 : 863d0d04;
-08c6 : 90140890;
-08c7 : 160c8052;
-08c8 : ee39fa3d;
-08c9 : 0d7883e0;
-08ca : 90087122;
-08cb : 81057083;
-08cc : ffff0657;
-08cd : 54575573;
-08ce : 802eb738;
-08cf : 90150853;
-08d0 : 72802eae;
-08d1 : 38738f06;
-08d2 : 52719938;
-08d3 : 81139016;
-08d4 : 0c8c1508;
-08d5 : 5372a538;
-08d6 : 830b8417;
-08d7 : 22575273;
-08d8 : 76278638;
-08d9 : 73752380;
-08da : 527183e0;
-08db : 800c883d;
-08dc : 0d04830b;
-08dd : 83e0800c;
-08de : 883d0d04;
-08df : 821633ff;
-08e0 : 0574842a;
-08e1 : 065271dc;
-08e2 : 387251fb;
-08e3 : b63f8152;
-08e4 : 7183e080;
-08e5 : 0827d238;
-08e6 : 835283e0;
-08e7 : 80088817;
-08e8 : 0827c638;
-08e9 : 83e08008;
-08ea : 8c160c83;
-08eb : e0800851;
-08ec : fde03f83;
-08ed : e0800890;
-08ee : 160c7375;
-08ef : 238052ff;
-08f0 : a839f23d;
-08f1 : 0d606264;
-08f2 : 70335858;
-08f3 : 5e5e74a0;
-08f4 : 2e098106;
-08f5 : 8e388116;
-08f6 : 70447033;
-08f7 : 565674a0;
-08f8 : 2ef43875;
-08f9 : 335574af;
-08fa : 2e829c38;
-08fb : 800b881f;
-08fc : 0c753355;
-08fd : a0752782;
-08fe : a138933d;
-08ff : 841f0870;
-0900 : 585c5f8a;
-0901 : 55a07670;
-0902 : 81055834;
-0903 : ff155574;
-0904 : ff2e0981;
-0905 : 06ef3880;
-0906 : 70595988;
-0907 : 7f085d5a;
-0908 : 78811a70;
-0909 : 81ff067e;
-090a : 13703370;
-090b : af327030;
-090c : a0732771;
-090d : 80250751;
-090e : 51525b53;
-090f : 5b575574;
-0910 : 80d33876;
-0911 : ae2e81e8;
-0912 : 38777a27;
-0913 : 75075574;
-0914 : 802e81e8;
-0915 : 38798832;
-0916 : 703078ae;
-0917 : 32703070;
-0918 : 73079f2a;
-0919 : 53515751;
-091a : 5675aa38;
-091b : 88588b79;
-091c : 811b7081;
-091d : ff067f13;
-091e : 703370af;
-091f : 327030a0;
-0920 : 73277180;
-0921 : 25075151;
-0922 : 525c535c;
-0923 : 58565a74;
-0924 : 802effaf;
-0925 : 387b197f;
-0926 : 0c805576;
-0927 : a0268338;
-0928 : 8155748b;
-0929 : 1c347d51;
-092a : fc953f83;
-092b : e080085a;
-092c : 83e08008;
-092d : 802e81d9;
-092e : 38795679;
-092f : 82b03884;
-0930 : 1e088b11;
-0931 : 33565b74;
-0932 : 80dd388b;
-0933 : 1d337084;
-0934 : 2a708106;
-0935 : 51565774;
-0936 : 802e82a7;
-0937 : 38951d33;
-0938 : 941e3371;
-0939 : 982b7190;
-093a : 2b077f9b;
-093b : 0533609a;
-093c : 05337188;
-093d : 2b077207;
-093e : 6288050c;
-093f : 7e525a58;
-0940 : 56588a55;
-0941 : fdff3981;
-0942 : 16704456;
-0943 : 800b881f;
-0944 : 0c753355;
-0945 : 74a026fd;
-0946 : e1387d51;
-0947 : fba13f83;
-0948 : e0800856;
-0949 : 807d3475;
-094a : 83e0800c;
-094b : 903d0d04;
-094c : 8170797c;
-094d : 27075155;
-094e : 74fe9a38;
-094f : ff9f1755;
-0950 : 74992689;
-0951 : 38e01770;
-0952 : 81ff0658;
-0953 : 55778119;
-0954 : 7081ff06;
-0955 : 7d13535a;
-0956 : 57557675;
-0957 : 34fdc139;
-0958 : ff175776;
-0959 : ff2e80fd;
-095a : 38787081;
-095b : 055a3378;
-095c : 7081055a;
-095d : 33717131;
-095e : 52565675;
-095f : 802ee138;
-0960 : 7d51fb9e;
-0961 : 3f83e080;
-0962 : 085a83e0;
-0963 : 8008fea9;
-0964 : 38a0547d;
-0965 : 2270852b;
-0966 : 83e00654;
-0967 : 55901e08;
-0968 : 527c51e6;
-0969 : e43f83e0;
-096a : 80085a83;
-096b : e0800880;
-096c : dc387c33;
-096d : 5574802e;
-096e : 80dd388b;
-096f : 1d337083;
-0970 : 2a708106;
-0971 : 51565674;
-0972 : ffb6388b;
-0973 : 7d7f8405;
-0974 : 0883e080;
-0975 : 08ff1454;
-0976 : 595a5a57;
-0977 : 76ff2e09;
-0978 : 8106ff85;
-0979 : 3875ff98;
-097a : 387956fd;
-097b : d2397983;
-097c : 2e098106;
-097d : feb13884;
-097e : 1e088b11;
-097f : 33515574;
-0980 : fea53884;
-0981 : 0b83e080;
-0982 : 0c903d0d;
-0983 : 04810b83;
-0984 : e0800c90;
-0985 : 3d0d0483;
-0986 : 0b841f08;
-0987 : 8b113351;
-0988 : 565674fe;
-0989 : 8238dc39;
-098a : f83d0d7a;
-098b : 7c595782;
-098c : 5483fe53;
-098d : 77527651;
-098e : e5cf3f83;
-098f : 5683e080;
-0990 : 0880ec38;
-0991 : 81173377;
-0992 : 3371882b;
-0993 : 07565682;
-0994 : 567482d4;
-0995 : d52e0981;
-0996 : 0680d438;
-0997 : 7554b653;
-0998 : 77527651;
-0999 : e5a33f83;
-099a : e0800898;
-099b : 38811733;
-099c : 77337188;
-099d : 2b0783e0;
-099e : 80085256;
-099f : 56748182;
-09a0 : c62eac38;
-09a1 : 825480d2;
-09a2 : 53775276;
-09a3 : 51e4fa3f;
-09a4 : 83e08008;
-09a5 : 98388117;
-09a6 : 33773371;
-09a7 : 882b0783;
-09a8 : e0800852;
-09a9 : 56567481;
-09aa : 82c62e83;
-09ab : 38815675;
-09ac : 83e0800c;
-09ad : 8a3d0d04;
-09ae : ec3d0d66;
-09af : 58800b83;
-09b0 : e0900c77;
-09b1 : 5677802e;
-09b2 : 82d438ff;
-09b3 : bfe33f83;
-09b4 : e0800881;
-09b5 : 06558256;
-09b6 : 7482c338;
-09b7 : 7475538e;
-09b8 : 3d705358;
-09b9 : 59fec13f;
-09ba : 83e08008;
-09bb : 81ff0656;
-09bc : 75812e82;
-09bd : b2387583;
-09be : 2e838838;
-09bf : 75838e38;
-09c0 : a4548d53;
-09c1 : 78527651;
-09c2 : e3ff3f81;
-09c3 : 5683e080;
-09c4 : 08828b38;
-09c5 : 02ba0533;
-09c6 : 028405b9;
-09c7 : 05337188;
-09c8 : 2b07585c;
-09c9 : 76ab3802;
-09ca : 80ca0533;
-09cb : 02840580;
-09cc : c9053371;
-09cd : 982b7190;
-09ce : 2b07963d;
-09cf : 3370882b;
-09d0 : 72070294;
-09d1 : 0580c705;
-09d2 : 33710754;
-09d3 : 525d5758;
-09d4 : 5602b305;
-09d5 : 33777129;
-09d6 : 028805b2;
-09d7 : 0533028c;
-09d8 : 05b10533;
-09d9 : 71882b07;
-09da : 7c11708c;
-09db : 1e0c5e59;
-09dc : 57585c8d;
-09dd : 3d338219;
-09de : 3402b505;
-09df : 338f3d33;
-09e0 : 71882b07;
-09e1 : 5a5b7884;
-09e2 : 192302b7;
-09e3 : 05330284;
-09e4 : 05b60533;
-09e5 : 71882b07;
-09e6 : 565b74ab;
-09e7 : 380280c6;
-09e8 : 05330284;
-09e9 : 0580c505;
-09ea : 3371982b;
-09eb : 71902b07;
-09ec : 953d3370;
-09ed : 882b7207;
-09ee : 02940580;
-09ef : c3053371;
-09f0 : 07515253;
-09f1 : 575d5b74;
-09f2 : 76317731;
-09f3 : 79842a8f;
-09f4 : 3d335471;
-09f5 : 71315356;
-09f6 : 569dd13f;
-09f7 : 83e08008;
-09f8 : 82057088;
-09f9 : 1a0c709f;
-09fa : f6268105;
-09fb : 575583ff;
-09fc : f6752783;
-09fd : 38835675;
-09fe : 78347583;
-09ff : 2e819838;
-0a00 : 761a9019;
-0a01 : 0c841822;
-0a02 : 771b7184;
-0a03 : 2a05941a;
-0a04 : 0c55800b;
-0a05 : 81193477;
-0a06 : 83e0900c;
-0a07 : 80567583;
-0a08 : e0800c96;
-0a09 : 3d0d0490;
-0a0a : 5483be53;
-0a0b : 74527651;
-0a0c : e1d73f83;
-0a0d : e0800880;
-0a0e : ca388e3d;
-0a0f : 33557480;
-0a10 : 2e80ca38;
-0a11 : 02bb0533;
-0a12 : 028405ba;
-0a13 : 05337198;
-0a14 : 2b71902b;
-0a15 : 07028c05;
-0a16 : b9053370;
-0a17 : 882b7207;
-0a18 : 943d3371;
-0a19 : 0770587c;
-0a1a : 5754525d;
-0a1b : 575a56fb;
-0a1c : b73f83e0;
-0a1d : 800881ff;
-0a1e : 06567583;
-0a1f : 2e098106;
-0a20 : fcfa3881;
-0a21 : 0b83e080;
-0a22 : 0c963d0d;
-0a23 : 04870b83;
-0a24 : e0800c96;
-0a25 : 3d0d0402;
-0a26 : 80d20533;
-0a27 : 02840580;
-0a28 : d1053371;
-0a29 : 982b7190;
-0a2a : 2b07983d;
-0a2b : 3370882b;
-0a2c : 72070294;
-0a2d : 0580cf05;
-0a2e : 33710790;
-0a2f : 1e0c5284;
-0a30 : 1c227b1f;
-0a31 : 71842a05;
-0a32 : 941e0c52;
-0a33 : 5e575a56;
-0a34 : 800b8119;
-0a35 : 347783e0;
-0a36 : 900c8056;
-0a37 : fec039e9;
-0a38 : 3d0d83e0;
-0a39 : 90085686;
-0a3a : 5475802e;
-0a3b : be38800b;
-0a3c : 81173499;
-0a3d : 3de01146;
-0a3e : 6a54c011;
-0a3f : 53ec0551;
-0a40 : f5c03f83;
-0a41 : e0800854;
-0a42 : 83e08008;
-0a43 : 9e38893d;
-0a44 : 33547380;
-0a45 : 2e933802;
-0a46 : ab053370;
-0a47 : 842a7081;
-0a48 : 06515555;
-0a49 : 73802e8c;
-0a4a : 38835473;
-0a4b : 83e0800c;
-0a4c : 993d0d04;
-0a4d : 02b50533;
-0a4e : 8f3d3371;
-0a4f : 982b7190;
-0a50 : 2b07028c;
-0a51 : 05bb0533;
-0a52 : 029005ba;
-0a53 : 05337188;
-0a54 : 2b077207;
-0a55 : a01b0c02;
-0a56 : 9005bf05;
-0a57 : 33029405;
-0a58 : be053371;
-0a59 : 982b7190;
-0a5a : 2b07029c;
-0a5b : 05bd0533;
-0a5c : 70882b72;
-0a5d : 07993d33;
-0a5e : 71077f9c;
-0a5f : 050c5283;
-0a60 : e0800898;
-0a61 : 1f0c565a;
-0a62 : 52525357;
-0a63 : 5957810b;
-0a64 : 81173483;
-0a65 : e0800883;
-0a66 : e0800c99;
-0a67 : 3d0d04f4;
-0a68 : 3d0d7e61;
-0a69 : 028805be;
-0a6a : 05227283;
-0a6b : e090085c;
-0a6c : 5d5b5c5c;
-0a6d : 807b2386;
-0a6e : 5677802e;
-0a6f : 81ca3881;
-0a70 : 18338106;
-0a71 : 55855674;
-0a72 : 802e81bc;
-0a73 : 38981808;
-0a74 : 9c190871;
-0a75 : 31565778;
-0a76 : 752681b5;
-0a77 : 3878802e;
-0a78 : 81a43876;
-0a79 : 83ff0655;
-0a7a : 7480c138;
-0a7b : 821833ff;
-0a7c : 0577892a;
-0a7d : 067081ff;
-0a7e : 06515574;
-0a7f : 93387681;
-0a80 : 9938a018;
-0a81 : 08568176;
-0a82 : 2781a338;
-0a83 : 75a4190c;
-0a84 : a4180851;
-0a85 : f0fc3f83;
-0a86 : e0800880;
-0a87 : 2e818f38;
-0a88 : 83e08008;
-0a89 : 15a8190c;
-0a8a : 98180857;
+05fb : 72f33883;
+05fc : e3900886;
+05fd : 0551ade9;
+05fe : 3f80f7e4;
+05ff : 08700870;
+0600 : 81065151;
+0601 : 5372802e;
+0602 : 9338ebc7;
+0603 : 3f80f7e4;
+0604 : 08700870;
+0605 : 81065151;
+0606 : 5372ef38;
+0607 : aeba3f83;
+0608 : e0800875;
+0609 : 34aeb13f;
+060a : 83e08008;
+060b : 811634ae;
+060c : a73f83e0;
+060d : 80088216;
+060e : 34ae9d3f;
+060f : 83e08008;
+0610 : 831634ae;
+0611 : 933f83e0;
+0612 : 80088416;
+0613 : 3480f7e4;
+0614 : 08547308;
+0615 : 70813270;
+0616 : 81065151;
+0617 : 5372f338;
+0618 : 0b0b80f3;
+0619 : e051b1f7;
+061a : 3f743383;
+061b : e0cc3481;
+061c : 153383e0;
+061d : cd348215;
+061e : 3383e0ce;
+061f : 34831533;
+0620 : 83e0cf34;
+0621 : 845283e0;
+0622 : cc51ddcd;
+0623 : 3f83e080;
+0624 : 0881ff06;
+0625 : 75335253;
+0626 : b2d43f81;
+0627 : 153351b2;
+0628 : cd3f8215;
+0629 : 3351b2c6;
+062a : 3f831533;
+062b : 51b2bf3f;
+062c : 84153351;
+062d : b2b83f72;
+062e : 51b2b33f;
+062f : 84153355;
+0630 : 72752ebd;
+0631 : 380b0b80;
+0632 : f3e851b1;
+0633 : 923f83e3;
+0634 : 9008a82e;
+0635 : 80cb38a8;
+0636 : 0b83e390;
+0637 : 0c0b0b80;
+0638 : f3f051b0;
+0639 : fa3f83e3;
+063a : 922251b2;
+063b : 813f0b0b;
+063c : 80f58051;
+063d : b0e93f80;
+063e : e451d7b8;
+063f : 3f863d0d;
+0640 : 04adab3f;
+0641 : 83e08008;
+0642 : 802ee338;
+0643 : 0b0b80f3;
+0644 : e851b0cb;
+0645 : 3f83e390;
+0646 : 08a82e09;
+0647 : 8106ffb7;
+0648 : 38860b83;
+0649 : e3900c0b;
+064a : 0b80f3f8;
+064b : 51b0b03f;
+064c : 83e39222;
+064d : 51b1b73f;
+064e : ffb439fe;
+064f : 3d0d7402;
+0650 : 84059605;
+0651 : 22535371;
+0652 : 802e9738;
+0653 : 72708105;
+0654 : 543351ab;
+0655 : e43fff12;
+0656 : 7083ffff;
+0657 : 06515271;
+0658 : eb38843d;
+0659 : 0d04fe3d;
+065a : 0d029205;
+065b : 220b0b80;
+065c : f4805253;
+065d : afe93f72;
+065e : 51b0f33f;
+065f : 82ac51d6;
+0660 : b33f80c3;
+0661 : 51abb23f;
+0662 : 819651d6;
+0663 : a73f7252;
+0664 : 83e0cc51;
+0665 : ffa53f72;
+0666 : 5283e0cc;
+0667 : 51dbba3f;
+0668 : 83e08008;
+0669 : 81ff0670;
+066a : 5253ab8d;
+066b : 3f0b0b80;
+066c : f48851af;
+066d : aa3f7251;
+066e : b0b43f0b;
+066f : 0b80f2d0;
+0670 : 51af9c3f;
+0671 : 843d0d04;
+0672 : f13d0d0b;
+0673 : 0b80f490;
+0674 : 51af8c3f;
+0675 : 0b0b80f4;
+0676 : 9851af83;
+0677 : 3fd9fa3f;
+0678 : 83e08008;
+0679 : 81ff0654;
+067a : 7383fd38;
+067b : 0b0b80f0;
+067c : 8451aeeb;
+067d : 3f0b0b80;
+067e : f4a451ae;
+067f : e23f83e3;
+0680 : b05199fb;
+0681 : 3f83e080;
+0682 : 0883dd38;
+0683 : 0b0b80f0;
+0684 : 8451aecb;
+0685 : 3f0b0b80;
+0686 : f4ac51ae;
+0687 : c23f0b0b;
+0688 : 80efec52;
+0689 : 83e2f851;
+068a : a3e33f83;
+068b : e0800883;
+068c : b7380b0b;
+068d : 80f08451;
+068e : aea53f83;
+068f : e0945283;
+0690 : e2f851a4;
+0691 : db3f83e0;
+0692 : 8008a538;
+0693 : 83e09d33;
+0694 : 5473802e;
+0695 : 9b3883e0;
+0696 : 9d51ae83;
+0697 : 3f83e094;
+0698 : 5283e2f8;
+0699 : 51a4b93f;
+069a : 83e08008;
+069b : 802edd38;
+069c : 80560b0b;
+069d : 80f4b816;
+069e : 54733383;
+069f : e39c1734;
+06a0 : 733383e3;
+06a1 : dc173473;
+06a2 : 3383e2cc;
+06a3 : 17347333;
+06a4 : 83e0bc17;
+06a5 : 34733354;
+06a6 : 73802e8c;
+06a7 : 38811656;
+06a8 : 758f2e09;
+06a9 : 8106cb38;
+06aa : 0b0b80f4;
+06ab : c4519cf8;
+06ac : 3f87c180;
+06ad : 800b913d;
+06ae : 5e5783e0;
+06af : 80088bb9;
+06b0 : 38805574;
+06b1 : 913d237c;
+06b2 : 53848052;
+06b3 : 83e0ac08;
+06b4 : 519e953f;
+06b5 : 903d2270;
+06b6 : 83ffff06;
+06b7 : 55567375;
+06b8 : 2e9e3883;
+06b9 : e0ac0815;
+06ba : 54733377;
+06bb : 70810559;
+06bc : 34811591;
+06bd : 3d225755;
+06be : 74762e09;
+06bf : 8106e438;
+06c0 : 7583ffff;
+06c1 : 06547384;
+06c2 : 802effb5;
+06c3 : 3887c480;
+06c4 : 80569e80;
+06c5 : 0a5580ff;
+06c6 : ff547570;
+06c7 : 81055733;
+06c8 : 75708105;
+06c9 : 5734ff14;
+06ca : 5473ff2e;
+06cb : 098106ea;
+06cc : 3887c580;
+06cd : 805687c4;
+06ce : 80805580;
+06cf : ffff5475;
+06d0 : 70810557;
+06d1 : 33757081;
+06d2 : 055734ff;
+06d3 : 145473ff;
+06d4 : 2e098106;
+06d5 : ea38810b;
+06d6 : 83e0b80c;
+06d7 : 83e39c51;
+06d8 : d8c23f80;
+06d9 : 51d6ac3f;
+06da : 80f7a008;
+06db : 54807434;
+06dc : d5a73f81;
+06dd : 51d69c3f;
+06de : 8051d6bb;
+06df : 3f83e390;
+06e0 : 08860551;
+06e1 : a6db3f8e;
+06e2 : 3d597851;
+06e3 : f8c93f8e;
+06e4 : 3d33cf11;
+06e5 : 7081ff06;
+06e6 : 51555573;
+06e7 : 8226eb38;
+06e8 : 748f0654;
+06e9 : 7383e0b8;
+06ea : 082e9738;
+06eb : 7383e0b8;
+06ec : 0c73822e;
+06ed : 82b63873;
+06ee : 8224828a;
+06ef : 3873812e;
+06f0 : b43883e2;
+06f1 : e808802e;
+06f2 : c13802b5;
+06f3 : 05335473;
+06f4 : 80d22e82;
+06f5 : a1387380;
+06f6 : d2248283;
+06f7 : 3873bf2e;
+06f8 : 9d38a5e6;
+06f9 : 3fffa339;
+06fa : 0b0b80ef;
+06fb : fc51aaef;
+06fc : 3f913d0d;
+06fd : 0483e39c;
+06fe : 51d7a93f;
+06ff : c5390b0b;
+0700 : 80f1e051;
+0701 : aad93f02;
+0702 : b7053370;
+0703 : 882b81fe;
+0704 : 80060288;
+0705 : 05b60533;
+0706 : 71055155;
+0707 : 55a6e83f;
+0708 : 80c151a6;
+0709 : 943fd1a1;
+070a : 3f860b83;
+070b : e0cc3481;
+070c : 5283e0cc;
+070d : 51adb43f;
+070e : 8151faaa;
+070f : 3f7385b2;
+0710 : 38860b83;
+0711 : e3900c0b;
+0712 : 0b80f3f8;
+0713 : 51aa903f;
+0714 : 83e39222;
+0715 : 51ab973f;
+0716 : 0b0b80f4;
+0717 : d451a9ff;
+0718 : 3fa6a43f;
+0719 : 80c151a5;
+071a : d03fd0dd;
+071b : 3f980b83;
+071c : e2f03383;
+071d : e2f13371;
+071e : 882b0756;
+071f : 58557381;
+0720 : 802e82b1;
+0721 : 38b85574;
+0722 : 83e0cc34;
+0723 : ff0b83e0;
+0724 : cd34e00b;
+0725 : 83e0ce34;
+0726 : 800b83e0;
+0727 : cf348452;
+0728 : 83e0cc51;
+0729 : acc53f84;
+072a : 51f9bb3f;
+072b : 83e0cc33;
+072c : 51aabb3f;
+072d : 0b0b80f4;
+072e : dc51a9a3;
+072f : 3fa68d3f;
+0730 : a4883ffd;
+0731 : c5397383;
+0732 : 2e81e038;
+0733 : 73842e09;
+0734 : 8106fdee;
+0735 : 3883e0bc;
+0736 : 51d5c93f;
+0737 : fde43973;
+0738 : 80d32efe;
+0739 : f338a3e2;
+073a : 3ffd9f39;
+073b : 83e3dc51;
+073c : d5b23ffd;
+073d : cd3902b7;
+073e : 05337088;
+073f : 2b81fe80;
+0740 : 06028805;
+0741 : b6053357;
+0742 : 76055858;
+0743 : 8055a4f7;
+0744 : 3f80c151;
+0745 : a4a33f74;
+0746 : 913d230b;
+0747 : 0b80f4e4;
+0748 : 51a8bc3f;
+0749 : 7651a9c6;
+074a : 3f0b0b80;
+074b : f4f451a8;
+074c : ae3f83e3;
+074d : 8c08752e;
+074e : 09810681;
+074f : fd3883e3;
+0750 : 94085683;
+0751 : 772581bb;
+0752 : 3883e2f0;
+0753 : 3383e2f1;
+0754 : 3371882b;
+0755 : 07fc1971;
+0756 : 29780583;
+0757 : 80057083;
+0758 : ffff0654;
+0759 : 585658a9;
+075a : 853f0b0b;
+075b : 80f58051;
+075c : a7ed3f75;
+075d : 519b903f;
+075e : 7c537483;
+075f : ffff0670;
+0760 : 5383e0cc;
+0761 : 525498e0;
+0762 : 3f7351f7;
+0763 : d93f0b0b;
+0764 : 80f4ec51;
+0765 : a7c93f80;
+0766 : 51a8d33f;
+0767 : 0b0b80f5;
+0768 : 8051a7bb;
+0769 : 3fa4a53f;
+076a : fe963983;
+076b : e2cc51d3;
+076c : f33ffc8e;
+076d : 3983e2ee;
+076e : 3383e2ef;
+076f : 3371882b;
+0770 : 075556ad;
+0771 : 807427fd;
+0772 : be388198;
+0773 : 557483e0;
+0774 : cc34ff0b;
+0775 : 83e0cd34;
+0776 : e00b83e0;
+0777 : ce34800b;
+0778 : 83e0cf34;
+0779 : 845283e0;
+077a : cc51a9ff;
+077b : 3f8451f6;
+077c : f53f83e0;
+077d : cc3351a7;
+077e : f53f0b0b;
+077f : 80f4dc51;
+0780 : fdb83976;
+0781 : 81802916;
+0782 : ff800556;
+0783 : 81807683;
+0784 : ffff0652;
+0785 : 55a7d73f;
+0786 : 0b0b80f5;
+0787 : 8051a6bf;
+0788 : 3f755199;
+0789 : e23f7c53;
+078a : 7483ffff;
+078b : 06705383;
+078c : e0cc5254;
+078d : 97b23ffe;
+078e : d03983e3;
+078f : 980880fc;
+0790 : 055480fd;
+0791 : 527351aa;
+0792 : ab3f83e0;
+0793 : 80080b0b;
+0794 : 80f0e052;
+0795 : 5ca6883f;
+0796 : 82772581;
+0797 : af387682;
+0798 : e82e83fc;
+0799 : 387682e9;
+079a : 2e81f538;
+079b : 7682f024;
+079c : a9380b0b;
+079d : 80f4f851;
+079e : a5e53f81;
+079f : 80547351;
+07a0 : f5e43f0b;
+07a1 : 0b80f4ec;
+07a2 : 51a5d43f;
+07a3 : 8051a6de;
+07a4 : 3f0b0b80;
+07a5 : f58051fe;
+07a6 : 89390b0b;
+07a7 : 80f58451;
+07a8 : a5bd3f76;
+07a9 : 80fd29fd;
+07aa : 97d30551;
+07ab : 98d93f7c;
+07ac : 5380fd52;
+07ad : 83e0cc51;
+07ae : 96ae3f90;
+07af : 3d227083;
+07b0 : ffff0681;
+07b1 : 19595556;
+07b2 : 7380fc26;
+07b3 : 83387457;
+07b4 : 76882c54;
+07b5 : 7383e1c9;
+07b6 : 347683e1;
+07b7 : ca347583;
+07b8 : e1cb340b;
+07b9 : 0b80f4f8;
+07ba : 51a4f43f;
+07bb : 818054ff;
+07bc : 8d39a80b;
+07bd : 83e3900c;
+07be : 0b0b80f3;
+07bf : f051a4df;
+07c0 : 3f83e392;
+07c1 : 2251a5e6;
+07c2 : 3ffacd39;
+07c3 : 0b0b80f5;
+07c4 : 8c51a4cb;
+07c5 : 3fff1770;
+07c6 : 872b83ff;
+07c7 : ff800680;
+07c8 : f5b40583;
+07c9 : e0cc5856;
+07ca : 54818054;
+07cb : 74708105;
+07cc : 56337670;
+07cd : 81055834;
+07ce : ff147081;
+07cf : ff065154;
+07d0 : 73802efe;
+07d1 : ad387470;
+07d2 : 81055633;
+07d3 : 76708105;
+07d4 : 5834ff14;
+07d5 : 7081ff06;
+07d6 : 515473d0;
+07d7 : 38fe9339;
+07d8 : 0b0b80f5;
+07d9 : 9451a3f7;
+07da : 3f747559;
+07db : 57800b83;
+07dc : e2dc1833;
+07dd : 7081ff06;
+07de : ffbf1157;
+07df : 575b5b73;
+07e0 : 99268338;
+07e1 : 815b800b;
+07e2 : d0165556;
+07e3 : 73892683;
+07e4 : 3881567a;
+07e5 : 76075473;
+07e6 : 802e8f38;
+07e7 : 7983e0cc;
+07e8 : 19348118;
+07e9 : 7081ff06;
+07ea : 59547687;
+07eb : 32703070;
+07ec : 72078025;
+07ed : 798a3270;
+07ee : 30707207;
+07ef : 80257307;
+07f0 : 53545951;
+07f1 : 56547480;
+07f2 : 2e9a3877;
+07f3 : 77269538;
+07f4 : a00b83e0;
+07f5 : cc193481;
+07f6 : 187081ff;
+07f7 : 06595476;
+07f8 : 7827ed38;
+07f9 : 81177081;
+07fa : ff065854;
+07fb : 8a7727fe;
+07fc : fc388f57;
+07fd : 83e0c717;
+07fe : 3383e0cc;
+07ff : 1834ff17;
+0800 : 7081ff06;
+0801 : 58547684;
+0802 : 26ea3890;
+0803 : 57800b83;
+0804 : e0cc1834;
+0805 : 81177081;
+0806 : ff067098;
+0807 : 2b525854;
+0808 : 738025e9;
+0809 : 3880c654;
+080a : 7b858f24;
+080b : 843880c2;
+080c : 547383e0;
+080d : cc3480f1;
+080e : 0b83e0cf;
+080f : 34810b83;
+0810 : e0d0347b;
+0811 : 83e0cd34;
+0812 : 7b882c54;
+0813 : 7383e0ce;
+0814 : 340b0b80;
+0815 : f4f851a2;
+0816 : 863f8180;
+0817 : 54fc9f39;
+0818 : 0b0b80f5;
+0819 : 9c51a1f7;
+081a : 3f7b83e0;
+081b : cd347b88;
+081c : 2c547383;
+081d : e0ce34d9;
+081e : 390b0b80;
+081f : effc51a1;
+0820 : de3f80f6;
+0821 : e8085480;
+0822 : 743480f6;
+0823 : e8085483;
+0824 : 743487e7;
+0825 : 56a78851;
+0826 : c89a3f80;
+0827 : f7840880;
+0828 : f7940855;
+0829 : 55743374;
+082a : 34ff1656;
+082b : 758025e5;
+082c : 38903d5d;
+082d : 810b83e0;
+082e : b80c83e3;
+082f : 9c51cde4;
+0830 : 3f8051cb;
+0831 : ce3f80f7;
+0832 : a0085480;
+0833 : 7434cac9;
+0834 : 3f8151cb;
+0835 : be3f8051;
+0836 : cbdd3f83;
+0837 : e3900886;
+0838 : 05519bfd;
+0839 : 3f8e3d59;
+083a : f5a039ff;
+083b : 3d0d800b;
+083c : 83e0b00c;
+083d : 800b83e3;
+083e : ac0c800b;
+083f : 83e0b80c;
+0840 : 8151cbb3;
+0841 : 3fa80b83;
+0842 : e3900c83;
+0843 : e0b00851;
+0844 : 9ebd3f83;
+0845 : e0b008ab;
+0846 : 38f1ad3f;
+0847 : 8151cb97;
+0848 : 3f8051ca;
+0849 : ee3f80f7;
+084a : a0085280;
+084b : 7234c9e9;
+084c : 3f8151ca;
+084d : de3f8051;
+084e : cafd3fd9;
+084f : 963fd993;
+0850 : 3ff93980;
+0851 : 51cacc3f;
+0852 : 80f7a008;
+0853 : 52807234;
+0854 : c9c73f81;
+0855 : 51cabc3f;
+0856 : 8051cadb;
+0857 : 3f80fa89;
+0858 : 8051c6d0;
+0859 : 3ff0e13f;
+085a : 8151cacb;
+085b : 3f8051ca;
+085c : a23f80f7;
+085d : a0085280;
+085e : 7234c99d;
+085f : 3f8151ca;
+0860 : 923f8051;
+0861 : cab13fff;
+0862 : b239f73d;
+0863 : 0d7b83e0;
+0864 : 90085758;
+0865 : 8178279c;
+0866 : 38778817;
+0867 : 08279538;
+0868 : 75335776;
+0869 : 822e81d0;
+086a : 38768224;
+086b : 91387681;
+086c : 2e80e638;
+086d : 810b83e0;
+086e : 800c8b3d;
+086f : 0d047683;
+0870 : 2e098106;
+0871 : ef388454;
+0872 : 77822b83;
+0873 : fc065377;
+0874 : 872a8c17;
+0875 : 0805528b;
+0876 : 3dfc0551;
+0877 : ca903f83;
+0878 : e08008d0;
+0879 : 3802a705;
+087a : 33028405;
+087b : a6053371;
+087c : 982b7190;
+087d : 2b07028c;
+087e : 05a50533;
+087f : 70882b72;
+0880 : 078f3d33;
+0881 : 7180ffff;
+0882 : fe800607;
+0883 : 83e0800c;
+0884 : 525c5758;
+0885 : 568b3d0d;
+0886 : 047783ff;
+0887 : ff067081;
+0888 : 2a117083;
+0889 : ffff0670;
+088a : 83ff0671;
+088b : 892a525c;
+088c : 51515578;
+088d : 83ff2e80;
+088e : f2388254;
+088f : 78538c16;
+0890 : 0815528b;
+0891 : 3dfc0551;
+0892 : c9a43f83;
+0893 : e08008fe;
+0894 : e33802a5;
+0895 : 05338b3d;
+0896 : 3371882b;
+0897 : 07798106;
+0898 : 71842a53;
+0899 : 57585674;
+089a : 8638769f;
+089b : ff065675;
+089c : 83e0800c;
+089d : 8b3d0d04;
+089e : 76547710;
+089f : 83fe0653;
+08a0 : 77882a8c;
+08a1 : 17080552;
+08a2 : 8b3dfc05;
+08a3 : 51c8df3f;
+08a4 : 83e08008;
+08a5 : fe9e3802;
+08a6 : a505338b;
+08a7 : 3d337188;
+08a8 : 2b0783e0;
+08a9 : 800c568b;
+08aa : 3d0d0476;
+08ab : 5478538c;
+08ac : 16081552;
+08ad : 8b3dfc05;
+08ae : 51c8b33f;
+08af : 83e08008;
+08b0 : fdf23876;
+08b1 : 5483e080;
+08b2 : 08538c16;
+08b3 : 08158105;
+08b4 : 528b3dfd;
+08b5 : 0551fef0;
+08b6 : 39fb3d0d;
+08b7 : 83e09008;
+08b8 : fe198812;
+08b9 : 08fe0555;
+08ba : 56548056;
+08bb : 7473278d;
+08bc : 38821433;
+08bd : 75712994;
+08be : 16080557;
+08bf : 537583e0;
+08c0 : 800c873d;
+08c1 : 0d04fc3d;
+08c2 : 0d7683e0;
+08c3 : 90085555;
+08c4 : 80752388;
+08c5 : 15085372;
+08c6 : 812e8838;
+08c7 : 88140873;
+08c8 : 268b3881;
+08c9 : 0b83e080;
+08ca : 0c863d0d;
+08cb : 04729038;
+08cc : 73335271;
+08cd : 832e0981;
+08ce : 06853890;
+08cf : 14085372;
+08d0 : 8c160c72;
+08d1 : 802e9838;
+08d2 : 7251ff8d;
+08d3 : 3f83e080;
+08d4 : 0890160c;
+08d5 : 80527183;
+08d6 : e0800c86;
+08d7 : 3d0d0490;
+08d8 : 14089016;
+08d9 : 0c8052ee;
+08da : 39fa3d0d;
+08db : 7883e090;
+08dc : 08712281;
+08dd : 057083ff;
+08de : ff065754;
+08df : 57557380;
+08e0 : 2eb73890;
+08e1 : 15085372;
+08e2 : 802eae38;
+08e3 : 738f0652;
+08e4 : 71993881;
+08e5 : 1390160c;
+08e6 : 8c150853;
+08e7 : 72a53883;
+08e8 : 0b841722;
+08e9 : 57527376;
+08ea : 27863873;
+08eb : 75238052;
+08ec : 7183e080;
+08ed : 0c883d0d;
+08ee : 04830b83;
+08ef : e0800c88;
+08f0 : 3d0d0482;
+08f1 : 1633ff05;
+08f2 : 74842a06;
+08f3 : 5271dc38;
+08f4 : 7251fbb6;
+08f5 : 3f815271;
+08f6 : 83e08008;
+08f7 : 27d23883;
+08f8 : 5283e080;
+08f9 : 08881708;
+08fa : 27c63883;
+08fb : e080088c;
+08fc : 160c83e0;
+08fd : 800851fd;
+08fe : e03f83e0;
+08ff : 80089016;
+0900 : 0c737523;
+0901 : 8052ffa8;
+0902 : 39f23d0d;
+0903 : 60626470;
+0904 : 3358585e;
+0905 : 5e74a02e;
+0906 : 0981068e;
+0907 : 38811670;
+0908 : 44703356;
+0909 : 5674a02e;
+090a : f4387533;
+090b : 5574af2e;
+090c : 829c3880;
+090d : 0b881f0c;
+090e : 753355a0;
+090f : 752782a1;
+0910 : 38933d84;
+0911 : 1f087058;
+0912 : 5c5f8a55;
+0913 : a0767081;
+0914 : 055834ff;
+0915 : 155574ff;
+0916 : 2e098106;
+0917 : ef388070;
+0918 : 5959887f;
+0919 : 085d5a78;
+091a : 811a7081;
+091b : ff067e13;
+091c : 703370af;
+091d : 327030a0;
+091e : 73277180;
+091f : 25075151;
+0920 : 525b535b;
+0921 : 57557480;
+0922 : d33876ae;
+0923 : 2e81e838;
+0924 : 777a2775;
+0925 : 07557480;
+0926 : 2e81e838;
+0927 : 79883270;
+0928 : 3078ae32;
+0929 : 70307073;
+092a : 079f2a53;
+092b : 51575156;
+092c : 75aa3888;
+092d : 588b7981;
+092e : 1b7081ff;
+092f : 067f1370;
+0930 : 3370af32;
+0931 : 7030a073;
+0932 : 27718025;
+0933 : 07515152;
+0934 : 5c535c58;
+0935 : 565a7480;
+0936 : 2effaf38;
+0937 : 7b197f0c;
+0938 : 805576a0;
+0939 : 26833881;
+093a : 55748b1c;
+093b : 347d51fc;
+093c : 953f83e0;
+093d : 80085a83;
+093e : e0800880;
+093f : 2e81d938;
+0940 : 79567982;
+0941 : b038841e;
+0942 : 088b1133;
+0943 : 565b7480;
+0944 : dd388b1d;
+0945 : 3370842a;
+0946 : 70810651;
+0947 : 56577480;
+0948 : 2e82a738;
+0949 : 951d3394;
+094a : 1e337198;
+094b : 2b71902b;
+094c : 077f9b05;
+094d : 33609a05;
+094e : 3371882b;
+094f : 07720762;
+0950 : 88050c7e;
+0951 : 525a5856;
+0952 : 588a55fd;
+0953 : ff398116;
+0954 : 70445680;
+0955 : 0b881f0c;
+0956 : 75335574;
+0957 : a026fde1;
+0958 : 387d51fb;
+0959 : a13f83e0;
+095a : 80085680;
+095b : 7d347583;
+095c : e0800c90;
+095d : 3d0d0481;
+095e : 70797c27;
+095f : 07515574;
+0960 : fe9a38ff;
+0961 : 9f175574;
+0962 : 99268938;
+0963 : e0177081;
+0964 : ff065855;
+0965 : 77811970;
+0966 : 81ff067d;
+0967 : 13535a57;
+0968 : 55767534;
+0969 : fdc139ff;
+096a : 175776ff;
+096b : 2e80fd38;
+096c : 78708105;
+096d : 5a337870;
+096e : 81055a33;
+096f : 71713152;
+0970 : 56567580;
+0971 : 2ee1387d;
+0972 : 51fb9e3f;
+0973 : 83e08008;
+0974 : 5a83e080;
+0975 : 08fea938;
+0976 : a0547d22;
+0977 : 70852b83;
+0978 : e0065455;
+0979 : 901e0852;
+097a : 7c51c282;
+097b : 3f83e080;
+097c : 085a83e0;
+097d : 800880dc;
+097e : 387c3355;
+097f : 74802e80;
+0980 : dd388b1d;
+0981 : 3370832a;
+0982 : 70810651;
+0983 : 565674ff;
+0984 : b6388b7d;
+0985 : 7f840508;
+0986 : 83e08008;
+0987 : ff145459;
+0988 : 5a5a5776;
+0989 : ff2e0981;
+098a : 06ff8538;
+098b : 75ff9838;
+098c : 7956fdd2;
+098d : 3979832e;
+098e : 098106fe;
+098f : b138841e;
+0990 : 088b1133;
+0991 : 515574fe;
+0992 : a538840b;
+0993 : 83e0800c;
+0994 : 903d0d04;
+0995 : 810b83e0;
+0996 : 800c903d;
+0997 : 0d04830b;
+0998 : 841f088b;
+0999 : 11335156;
+099a : 5674fe82;
+099b : 38dc39f8;
+099c : 3d0d7a7c;
+099d : 59578254;
+099e : 83fe5377;
+099f : 527651c0;
+09a0 : ed3f8356;
+09a1 : 83e08008;
+09a2 : 80ec3881;
+09a3 : 17337733;
+09a4 : 71882b07;
+09a5 : 56568256;
+09a6 : 7482d4d5;
+09a7 : 2e098106;
+09a8 : 80d43875;
+09a9 : 54b65377;
+09aa : 527651c0;
+09ab : c13f83e0;
+09ac : 80089838;
+09ad : 81173377;
+09ae : 3371882b;
+09af : 0783e080;
+09b0 : 08525656;
+09b1 : 748182c6;
+09b2 : 2eac3882;
+09b3 : 5480d253;
+09b4 : 77527651;
+09b5 : c0983f83;
+09b6 : e0800898;
+09b7 : 38811733;
+09b8 : 77337188;
+09b9 : 2b0783e0;
+09ba : 80085256;
+09bb : 56748182;
+09bc : c62e8338;
+09bd : 81567583;
+09be : e0800c8a;
+09bf : 3d0d04ec;
+09c0 : 3d0d6658;
+09c1 : 800b83e0;
+09c2 : 900c7756;
+09c3 : 77802e82;
+09c4 : d538ffbf;
+09c5 : c43f83e0;
+09c6 : 80088106;
+09c7 : 55825674;
+09c8 : 82c43874;
+09c9 : 75538e3d;
+09ca : 70535859;
+09cb : fec13f83;
+09cc : e0800881;
+09cd : ff065675;
+09ce : 812e82b3;
+09cf : 3875832e;
+09d0 : 838a3875;
+09d1 : 839038a4;
+09d2 : 548d5378;
+09d3 : 527651ff;
+09d4 : bf9c3f81;
+09d5 : 5683e080;
+09d6 : 08828b38;
+09d7 : 02ba0533;
+09d8 : 028405b9;
+09d9 : 05337188;
+09da : 2b07585c;
+09db : 76ab3802;
+09dc : 80ca0533;
+09dd : 02840580;
+09de : c9053371;
+09df : 982b7190;
+09e0 : 2b07963d;
+09e1 : 3370882b;
+09e2 : 72070294;
+09e3 : 0580c705;
+09e4 : 33710754;
+09e5 : 525d5758;
+09e6 : 5602b305;
+09e7 : 33777129;
+09e8 : 028805b2;
+09e9 : 0533028c;
+09ea : 05b10533;
+09eb : 71882b07;
+09ec : 7c11708c;
+09ed : 1e0c5e59;
+09ee : 57585c8d;
+09ef : 3d338219;
+09f0 : 3402b505;
+09f1 : 338f3d33;
+09f2 : 71882b07;
+09f3 : 5a5b7884;
+09f4 : 192302b7;
+09f5 : 05330284;
+09f6 : 05b60533;
+09f7 : 71882b07;
+09f8 : 565b74ab;
+09f9 : 380280c6;
+09fa : 05330284;
+09fb : 0580c505;
+09fc : 3371982b;
+09fd : 71902b07;
+09fe : 953d3370;
+09ff : 882b7207;
+0a00 : 02940580;
+0a01 : c3053371;
+0a02 : 07515253;
+0a03 : 575d5b74;
+0a04 : 76317731;
+0a05 : 79842a8f;
+0a06 : 3d335471;
+0a07 : 71315356;
+0a08 : 5696d13f;
+0a09 : 83e08008;
+0a0a : 82057088;
+0a0b : 1a0c709f;
+0a0c : f6268105;
+0a0d : 575583ff;
+0a0e : f6752783;
+0a0f : 38835675;
+0a10 : 78347583;
+0a11 : 2e819938;
+0a12 : 761a9019;
+0a13 : 0c841822;
+0a14 : 771b7184;
+0a15 : 2a05941a;
+0a16 : 0c55800b;
+0a17 : 81193477;
+0a18 : 83e0900c;
+0a19 : 80567583;
+0a1a : e0800c96;
+0a1b : 3d0d0490;
+0a1c : 5483be53;
+0a1d : 74527651;
+0a1e : ffbcf33f;
+0a1f : 83e08008;
+0a20 : 80ca388e;
+0a21 : 3d335574;
+0a22 : 802e80ca;
+0a23 : 3802bb05;
+0a24 : 33028405;
+0a25 : ba053371;
+0a26 : 982b7190;
+0a27 : 2b07028c;
+0a28 : 05b90533;
+0a29 : 70882b72;
+0a2a : 07943d33;
+0a2b : 71077058;
+0a2c : 7c575452;
+0a2d : 5d575a56;
+0a2e : fbb53f83;
+0a2f : e0800881;
+0a30 : ff065675;
+0a31 : 832e0981;
+0a32 : 06fcf838;
+0a33 : 810b83e0;
+0a34 : 800c963d;
+0a35 : 0d04870b;
+0a36 : 83e0800c;
+0a37 : 963d0d04;
+0a38 : 0280d205;
+0a39 : 33028405;
+0a3a : 80d10533;
+0a3b : 71982b71;
+0a3c : 902b0798;
+0a3d : 3d337088;
+0a3e : 2b720702;
+0a3f : 940580cf;
+0a40 : 05337107;
+0a41 : 901e0c52;
+0a42 : 841c227b;
+0a43 : 1f71842a;
+0a44 : 05941e0c;
+0a45 : 525e575a;
+0a46 : 56800b81;
+0a47 : 19347783;
+0a48 : e0900c80;
+0a49 : 56febf39;
+0a4a : e93d0d83;
+0a4b : e0900856;
+0a4c : 86547580;
+0a4d : 2ebe3880;
+0a4e : 0b811734;
+0a4f : 993de011;
+0a50 : 466a54c0;
+0a51 : 1153ec05;
+0a52 : 51f5be3f;
+0a53 : 83e08008;
+0a54 : 5483e080;
+0a55 : 089e3889;
+0a56 : 3d335473;
+0a57 : 802e9338;
+0a58 : 02ab0533;
+0a59 : 70842a70;
+0a5a : 81065155;
+0a5b : 5573802e;
+0a5c : 8c388354;
+0a5d : 7383e080;
+0a5e : 0c993d0d;
+0a5f : 0402b505;
+0a60 : 338f3d33;
+0a61 : 71982b71;
+0a62 : 902b0702;
+0a63 : 8c05bb05;
+0a64 : 33029005;
+0a65 : ba053371;
+0a66 : 882b0772;
+0a67 : 07a01b0c;
+0a68 : 029005bf;
+0a69 : 05330294;
+0a6a : 05be0533;
+0a6b : 71982b71;
+0a6c : 902b0702;
+0a6d : 9c05bd05;
+0a6e : 3370882b;
+0a6f : 7207993d;
+0a70 : 3371077f;
+0a71 : 9c050c52;
+0a72 : 83e08008;
+0a73 : 981f0c56;
+0a74 : 5a525253;
+0a75 : 57595781;
+0a76 : 0b811734;
+0a77 : 83e08008;
+0a78 : 83e0800c;
+0a79 : 993d0d04;
+0a7a : f43d0d7e;
+0a7b : 61028805;
+0a7c : be052272;
+0a7d : 83e09008;
+0a7e : 5c5d5b5c;
+0a7f : 5c807b23;
+0a80 : 86567780;
+0a81 : 2e81cb38;
+0a82 : 81183381;
+0a83 : 06558556;
+0a84 : 74802e81;
+0a85 : bd389818;
+0a86 : 089c1908;
+0a87 : 71315657;
+0a88 : 78752681;
+0a89 : b6387880;
+0a8a : 2e81a538;
 0a8b : 7683ff06;
-0a8c : 84807131;
-0a8d : 7083ffff;
-0a8e : 06585155;
-0a8f : 78762783;
-0a90 : 38785675;
-0a91 : 54981808;
-0a92 : 83ff0653;
-0a93 : a8180852;
-0a94 : 79557b80;
-0a95 : 2e80d238;
-0a96 : 7451ddad;
-0a97 : 3f83e080;
-0a98 : 0880cb38;
-0a99 : 98180816;
-0a9a : 70589819;
-0a9b : 0c751a79;
-0a9c : 77317083;
-0a9d : ffff067d;
-0a9e : 22790552;
-0a9f : 5b565a74;
-0aa0 : 7b2378fe;
-0aa1 : de388056;
-0aa2 : 7583e080;
-0aa3 : 0c8e3d0d;
-0aa4 : 047483ff;
-0aa5 : ff0659fe;
-0aa6 : c439a418;
-0aa7 : 0851eda3;
-0aa8 : 3f83e080;
-0aa9 : 0856fede;
-0aaa : 397b55ff;
-0aab : ab39800b;
-0aac : 81193481;
-0aad : 0b83e080;
-0aae : 0c8e3d0d;
-0aaf : 04fa3d0d;
-0ab0 : 7883e090;
-0ab1 : 08555586;
-0ab2 : 5673802e;
-0ab3 : 81cd3881;
-0ab4 : 14338106;
-0ab5 : 53855672;
-0ab6 : 802e81bf;
-0ab7 : 389c1408;
-0ab8 : 53747326;
-0ab9 : 81be3898;
-0aba : 14085780;
-0abb : 0b98150c;
-0abc : 74802e81;
-0abd : a4388214;
-0abe : 3370892b;
-0abf : 57537680;
-0ac0 : 2e81a638;
-0ac1 : 7552ff15;
-0ac2 : 5197a13f;
-0ac3 : 83e08008;
-0ac4 : ff187754;
-0ac5 : 70535853;
-0ac6 : 97923f83;
-0ac7 : e0800873;
-0ac8 : 26818638;
-0ac9 : 75307078;
-0aca : 06709817;
-0acb : 0c767131;
-0acc : a4170852;
-0acd : 57515375;
-0ace : 7527b738;
-0acf : 7251ec83;
-0ad0 : 3f83e080;
-0ad1 : 0853810b;
-0ad2 : 83e08008;
-0ad3 : 2780e538;
-0ad4 : 83e08008;
-0ad5 : 88150827;
-0ad6 : 80da3883;
-0ad7 : e08008a4;
-0ad8 : 150c9814;
-0ad9 : 08169815;
-0ada : 0c747631;
-0adb : 55747626;
-0adc : cb389814;
-0add : 08157098;
-0ade : 160c7352;
-0adf : 56ee933f;
-0ae0 : 83e08008;
-0ae1 : 802ead38;
-0ae2 : 821433ff;
-0ae3 : 0576892a;
-0ae4 : 0683e080;
-0ae5 : 0805a815;
-0ae6 : 0c805675;
-0ae7 : 83e0800c;
-0ae8 : 883d0d04;
-0ae9 : 7255febf;
-0aea : 39a01408;
-0aeb : 70a4160c;
-0aec : 53ff8439;
-0aed : 800b8115;
-0aee : 34810b83;
-0aef : e0800c88;
-0af0 : 3d0d04ee;
-0af1 : 3d0d6456;
-0af2 : 865583e0;
-0af3 : 9008802e;
-0af4 : 80f13894;
-0af5 : 3df41184;
-0af6 : 180c6654;
-0af7 : d4055275;
-0af8 : 51efdf3f;
-0af9 : 83e08008;
-0afa : 5583e080;
-0afb : 0880cf38;
-0afc : 893d3354;
-0afd : 73802ebc;
-0afe : 3802ab05;
-0aff : 3370842a;
-0b00 : 70810651;
-0b01 : 55558455;
-0b02 : 73802eb7;
-0b03 : 3802b505;
-0b04 : 338f3d33;
-0b05 : 71982b71;
-0b06 : 902b0702;
-0b07 : 8c05bb05;
-0b08 : 33029005;
-0b09 : ba053371;
-0b0a : 882b0772;
-0b0b : 07881b0c;
-0b0c : 53575957;
-0b0d : 7551ed87;
-0b0e : 3f83e080;
-0b0f : 08557483;
-0b10 : 2e8a3874;
-0b11 : 83e0800c;
-0b12 : 943d0d04;
-0b13 : 840b83e0;
-0b14 : 800c943d;
-0b15 : 0d04eb3d;
-0b16 : 0d67695b;
-0b17 : 59865583;
-0b18 : e0900880;
-0b19 : 2e81f138;
-0b1a : 973df405;
-0b1b : 841a0c79;
-0b1c : 802e8384;
-0b1d : 388c3d58;
-0b1e : 83559019;
-0b1f : 0881fb38;
-0b20 : 800b901a;
-0b21 : 0c74832e;
-0b22 : 82e63874;
-0b23 : 81ca3889;
-0b24 : 1a579019;
-0b25 : 08802e81;
-0b26 : a0388056;
-0b27 : 77167033;
-0b28 : 515574a0;
-0b29 : 2e9b3874;
-0b2a : 852e82a9;
-0b2b : 38747770;
-0b2c : 81055934;
-0b2d : 81167081;
-0b2e : ff065755;
-0b2f : 877627dc;
-0b30 : 38881833;
-0b31 : 5574a02e;
-0b32 : a938ae77;
-0b33 : 70810559;
-0b34 : 34885677;
-0b35 : 16703351;
-0b36 : 5574a02e;
-0b37 : 95387477;
-0b38 : 70810559;
-0b39 : 34811670;
-0b3a : 81ff0657;
-0b3b : 558a7627;
-0b3c : e2388b18;
-0b3d : 33881b34;
-0b3e : 9f18339e;
-0b3f : 19337198;
-0b40 : 2b71902b;
-0b41 : 079d1b33;
-0b42 : 70882b72;
-0b43 : 079c1d33;
-0b44 : 71077f0c;
-0b45 : 52991c33;
-0b46 : 981d3371;
-0b47 : 882b0753;
-0b48 : 5153575c;
-0b49 : 5674841b;
-0b4a : 23971833;
-0b4b : 96193371;
-0b4c : 882b0756;
-0b4d : 5674861b;
-0b4e : 23807734;
-0b4f : 7851ebe2;
-0b50 : 3f83e080;
-0b51 : 085583e0;
-0b52 : 8008832e;
-0b53 : 09810688;
-0b54 : 38800b90;
-0b55 : 1a0c8055;
-0b56 : 7483e080;
-0b57 : 0c973d0d;
-0b58 : 047851eb;
-0b59 : bd3f83e0;
-0b5a : 80085583;
-0b5b : e08008fe;
-0b5c : 8f389019;
-0b5d : 08802efe;
-0b5e : 8c38a054;
-0b5f : 78227085;
-0b60 : 2b83e006;
-0b61 : 54569019;
-0b62 : 08527751;
-0b63 : d6fb3f83;
-0b64 : e0800880;
-0b65 : f4387733;
-0b66 : 5675802e;
-0b67 : 80f5388b;
-0b68 : 1833bf06;
-0b69 : 7681e532;
-0b6a : 7030709f;
-0b6b : 2a515156;
-0b6c : 5775ae2e;
-0b6d : ffab3874;
-0b6e : 802effa5;
-0b6f : 3876832a;
-0b70 : 70810651;
-0b71 : 5574ff99;
-0b72 : 3883e080;
-0b73 : 085574ff;
-0b74 : 8738fdbb;
-0b75 : 3981e555;
-0b76 : 74777081;
-0b77 : 05593481;
-0b78 : 167081ff;
-0b79 : 06575587;
-0b7a : 7627fdb0;
-0b7b : 38fdd239;
-0b7c : 800b901a;
-0b7d : 0cfd9839;
-0b7e : 7851e9c3;
-0b7f : 3f83e080;
-0b80 : 0883e080;
-0b81 : 0c973d0d;
-0b82 : 04815580;
-0b83 : 0b901a0c;
-0b84 : fcf33983;
-0b85 : 55800b90;
-0b86 : 1a0cfce9;
-0b87 : 39803d0d;
-0b88 : 85db3f80;
-0b89 : 5185f03f;
-0b8a : 823d0d04;
-0b8b : ff3d0d83;
-0b8c : e3e85281;
-0b8d : 805186d0;
-0b8e : 3f83e080;
-0b8f : 08727081;
-0b90 : 055434ff;
-0b91 : 117083ff;
-0b92 : ff065151;
-0b93 : 70e83881;
-0b94 : 805186b4;
-0b95 : 3f83e080;
-0b96 : 08727081;
-0b97 : 055434ff;
-0b98 : 117083ff;
-0b99 : ff065151;
-0b9a : 70e83881;
-0b9b : 80518698;
-0b9c : 3f83e080;
-0b9d : 08727081;
-0b9e : 055434ff;
-0b9f : 117083ff;
-0ba0 : ff065151;
-0ba1 : 70e83881;
-0ba2 : 805185fc;
-0ba3 : 3f83e080;
-0ba4 : 08727081;
-0ba5 : 055434ff;
-0ba6 : 117083ff;
-0ba7 : ff065151;
-0ba8 : 70e83883;
-0ba9 : 3d0d04fd;
-0baa : 3d0d7602;
-0bab : 84059705;
-0bac : 33535381;
-0bad : ff5485d0;
-0bae : 3f85cd3f;
-0baf : 85ca3f85;
-0bb0 : c73f7180;
-0bb1 : c0075184;
-0bb2 : e43f7298;
-0bb3 : 2a5184dd;
-0bb4 : 3f72902a;
-0bb5 : 7081ff06;
-0bb6 : 525284d1;
-0bb7 : 3f72882a;
-0bb8 : 7081ff06;
-0bb9 : 525284c5;
-0bba : 3f7281ff;
-0bbb : 065184bd;
-0bbc : 3f819551;
-0bbd : 84b73f85;
-0bbe : 8f3f83e0;
-0bbf : 800881ff;
-0bc0 : 06ff1570;
-0bc1 : 81ff0670;
-0bc2 : 30709f2a;
-0bc3 : 51525653;
-0bc4 : 537281ff;
-0bc5 : 2e098106;
-0bc6 : 843871db;
-0bc7 : 387283e0;
-0bc8 : 800c853d;
-0bc9 : 0d04fd3d;
-0bca : 0d815183;
-0bcb : ea3f7589;
-0bcc : 2b529151;
-0bcd : fef13f83;
-0bce : e0800881;
-0bcf : ff067055;
-0bd0 : 5372802e;
-0bd1 : 8a387383;
-0bd2 : e0800c85;
-0bd3 : 3d0d0484;
-0bd4 : b73f83e0;
-0bd5 : 800881ff;
-0bd6 : 06537281;
-0bd7 : fe2e0981;
-0bd8 : 06ed38fd;
-0bd9 : c73f84a0;
-0bda : 3f849d3f;
-0bdb : 805183a7;
-0bdc : 3f800b83;
-0bdd : e0800c85;
-0bde : 3d0d04fe;
-0bdf : 3d0d0293;
-0be0 : 05335381;
-0be1 : 5183903f;
-0be2 : 75527251;
-0be3 : fe993f83;
-0be4 : e0800881;
-0be5 : ff065380;
-0be6 : 5182fc3f;
-0be7 : 7283e080;
-0be8 : 0c843d0d;
-0be9 : 04fd3d0d;
-0bea : 81ff5383;
-0beb : db3fff13;
-0bec : 7081ff06;
-0bed : 515372f3;
-0bee : 38725272;
-0bef : 51ffbc3f;
-0bf0 : 83e08008;
-0bf1 : 81ff0653;
-0bf2 : 81ff5472;
-0bf3 : 812e0981;
-0bf4 : 0680e238;
-0bf5 : 83ffff54;
-0bf6 : 8052b751;
-0bf7 : ff9d3f83;
-0bf8 : e0800881;
-0bf9 : ff065372;
-0bfa : 812e0981;
-0bfb : 06a13880;
-0bfc : 52a951ff;
-0bfd : 863f83e0;
-0bfe : 800881ff;
-0bff : 06537280;
-0c00 : 2e8d38ff;
-0c01 : 147083ff;
-0c02 : ff065553;
-0c03 : 73ca3880;
-0c04 : 528151fe;
-0c05 : e63f83e0;
-0c06 : 800881ff;
-0c07 : 065381ff;
-0c08 : 54729238;
-0c09 : 7252bb51;
-0c0a : fed13f84;
-0c0b : 80529051;
-0c0c : fec93f72;
-0c0d : 547383e0;
-0c0e : 800c853d;
-0c0f : 0d04fb3d;
-0c10 : 0d83e3e8;
-0c11 : 56815181;
-0c12 : ce3f7789;
-0c13 : 2b529851;
-0c14 : fcd53f83;
-0c15 : e0800881;
-0c16 : ff067056;
-0c17 : 5473802e;
-0c18 : 8a387483;
-0c19 : e0800c87;
-0c1a : 3d0d0482;
-0c1b : 9b3f81fe;
-0c1c : 5181ba3f;
-0c1d : 84805375;
-0c1e : 70810557;
-0c1f : 335181ad;
-0c20 : 3fff1370;
-0c21 : 83ffff06;
-0c22 : 515372eb;
-0c23 : 3881f93f;
-0c24 : 81f63f81;
-0c25 : f33f83e0;
-0c26 : 800881ff;
-0c27 : 06709f06;
-0c28 : 54557285;
-0c29 : 2e098106;
-0c2a : ffb83881;
-0c2b : db3f83e0;
-0c2c : 800881ff;
-0c2d : 06537280;
-0c2e : 2ef13880;
-0c2f : 5180d83f;
-0c30 : 800b83e0;
-0c31 : 800c873d;
-0c32 : 0d04ff3d;
-0c33 : 0d83e7f0;
-0c34 : 081083e7;
-0c35 : e8080780;
-0c36 : fde40852;
-0c37 : 710c833d;
-0c38 : 0d04800b;
-0c39 : 83e7f00c;
-0c3a : e13f0481;
-0c3b : 0b83e7f0;
-0c3c : 0cd83f04;
-0c3d : ed3f0471;
-0c3e : 83e7ec0c;
-0c3f : 04803d0d;
-0c40 : 8051f43f;
-0c41 : 810b83e7;
-0c42 : f00c810b;
-0c43 : 83e7e80c;
-0c44 : ffb83f82;
-0c45 : 3d0d0480;
-0c46 : 3d0d7230;
-0c47 : 70740780;
-0c48 : 2583e7e8;
-0c49 : 0c51ffa2;
-0c4a : 3f823d0d;
-0c4b : 04fd3d0d;
-0c4c : 02970533;
-0c4d : 80fde808;
-0c4e : 55740c80;
-0c4f : fde40853;
-0c50 : 72087081;
-0c51 : 06515271;
-0c52 : f7387308;
+0a8c : 557480c1;
+0a8d : 38821833;
+0a8e : ff057789;
+0a8f : 2a067081;
+0a90 : ff065155;
+0a91 : 74933876;
+0a92 : 819a38a0;
+0a93 : 18085681;
+0a94 : 762781a4;
+0a95 : 3875a419;
+0a96 : 0ca41808;
+0a97 : 51f0fa3f;
+0a98 : 83e08008;
+0a99 : 802e8190;
+0a9a : 3883e080;
+0a9b : 0815a819;
+0a9c : 0c981808;
+0a9d : 577683ff;
+0a9e : 06848071;
+0a9f : 317083ff;
+0aa0 : ff065851;
+0aa1 : 55787627;
+0aa2 : 83387856;
+0aa3 : 75549818;
+0aa4 : 0883ff06;
+0aa5 : 53a81808;
+0aa6 : 5279557b;
+0aa7 : 802e80d3;
+0aa8 : 387451ff;
+0aa9 : b8c83f83;
+0aaa : e0800880;
+0aab : cb389818;
+0aac : 08167058;
+0aad : 98190c75;
+0aae : 1a797731;
+0aaf : 7083ffff;
+0ab0 : 067d2279;
+0ab1 : 05525b56;
+0ab2 : 5a747b23;
+0ab3 : 78fedd38;
+0ab4 : 80567583;
+0ab5 : e0800c8e;
+0ab6 : 3d0d0474;
+0ab7 : 83ffff06;
+0ab8 : 59fec339;
+0ab9 : a4180851;
+0aba : eda03f83;
+0abb : e0800856;
+0abc : fedd397b;
+0abd : 55ffaa39;
+0abe : 800b8119;
+0abf : 34810b83;
+0ac0 : e0800c8e;
+0ac1 : 3d0d04fa;
+0ac2 : 3d0d7883;
+0ac3 : e0900855;
+0ac4 : 55865673;
+0ac5 : 802e81cd;
+0ac6 : 38811433;
+0ac7 : 81065385;
+0ac8 : 5672802e;
+0ac9 : 81bf389c;
+0aca : 14085374;
+0acb : 732681be;
+0acc : 38981408;
+0acd : 57800b98;
+0ace : 150c7480;
+0acf : 2e81a438;
+0ad0 : 82143370;
+0ad1 : 892b5753;
+0ad2 : 76802e81;
+0ad3 : a6387552;
+0ad4 : ff155190;
+0ad5 : 9f3f83e0;
+0ad6 : 8008ff18;
+0ad7 : 77547053;
+0ad8 : 58539090;
+0ad9 : 3f83e080;
+0ada : 08732681;
+0adb : 86387530;
+0adc : 70780670;
+0add : 98170c76;
+0ade : 7131a417;
+0adf : 08525751;
+0ae0 : 53757527;
+0ae1 : b7387251;
+0ae2 : ec803f83;
+0ae3 : e0800853;
+0ae4 : 810b83e0;
+0ae5 : 80082780;
+0ae6 : e53883e0;
+0ae7 : 80088815;
+0ae8 : 082780da;
+0ae9 : 3883e080;
+0aea : 08a4150c;
+0aeb : 98140816;
+0aec : 98150c74;
+0aed : 76315574;
+0aee : 7626cb38;
+0aef : 98140815;
+0af0 : 7098160c;
+0af1 : 735256ee;
+0af2 : 903f83e0;
+0af3 : 8008802e;
+0af4 : ad388214;
+0af5 : 33ff0576;
+0af6 : 892a0683;
+0af7 : e0800805;
+0af8 : a8150c80;
+0af9 : 567583e0;
+0afa : 800c883d;
+0afb : 0d047255;
+0afc : febf39a0;
+0afd : 140870a4;
+0afe : 160c53ff;
+0aff : 8439800b;
+0b00 : 81153481;
+0b01 : 0b83e080;
+0b02 : 0c883d0d;
+0b03 : 04ee3d0d;
+0b04 : 64568655;
+0b05 : 83e09008;
+0b06 : 802e80f1;
+0b07 : 38943df4;
+0b08 : 1184180c;
+0b09 : 6654d405;
+0b0a : 527551ef;
+0b0b : dc3f83e0;
+0b0c : 80085583;
+0b0d : e0800880;
+0b0e : cf38893d;
+0b0f : 33547380;
+0b10 : 2ebc3802;
+0b11 : ab053370;
+0b12 : 842a7081;
+0b13 : 06515555;
+0b14 : 84557380;
+0b15 : 2eb73802;
+0b16 : b505338f;
+0b17 : 3d337198;
+0b18 : 2b71902b;
+0b19 : 07028c05;
+0b1a : bb053302;
+0b1b : 9005ba05;
+0b1c : 3371882b;
+0b1d : 07720788;
+0b1e : 1b0c5357;
+0b1f : 59577551;
+0b20 : ed843f83;
+0b21 : e0800855;
+0b22 : 74832e8a;
+0b23 : 387483e0;
+0b24 : 800c943d;
+0b25 : 0d04840b;
+0b26 : 83e0800c;
+0b27 : 943d0d04;
+0b28 : eb3d0d67;
+0b29 : 695b5986;
+0b2a : 5583e090;
+0b2b : 08802e81;
+0b2c : f138973d;
+0b2d : f405841a;
+0b2e : 0c79802e;
+0b2f : 8385388c;
+0b30 : 3d588355;
+0b31 : 90190881;
+0b32 : fb38800b;
+0b33 : 901a0c74;
+0b34 : 832e82e7;
+0b35 : 387481ca;
+0b36 : 38891a57;
+0b37 : 90190880;
+0b38 : 2e81a038;
+0b39 : 80567716;
+0b3a : 70335155;
+0b3b : 74a02e9b;
+0b3c : 3874852e;
+0b3d : 82aa3874;
+0b3e : 77708105;
+0b3f : 59348116;
+0b40 : 7081ff06;
+0b41 : 57558776;
+0b42 : 27dc3888;
+0b43 : 18335574;
+0b44 : a02ea938;
+0b45 : ae777081;
+0b46 : 05593488;
+0b47 : 56771670;
+0b48 : 33515574;
+0b49 : a02e9538;
+0b4a : 74777081;
+0b4b : 05593481;
+0b4c : 167081ff;
+0b4d : 0657558a;
+0b4e : 7627e238;
+0b4f : 8b183388;
+0b50 : 1b349f18;
+0b51 : 339e1933;
+0b52 : 71982b71;
+0b53 : 902b079d;
+0b54 : 1b337088;
+0b55 : 2b72079c;
+0b56 : 1d337107;
+0b57 : 7f0c5299;
+0b58 : 1c33981d;
+0b59 : 3371882b;
+0b5a : 07535153;
+0b5b : 575c5674;
+0b5c : 841b2397;
+0b5d : 18339619;
+0b5e : 3371882b;
+0b5f : 07565674;
+0b60 : 861b2380;
+0b61 : 77347851;
+0b62 : ebdf3f83;
+0b63 : e0800855;
+0b64 : 83e08008;
+0b65 : 832e0981;
+0b66 : 06883880;
+0b67 : 0b901a0c;
+0b68 : 80557483;
+0b69 : e0800c97;
+0b6a : 3d0d0478;
+0b6b : 51ebba3f;
+0b6c : 83e08008;
+0b6d : 5583e080;
+0b6e : 08fe8f38;
+0b6f : 90190880;
+0b70 : 2efe8c38;
+0b71 : a0547822;
+0b72 : 70852b83;
+0b73 : e0065456;
+0b74 : 90190852;
+0b75 : 7751ffb2;
+0b76 : 953f83e0;
+0b77 : 800880f4;
+0b78 : 38773356;
+0b79 : 75802e80;
+0b7a : f5388b18;
+0b7b : 33bf0676;
+0b7c : 81e53270;
+0b7d : 30709f2a;
+0b7e : 51515657;
+0b7f : 75ae2eff;
+0b80 : aa387480;
+0b81 : 2effa438;
+0b82 : 76832a70;
+0b83 : 81065155;
+0b84 : 74ff9838;
+0b85 : 83e08008;
+0b86 : 5574ff86;
+0b87 : 38fdba39;
+0b88 : 81e55574;
+0b89 : 77708105;
+0b8a : 59348116;
+0b8b : 7081ff06;
+0b8c : 57558776;
+0b8d : 27fdaf38;
+0b8e : fdd13980;
+0b8f : 0b901a0c;
+0b90 : fd973978;
+0b91 : 51e9bf3f;
+0b92 : 83e08008;
+0b93 : 83e0800c;
+0b94 : 973d0d04;
+0b95 : 8155800b;
+0b96 : 901a0cfc;
+0b97 : f2398355;
+0b98 : 800b901a;
+0b99 : 0cfce839;
+0b9a : fe3d0d80;
+0b9b : f7a80870;
+0b9c : 337081ff;
+0b9d : 0670842a;
+0b9e : 81328106;
+0b9f : 55515253;
+0ba0 : 71802e8c;
+0ba1 : 38a87334;
+0ba2 : 80f7a808;
+0ba3 : 51b87134;
+0ba4 : 7183e080;
+0ba5 : 0c843d0d;
+0ba6 : 04fe3d0d;
+0ba7 : 80f7a808;
+0ba8 : 70337081;
+0ba9 : ff067085;
+0baa : 2a813281;
+0bab : 06555152;
+0bac : 5371802e;
+0bad : 8c389873;
+0bae : 3480f7a8;
+0baf : 0851b871;
+0bb0 : 347183e0;
+0bb1 : 800c843d;
+0bb2 : 0d04803d;
+0bb3 : 0d80f7a4;
+0bb4 : 08519371;
+0bb5 : 3480f7b0;
+0bb6 : 0851ff71;
+0bb7 : 34823d0d;
+0bb8 : 04fe3d0d;
+0bb9 : 02930533;
+0bba : 80f7a408;
+0bbb : 53538072;
+0bbc : 348a51ff;
+0bbd : abbe3fd2;
+0bbe : 3f80f7b4;
+0bbf : 085280f8;
+0bc0 : 723480f7;
+0bc1 : cc085280;
+0bc2 : 7234fa13;
+0bc3 : 80f7d408;
+0bc4 : 53537272;
+0bc5 : 3480f7bc;
+0bc6 : 08528072;
+0bc7 : 3480f7c4;
+0bc8 : 08527272;
+0bc9 : 3480f7a8;
+0bca : 08528072;
+0bcb : 3480f7a8;
+0bcc : 0852b872;
+0bcd : 34843d0d;
+0bce : 04ff3d0d;
+0bcf : 028f0533;
+0bd0 : 80f7ac08;
+0bd1 : 52527171;
+0bd2 : 34fe9d3f;
+0bd3 : 83e08008;
+0bd4 : 802ef638;
+0bd5 : 833d0d04;
+0bd6 : 803d0dfe;
+0bd7 : bc3f83e0;
+0bd8 : 80089038;
+0bd9 : ffbcec3f;
+0bda : feaf3f83;
+0bdb : e0800880;
+0bdc : 2ef23880;
+0bdd : f7ac0870;
+0bde : 337081ff;
+0bdf : 0683e080;
+0be0 : 0c515182;
+0be1 : 3d0d0480;
+0be2 : 3d0d80f7;
+0be3 : a40851a3;
+0be4 : 713480f7;
+0be5 : b00851ff;
+0be6 : 713480f7;
+0be7 : a80851a8;
+0be8 : 713480f7;
+0be9 : a80851b8;
+0bea : 7134823d;
+0beb : 0d04803d;
+0bec : 0d80f7a4;
+0bed : 08703370;
+0bee : 81c00670;
+0bef : 30708025;
+0bf0 : 83e0800c;
+0bf1 : 51515151;
+0bf2 : 823d0d04;
+0bf3 : ff3d0d80;
+0bf4 : f7a80852;
+0bf5 : 71337081;
+0bf6 : ff067083;
+0bf7 : 2a813270;
+0bf8 : 81065151;
+0bf9 : 51517080;
+0bfa : 2eea38b0;
+0bfb : 723480f7;
+0bfc : a80851b8;
+0bfd : 7134833d;
+0bfe : 0d04803d;
+0bff : 0d80f7f4;
+0c00 : 0873710c;
+0c01 : 51823d0d;
+0c02 : 04803d0d;
+0c03 : 80f7f008;
+0c04 : 73710c51;
+0c05 : 823d0d04;
+0c06 : 803d0d80;
+0c07 : f7dc0873;
+0c08 : 710c5182;
+0c09 : 3d0d0480;
+0c0a : 3d0d80f7;
+0c0b : dc085180;
+0c0c : 710c823d;
+0c0d : 0d04800b;
+0c0e : 83e3ec0c;
+0c0f : 800b83e3;
+0c10 : f80c0471;
+0c11 : 83e3ec0c;
+0c12 : 047183e3;
+0c13 : f80c0480;
+0c14 : 0b83e3ec;
+0c15 : 0c800b83;
+0c16 : e3f80c71;
+0c17 : 83e3f40c;
+0c18 : 04ff3d0d;
+0c19 : 75028405;
+0c1a : 8f053353;
+0c1b : 5183e3f4;
+0c1c : 08802e9a;
+0c1d : 38701010;
+0c1e : 11701010;
+0c1f : 101686b8;
+0c20 : c01183e3;
+0c21 : f0081555;
+0c22 : 51515171;
+0c23 : 7134833d;
+0c24 : 0d04fd3d;
+0c25 : 0d800b83;
+0c26 : e3ec0c83;
+0c27 : e3f80881;
+0c28 : 05547398;
+0c29 : 2ea33873;
+0c2a : 83e3f80c;
+0c2b : 805483e3;
+0c2c : f8085373;
+0c2d : 528051ff;
+0c2e : a83f8114;
+0c2f : 5473a82e;
+0c30 : 098106ea;
+0c31 : 38853d0d;
+0c32 : 04800b83;
+0c33 : e3f80c80;
+0c34 : 54dc39fe;
+0c35 : 3d0d7452;
+0c36 : 805380ff;
+0c37 : 72258838;
+0c38 : 810bff80;
+0c39 : 135353ff;
+0c3a : bf125199;
+0c3b : 7127a738;
+0c3c : ff9f1251;
+0c3d : 70992696;
+0c3e : 3872802e;
+0c3f : 85388180;
+0c40 : 12527181;
+0c41 : ff0683e0;
+0c42 : 800c843d;
+0c43 : 0d04d012;
+0c44 : 51708926;
+0c45 : 8638e012;
+0c46 : 52df39e0;
+0c47 : 12705351;
+0c48 : 8f7127d5;
+0c49 : 388052d1;
+0c4a : 39ff3d0d;
+0c4b : 73527189;
+0c4c : 26903890;
+0c4d : 12527181;
+0c4e : ff0683e0;
+0c4f : 800c833d;
+0c50 : 0d04f612;
+0c51 : 51708526;
+0c52 : ed389712;
 0c53 : 7081ff06;
-0c54 : 515283e7;
-0c55 : ec088a38;
-0c56 : 7183e080;
-0c57 : 0c853d0d;
-0c58 : 0471842a;
-0c59 : 5185fa3f;
-0c5a : 83e08008;
-0c5b : 5187853f;
-0c5c : 718f0651;
-0c5d : 85eb3f83;
-0c5e : e0800851;
-0c5f : 86f63f71;
-0c60 : 83e0800c;
-0c61 : 853d0d04;
-0c62 : 803d0d81;
-0c63 : ff51ff9d;
-0c64 : 3f83e080;
-0c65 : 0881ff06;
-0c66 : 83e0800c;
-0c67 : 823d0d04;
-0c68 : fe3d0d80;
-0c69 : fda80870;
-0c6a : 337081ff;
-0c6b : 0670842a;
-0c6c : 81328106;
-0c6d : 55515253;
-0c6e : 71802e8c;
-0c6f : 38a87334;
-0c70 : 80fda808;
-0c71 : 51b87134;
-0c72 : 7183e080;
-0c73 : 0c843d0d;
-0c74 : 04fe3d0d;
-0c75 : 80fda808;
-0c76 : 70337081;
-0c77 : ff067085;
-0c78 : 2a813281;
-0c79 : 06555152;
-0c7a : 5371802e;
-0c7b : 8c389873;
-0c7c : 3480fda8;
-0c7d : 0851b871;
-0c7e : 347183e0;
-0c7f : 800c843d;
-0c80 : 0d04803d;
-0c81 : 0d80fda4;
-0c82 : 08519371;
-0c83 : 3480fdb0;
-0c84 : 0851ff71;
-0c85 : 34823d0d;
-0c86 : 04fe3d0d;
-0c87 : 02930533;
-0c88 : 80fda408;
-0c89 : 53538072;
-0c8a : 348a51ff;
-0c8b : a5863fd2;
-0c8c : 3f80fdb4;
-0c8d : 085280f8;
-0c8e : 723480fd;
-0c8f : cc085280;
-0c90 : 7234fa13;
-0c91 : 80fdd408;
-0c92 : 53537272;
-0c93 : 3480fdbc;
-0c94 : 08528072;
-0c95 : 3480fdc4;
-0c96 : 08527272;
-0c97 : 3480fda8;
-0c98 : 08528072;
-0c99 : 3480fda8;
-0c9a : 0852b872;
-0c9b : 34843d0d;
-0c9c : 04ff3d0d;
-0c9d : 028f0533;
-0c9e : 80fdac08;
-0c9f : 52527171;
-0ca0 : 34fe9d3f;
-0ca1 : 83e08008;
-0ca2 : 802ef638;
-0ca3 : 833d0d04;
-0ca4 : 803d0dfe;
-0ca5 : bc3f83e0;
-0ca6 : 80089038;
-0ca7 : ffb5bb3f;
-0ca8 : feaf3f83;
-0ca9 : e0800880;
-0caa : 2ef23880;
-0cab : fdac0870;
-0cac : 337081ff;
-0cad : 0683e080;
-0cae : 0c515182;
-0caf : 3d0d0480;
-0cb0 : 3d0d80fd;
-0cb1 : a40851a3;
-0cb2 : 713480fd;
-0cb3 : b00851ff;
-0cb4 : 713480fd;
-0cb5 : a80851a8;
-0cb6 : 713480fd;
-0cb7 : a80851b8;
-0cb8 : 7134823d;
-0cb9 : 0d04803d;
-0cba : 0d80fda4;
-0cbb : 08703370;
-0cbc : 81c00670;
-0cbd : 30708025;
-0cbe : 83e0800c;
-0cbf : 51515151;
-0cc0 : 823d0d04;
-0cc1 : ff3d0d80;
-0cc2 : fda80852;
-0cc3 : 71337081;
-0cc4 : ff067083;
-0cc5 : 2a813270;
-0cc6 : 81065151;
-0cc7 : 51517080;
-0cc8 : 2eea38b0;
-0cc9 : 723480fd;
-0cca : a80851b8;
-0ccb : 7134833d;
-0ccc : 0d04803d;
-0ccd : 0d80fdf0;
-0cce : 0873710c;
-0ccf : 51823d0d;
-0cd0 : 04803d0d;
-0cd1 : 80fdec08;
-0cd2 : 73710c51;
-0cd3 : 823d0d04;
-0cd4 : 803d0d80;
-0cd5 : fdd80873;
-0cd6 : 710c5182;
-0cd7 : 3d0d0480;
-0cd8 : 3d0d80fd;
-0cd9 : d8085180;
-0cda : 710c823d;
-0cdb : 0d04800b;
-0cdc : 83e7f40c;
-0cdd : 800b83e8;
-0cde : 800c0471;
-0cdf : 83e7f40c;
-0ce0 : 047183e8;
-0ce1 : 800c0480;
-0ce2 : 0b83e7f4;
-0ce3 : 0c800b83;
-0ce4 : e8800c71;
-0ce5 : 83e7fc0c;
-0ce6 : 04ff3d0d;
-0ce7 : 75028405;
-0ce8 : 8f053353;
-0ce9 : 5183e7fc;
-0cea : 08802e9a;
-0ceb : 38701010;
-0cec : 11701010;
-0ced : 101686b8;
-0cee : c01183e7;
-0cef : f8081555;
-0cf0 : 51515171;
-0cf1 : 7134833d;
-0cf2 : 0d04fd3d;
-0cf3 : 0d800b83;
-0cf4 : e7f40c83;
-0cf5 : e8800881;
-0cf6 : 05547398;
-0cf7 : 2ea33873;
-0cf8 : 83e8800c;
-0cf9 : 805483e8;
-0cfa : 80085373;
-0cfb : 528051ff;
-0cfc : a83f8114;
-0cfd : 5473a82e;
-0cfe : 098106ea;
-0cff : 38853d0d;
-0d00 : 04800b83;
-0d01 : e8800c80;
-0d02 : 54dc39fe;
-0d03 : 3d0d7452;
-0d04 : 805380ff;
-0d05 : 72258838;
-0d06 : 810bff80;
-0d07 : 135353ff;
-0d08 : bf125199;
-0d09 : 7127a738;
-0d0a : ff9f1251;
-0d0b : 70992696;
-0d0c : 3872802e;
-0d0d : 85388180;
-0d0e : 12527181;
-0d0f : ff0683e0;
-0d10 : 800c843d;
-0d11 : 0d04d012;
-0d12 : 51708926;
-0d13 : 8638e012;
-0d14 : 52df39e0;
-0d15 : 12705351;
-0d16 : 8f7127d5;
-0d17 : 388052d1;
-0d18 : 39ff3d0d;
-0d19 : 73527189;
-0d1a : 26903890;
-0d1b : 12527181;
-0d1c : ff0683e0;
-0d1d : 800c833d;
-0d1e : 0d04f612;
-0d1f : 51708526;
-0d20 : ed389712;
-0d21 : 7081ff06;
-0d22 : 83e0800c;
-0d23 : 52833d0d;
-0d24 : 047183e7;
-0d25 : f80c04fc;
-0d26 : 3d0d7655;
-0d27 : 74708105;
-0d28 : 56335473;
-0d29 : 802e80c2;
-0d2a : 38738a2e;
-0d2b : b0387351;
-0d2c : fed93f83;
-0d2d : e8800853;
-0d2e : 83e7f408;
-0d2f : 5283e080;
-0d30 : 0881ff06;
-0d31 : 51fdd23f;
-0d32 : 83e7f408;
-0d33 : 810583e7;
-0d34 : f40c83e7;
-0d35 : f408a82e;
-0d36 : 098106c0;
-0d37 : 38fdeb3f;
-0d38 : 74708105;
-0d39 : 56335473;
-0d3a : c038800b;
-0d3b : 83e7f80c;
-0d3c : 863d0d04;
-0d3d : fd3d0d02;
-0d3e : 97053383;
-0d3f : e8800854;
-0d40 : 83e7f408;
-0d41 : 5351fd91;
-0d42 : 3f83e7f4;
-0d43 : 08810583;
-0d44 : e7f40c83;
-0d45 : e7f408a8;
-0d46 : 2e853885;
-0d47 : 3d0d04fd;
-0d48 : a93f853d;
-0d49 : 0d04fe3d;
-0d4a : 0d029205;
-0d4b : 22708c2a;
-0d4c : 5252fead;
-0d4d : 3f83e080;
-0d4e : 0881ff06;
-0d4f : 51ffb53f;
-0d50 : 719e8006;
-0d51 : 70882a52;
-0d52 : 53fe963f;
-0d53 : 83e08008;
-0d54 : 81ff0651;
-0d55 : ff9e3f71;
-0d56 : 81f00670;
-0d57 : 842a5253;
-0d58 : fdff3f83;
-0d59 : e0800881;
-0d5a : ff0651ff;
-0d5b : 873f718f;
-0d5c : 0651fded;
-0d5d : 3f83e080;
-0d5e : 0881ff06;
-0d5f : 51fef53f;
-0d60 : 800b83e7;
-0d61 : f80c843d;
-0d62 : 0d04fb3d;
-0d63 : 0d777956;
-0d64 : 56fcb73f;
-0d65 : 80752580;
-0d66 : fb387570;
-0d67 : 81055733;
-0d68 : 705254fc;
-0d69 : e63f83e8;
-0d6a : 80085383;
-0d6b : e7f40852;
-0d6c : 83e08008;
-0d6d : 81ff0651;
-0d6e : fbdf3f73;
-0d6f : 842a51fd;
-0d70 : a03f83e8;
-0d71 : 80085383;
-0d72 : e7f40810;
-0d73 : 94055283;
-0d74 : e0800881;
-0d75 : ff0651fb;
-0d76 : c03f738f;
-0d77 : 0651fd81;
-0d78 : 3f83e880;
-0d79 : 085383e7;
-0d7a : f4081095;
-0d7b : 055283e0;
-0d7c : 800881ff;
-0d7d : 0651fba1;
-0d7e : 3f83e7f4;
-0d7f : 08810583;
-0d80 : e7f40c83;
-0d81 : e7f4088a;
-0d82 : 2e9138ff;
-0d83 : 15557480;
-0d84 : 24ff8738;
-0d85 : fbb43f87;
-0d86 : 3d0d04fb;
-0d87 : ad3fff15;
-0d88 : 55ec39fb;
-0d89 : 3d0d7779;
-0d8a : 83e7f408;
-0d8b : 83fffe06;
-0d8c : 83e7f40c;
-0d8d : 56568075;
-0d8e : 2580e538;
-0d8f : 75708105;
-0d90 : 57337084;
-0d91 : 2a5254fc;
-0d92 : 983f83e8;
-0d93 : 80085383;
-0d94 : e7f40852;
-0d95 : 83e7f408;
-0d96 : 810583e7;
-0d97 : f40c83e0;
-0d98 : 800881ff;
-0d99 : 0651fab1;
-0d9a : 3f738f06;
-0d9b : 51fbf23f;
-0d9c : 83e88008;
-0d9d : 5383e7f4;
-0d9e : 085283e7;
-0d9f : f4088105;
-0da0 : 83e7f40c;
-0da1 : 83e08008;
-0da2 : 81ff0651;
-0da3 : fa8b3f83;
-0da4 : e7f408a8;
-0da5 : 2e8e38ff;
-0da6 : 15557480;
-0da7 : 24ff9d38;
-0da8 : 873d0d04;
-0da9 : faa43fff;
-0daa : 1555ef39;
-0dab : 83e08c08;
-0dac : 0283e08c;
-0dad : 0cfd3d0d;
-0dae : 805383e0;
-0daf : 8c088c05;
-0db0 : 085283e0;
-0db1 : 8c088805;
-0db2 : 085183d4;
-0db3 : 3f83e080;
-0db4 : 087083e0;
-0db5 : 800c5485;
-0db6 : 3d0d83e0;
-0db7 : 8c0c0483;
-0db8 : e08c0802;
-0db9 : 83e08c0c;
-0dba : fd3d0d81;
-0dbb : 5383e08c;
-0dbc : 088c0508;
-0dbd : 5283e08c;
-0dbe : 08880508;
-0dbf : 5183a13f;
-0dc0 : 83e08008;
-0dc1 : 7083e080;
-0dc2 : 0c54853d;
-0dc3 : 0d83e08c;
-0dc4 : 0c0483e0;
-0dc5 : 8c080283;
-0dc6 : e08c0cf9;
-0dc7 : 3d0d800b;
-0dc8 : 83e08c08;
-0dc9 : fc050c83;
-0dca : e08c0888;
-0dcb : 05088025;
-0dcc : b93883e0;
-0dcd : 8c088805;
-0dce : 083083e0;
-0dcf : 8c088805;
-0dd0 : 0c800b83;
-0dd1 : e08c08f4;
-0dd2 : 050c83e0;
-0dd3 : 8c08fc05;
-0dd4 : 088a3881;
-0dd5 : 0b83e08c;
-0dd6 : 08f4050c;
-0dd7 : 83e08c08;
-0dd8 : f4050883;
-0dd9 : e08c08fc;
-0dda : 050c83e0;
-0ddb : 8c088c05;
-0ddc : 088025b9;
-0ddd : 3883e08c;
-0dde : 088c0508;
-0ddf : 3083e08c;
-0de0 : 088c050c;
-0de1 : 800b83e0;
-0de2 : 8c08f005;
-0de3 : 0c83e08c;
-0de4 : 08fc0508;
-0de5 : 8a38810b;
-0de6 : 83e08c08;
-0de7 : f0050c83;
-0de8 : e08c08f0;
-0de9 : 050883e0;
-0dea : 8c08fc05;
-0deb : 0c805383;
-0dec : e08c088c;
-0ded : 05085283;
-0dee : e08c0888;
-0def : 05085181;
-0df0 : df3f83e0;
-0df1 : 80087083;
-0df2 : e08c08f8;
-0df3 : 050c5483;
-0df4 : e08c08fc;
-0df5 : 0508802e;
-0df6 : 903883e0;
-0df7 : 8c08f805;
-0df8 : 083083e0;
-0df9 : 8c08f805;
-0dfa : 0c83e08c;
-0dfb : 08f80508;
-0dfc : 7083e080;
-0dfd : 0c54893d;
-0dfe : 0d83e08c;
-0dff : 0c0483e0;
-0e00 : 8c080283;
-0e01 : e08c0cfb;
-0e02 : 3d0d800b;
-0e03 : 83e08c08;
-0e04 : fc050c83;
-0e05 : e08c0888;
-0e06 : 05088025;
-0e07 : 993883e0;
-0e08 : 8c088805;
-0e09 : 083083e0;
-0e0a : 8c088805;
-0e0b : 0c810b83;
-0e0c : e08c08fc;
-0e0d : 050c83e0;
-0e0e : 8c088c05;
-0e0f : 08802590;
-0e10 : 3883e08c;
-0e11 : 088c0508;
-0e12 : 3083e08c;
-0e13 : 088c050c;
-0e14 : 815383e0;
-0e15 : 8c088c05;
-0e16 : 085283e0;
-0e17 : 8c088805;
-0e18 : 0851bd3f;
-0e19 : 83e08008;
-0e1a : 7083e08c;
-0e1b : 08f8050c;
-0e1c : 5483e08c;
-0e1d : 08fc0508;
-0e1e : 802e9038;
-0e1f : 83e08c08;
-0e20 : f8050830;
-0e21 : 83e08c08;
-0e22 : f8050c83;
-0e23 : e08c08f8;
-0e24 : 05087083;
-0e25 : e0800c54;
-0e26 : 873d0d83;
-0e27 : e08c0c04;
-0e28 : 83e08c08;
-0e29 : 0283e08c;
-0e2a : 0cfd3d0d;
-0e2b : 810b83e0;
-0e2c : 8c08fc05;
-0e2d : 0c800b83;
-0e2e : e08c08f8;
-0e2f : 050c83e0;
-0e30 : 8c088c05;
-0e31 : 0883e08c;
-0e32 : 08880508;
-0e33 : 27b93883;
-0e34 : e08c08fc;
-0e35 : 0508802e;
-0e36 : ae38800b;
-0e37 : 83e08c08;
-0e38 : 8c050824;
-0e39 : a23883e0;
-0e3a : 8c088c05;
-0e3b : 081083e0;
-0e3c : 8c088c05;
-0e3d : 0c83e08c;
-0e3e : 08fc0508;
-0e3f : 1083e08c;
-0e40 : 08fc050c;
-0e41 : ffb83983;
-0e42 : e08c08fc;
-0e43 : 0508802e;
-0e44 : 80e13883;
-0e45 : e08c088c;
-0e46 : 050883e0;
-0e47 : 8c088805;
-0e48 : 0826ad38;
-0e49 : 83e08c08;
-0e4a : 88050883;
-0e4b : e08c088c;
-0e4c : 05083183;
-0e4d : e08c0888;
-0e4e : 050c83e0;
-0e4f : 8c08f805;
-0e50 : 0883e08c;
-0e51 : 08fc0508;
-0e52 : 0783e08c;
-0e53 : 08f8050c;
-0e54 : 83e08c08;
-0e55 : fc050881;
-0e56 : 2a83e08c;
-0e57 : 08fc050c;
-0e58 : 83e08c08;
-0e59 : 8c050881;
-0e5a : 2a83e08c;
-0e5b : 088c050c;
-0e5c : ff953983;
-0e5d : e08c0890;
-0e5e : 0508802e;
-0e5f : 933883e0;
-0e60 : 8c088805;
-0e61 : 087083e0;
-0e62 : 8c08f405;
-0e63 : 0c519139;
-0e64 : 83e08c08;
-0e65 : f8050870;
-0e66 : 83e08c08;
-0e67 : f4050c51;
-0e68 : 83e08c08;
-0e69 : f4050883;
-0e6a : e0800c85;
-0e6b : 3d0d83e0;
-0e6c : 8c0c0483;
-0e6d : e08c0802;
-0e6e : 83e08c0c;
-0e6f : ff3d0d80;
-0e70 : 0b83e08c;
-0e71 : 08fc050c;
-0e72 : 83e08c08;
-0e73 : 88050881;
-0e74 : 06ff1170;
-0e75 : 097083e0;
-0e76 : 8c088c05;
-0e77 : 080683e0;
-0e78 : 8c08fc05;
-0e79 : 081183e0;
-0e7a : 8c08fc05;
-0e7b : 0c83e08c;
-0e7c : 08880508;
-0e7d : 812a83e0;
-0e7e : 8c088805;
-0e7f : 0c83e08c;
-0e80 : 088c0508;
-0e81 : 1083e08c;
-0e82 : 088c050c;
-0e83 : 51515151;
-0e84 : 83e08c08;
-0e85 : 88050880;
-0e86 : 2e8438ff;
-0e87 : ab3983e0;
-0e88 : 8c08fc05;
-0e89 : 087083e0;
-0e8a : 800c5183;
-0e8b : 3d0d83e0;
-0e8c : 8c0c04fc;
-0e8d : 3d0d7670;
-0e8e : 797b5555;
-0e8f : 55558f72;
-0e90 : 278c3872;
-0e91 : 75078306;
-0e92 : 5170802e;
-0e93 : a938ff12;
-0e94 : 5271ff2e;
-0e95 : 98387270;
-0e96 : 81055433;
-0e97 : 74708105;
-0e98 : 5634ff12;
-0e99 : 5271ff2e;
-0e9a : 098106ea;
-0e9b : 387483e0;
-0e9c : 800c863d;
-0e9d : 0d047451;
-0e9e : 72708405;
-0e9f : 54087170;
-0ea0 : 8405530c;
-0ea1 : 72708405;
-0ea2 : 54087170;
-0ea3 : 8405530c;
-0ea4 : 72708405;
-0ea5 : 54087170;
-0ea6 : 8405530c;
-0ea7 : 72708405;
-0ea8 : 54087170;
-0ea9 : 8405530c;
-0eaa : f0125271;
-0eab : 8f26c938;
-0eac : 83722795;
-0ead : 38727084;
-0eae : 05540871;
-0eaf : 70840553;
-0eb0 : 0cfc1252;
-0eb1 : 718326ed;
-0eb2 : 387054ff;
-0eb3 : 81390000;
-0eb4 : 00ffffff;
-0eb5 : ff00ffff;
-0eb6 : ffff00ff;
-0eb7 : ffffff00;
-0eb8 : 70707042;
-0eb9 : 409c0202;
-0eba : 02020202;
-0ebb : 02020202;
-0ebc : 02020202;
-0ebd : 02020202;
-0ebe : 02020202;
-0ebf : 02704100;
-0ec0 : 06000000;
-0ec1 : 70707042;
-0ec2 : 409c0202;
-0ec3 : 02020202;
-0ec4 : 02020202;
-0ec5 : 02020202;
-0ec6 : 02020202;
-0ec7 : 02020202;
-0ec8 : 02704100;
-0ec9 : 9c000000;
-0eca : 2f000000;
-0ecb : 4f70656e;
-0ecc : 696e673a;
-0ecd : 00000000;
-0ece : 6661696c;
-0ecf : 0a000000;
-0ed0 : 6f6b0a00;
-0ed1 : 436f756c;
-0ed2 : 64206e6f;
-0ed3 : 74207265;
-0ed4 : 61642068;
-0ed5 : 65616465;
-0ed6 : 720a0000;
-0ed7 : 556e6b6e;
-0ed8 : 6f776e20;
-0ed9 : 66696c65;
-0eda : 20747970;
-0edb : 65000000;
-0edc : 41545220;
-0edd : 00000000;
-0ede : 58442000;
-0edf : 300a0000;
-0ee0 : 58464420;
-0ee1 : 00000000;
-0ee2 : 42414420;
-0ee3 : 73656374;
-0ee4 : 6f722073;
-0ee5 : 697a6500;
-0ee6 : 4d442000;
-0ee7 : 58455820;
-0ee8 : 00000000;
-0ee9 : 53442000;
-0eea : 44442000;
-0eeb : 44495220;
-0eec : 00000000;
-0eed : 6f70656e;
-0eee : 64697220;
-0eef : 6661696c;
-0ef0 : 65640a00;
-0ef1 : 426f6f74;
-0ef2 : 696e672e;
-0ef3 : 2e2e0000;
-0ef4 : 53797374;
-0ef5 : 656d2073;
-0ef6 : 65747469;
-0ef7 : 6e67730a;
-0ef8 : 00000000;
-0ef9 : 2d2d2d2d;
-0efa : 2d2d2d2d;
-0efb : 2d2d2d2d;
-0efc : 2d2d2d0a;
-0efd : 00000000;
-0efe : 4d656d6f;
-0eff : 72793a00;
-0f00 : 556e6b6e;
-0f01 : 6f776e00;
-0f02 : 524f4d20;
-0f03 : 62616e6b;
-0f04 : 3a000000;
-0f05 : 53706565;
-0f06 : 643a0000;
-0f07 : 204b487a;
-0f08 : 0a44313a;
-0f09 : 00000000;
-0f0a : 0a44323a;
-0f0b : 00000000;
-0f0c : 0a44333a;
-0f0d : 00000000;
-0f0e : 0a44343a;
-0f0f : 00000000;
-0f10 : 0a526562;
-0f11 : 6f6f7400;
-0f12 : 0a457869;
-0f13 : 74000000;
-0f14 : 3332304b;
-0f15 : 69422052;
-0f16 : 616d626f;
-0f17 : 00000000;
-0f18 : 30202864;
-0f19 : 65666175;
-0f1a : 6c743a58;
-0f1b : 4c290000;
-0f1c : 31202864;
-0f1d : 65666175;
-0f1e : 6c743a58;
-0f1f : 4c202b20;
-0f20 : 68692073;
-0f21 : 70656564;
-0f22 : 29000000;
-0f23 : 3332304b;
-0f24 : 69422043;
-0f25 : 6f6d7079;
-0f26 : 2053686f;
-0f27 : 70000000;
-0f28 : 36344b69;
-0f29 : 42000000;
-0f2a : 3132384b;
-0f2b : 69420000;
-0f2c : 32202864;
-0f2d : 65666175;
-0f2e : 6c743a55;
-0f2f : 6c74696d;
-0f30 : 6f6e2900;
-0f31 : 33202864;
-0f32 : 65666175;
-0f33 : 6c743a4f;
-0f34 : 53204220;
-0f35 : 2b206869;
-0f36 : 20737065;
-0f37 : 65642900;
-0f38 : 636d643a;
-0f39 : 00000000;
-0f3a : 45525220;
-0f3b : 00000000;
-0f3c : 53504453;
-0f3d : 00000000;
-0f3e : 53504446;
-0f3f : 00000000;
-0f40 : 2873656e;
-0f41 : 643a0000;
-0f42 : 3a63686b;
-0f43 : 3a000000;
-0f44 : 73646361;
-0f45 : 72640a00;
-0f46 : 6469736b;
-0f47 : 5f696e69;
-0f48 : 743a0000;
-0f49 : 6d6f756e;
-0f4a : 743a0000;
-0f4b : 6f70656e;
-0f4c : 6469723a;
-0f4d : 00000000;
-0f4e : 424f4f54;
-0f4f : 2e415452;
-0f50 : 00000000;
-0f51 : 61746172;
-0f52 : 69726f6d;
-0f53 : 2e62696e;
-0f54 : 00000000;
-0f55 : 53746174;
-0f56 : 3a000000;
-0f57 : 3a646f6e;
-0f58 : 650a0000;
-0f59 : 53656374;
-0f5a : 6f723a00;
-0f5b : 20726563;
-0f5c : 65697665;
-0f5d : 3a000000;
-0f5e : 2073656e;
-0f5f : 64696e67;
-0f60 : 0a000000;
-0f61 : 64617461;
-0f62 : 20000000;
-0f63 : 626f6f74;
-0f64 : 20000000;
-0f65 : 6e616d65;
-0f66 : 20000000;
-0f67 : 6e756d74;
-0f68 : 6f627566;
-0f69 : 66657220;
-0f6a : 00000000;
-0f6b : 00000000;
-0f6c : 00000000;
-0f6d : 72025f07;
-0f6e : f807a900;
-0f6f : 8d04038d;
-0f70 : 4402a907;
-0f71 : 8d0503a9;
-0f72 : 708d0a03;
-0f73 : a9018d0b;
-0f74 : 03850960;
-0f75 : 7d8a4820;
-0f76 : 53e488d0;
-0f77 : fa68aa8c;
-0f78 : 8e07ad7d;
-0f79 : 07ee8e07;
-0f7a : 60a9938d;
-0f7b : e202a907;
-0f7c : 8de302a2;
-0f7d : 0220da07;
-0f7e : 954320da;
-0f7f : 07954435;
-0f80 : 43c9fff0;
-0f81 : f0caca10;
-0f82 : ec3006e6;
-0f83 : 45d002e6;
-0f84 : 4620da07;
-0f85 : a2018144;
-0f86 : b545d543;
-0f87 : d0edca10;
-0f88 : f720d207;
-0f89 : 4c9407a9;
-0f8a : 038d0fd2;
-0f8b : 6ce202ad;
-0f8c : 8e07cd7f;
-0f8d : 07d0abee;
-0f8e : 0a03d003;
-0f8f : ee0b03ad;
-0f90 : 7d070d7e;
-0f91 : 07d08e20;
-0f92 : d2076ce0;
-0f93 : 0220da07;
-0f94 : 8de00220;
-0f95 : da078de1;
-0f96 : 022de002;
-0f97 : c9fff0ed;
-0f98 : a9008d8e;
-0f99 : 07f08200;
-0f9a : 0001d20f;
-0f9b : 0001d400;
-0f9c : 0001d401;
-0f9d : 0001d409;
-0f9e : 0001d010;
-0f9f : 0001d301;
-0fa0 : 0001d300;
-0fa1 : 0001d20a;
-0fa2 : 0001d01b;
-0fa3 : 0001d018;
-0fa4 : 0001d017;
-0fa5 : 0001d01a;
-0fa6 : 0001d403;
-0fa7 : 0001d402;
-0fa8 : 0001d40e;
-0fa9 : 0004007c;
-0faa : 00040078;
-0fab : 00040074;
-0fac : 00040068;
-0fad : 00040060;
-0fae : 0004005c;
-0faf : 00040058;
-0fb0 : 00040054;
-0fb1 : 00040050;
-0fb2 : 0004004c;
-0fb3 : 00040048;
-0fb4 : 00040044;
-0fb5 : 00040040;
-0fb6 : 00040028;
-0fb7 : 00040024;
-0fb8 : 00040020;
-0fb9 : 0004001c;
-0fba : 00040018;
-0fbb : 00040014;
-0fbc : 00040010;
-0fbd : 0004000c;
-0fbe : 00040008;
-0fbf : 00040004;
-0fc0 : 00040000;
+0c54 : 83e0800c;
+0c55 : 52833d0d;
+0c56 : 047183e3;
+0c57 : f00c04fc;
+0c58 : 3d0d7655;
+0c59 : 74708105;
+0c5a : 56335473;
+0c5b : 802e80c2;
+0c5c : 38738a2e;
+0c5d : b0387351;
+0c5e : fed93f83;
+0c5f : e3f80853;
+0c60 : 83e3ec08;
+0c61 : 5283e080;
+0c62 : 0881ff06;
+0c63 : 51fdd23f;
+0c64 : 83e3ec08;
+0c65 : 810583e3;
+0c66 : ec0c83e3;
+0c67 : ec08a82e;
+0c68 : 098106c0;
+0c69 : 38fdeb3f;
+0c6a : 74708105;
+0c6b : 56335473;
+0c6c : c038800b;
+0c6d : 83e3f00c;
+0c6e : 863d0d04;
+0c6f : fd3d0d02;
+0c70 : 97053383;
+0c71 : e3f80854;
+0c72 : 83e3ec08;
+0c73 : 5351fd91;
+0c74 : 3f83e3ec;
+0c75 : 08810583;
+0c76 : e3ec0c83;
+0c77 : e3ec08a8;
+0c78 : 2e853885;
+0c79 : 3d0d04fd;
+0c7a : a93f853d;
+0c7b : 0d04fe3d;
+0c7c : 0d029205;
+0c7d : 22708c2a;
+0c7e : 5252fead;
+0c7f : 3f83e080;
+0c80 : 0881ff06;
+0c81 : 51ffb53f;
+0c82 : 719e8006;
+0c83 : 70882a52;
+0c84 : 53fe963f;
+0c85 : 83e08008;
+0c86 : 81ff0651;
+0c87 : ff9e3f71;
+0c88 : 81f00670;
+0c89 : 842a5253;
+0c8a : fdff3f83;
+0c8b : e0800881;
+0c8c : ff0651ff;
+0c8d : 873f718f;
+0c8e : 0651fded;
+0c8f : 3f83e080;
+0c90 : 0881ff06;
+0c91 : 51fef53f;
+0c92 : 800b83e3;
+0c93 : f00c843d;
+0c94 : 0d04fb3d;
+0c95 : 0d777956;
+0c96 : 56fcb73f;
+0c97 : 80752580;
+0c98 : fb387570;
+0c99 : 81055733;
+0c9a : 705254fc;
+0c9b : e63f83e3;
+0c9c : f8085383;
+0c9d : e3ec0852;
+0c9e : 83e08008;
+0c9f : 81ff0651;
+0ca0 : fbdf3f73;
+0ca1 : 842a51fd;
+0ca2 : a03f83e3;
+0ca3 : f8085383;
+0ca4 : e3ec0810;
+0ca5 : 94055283;
+0ca6 : e0800881;
+0ca7 : ff0651fb;
+0ca8 : c03f738f;
+0ca9 : 0651fd81;
+0caa : 3f83e3f8;
+0cab : 085383e3;
+0cac : ec081095;
+0cad : 055283e0;
+0cae : 800881ff;
+0caf : 0651fba1;
+0cb0 : 3f83e3ec;
+0cb1 : 08810583;
+0cb2 : e3ec0c83;
+0cb3 : e3ec088a;
+0cb4 : 2e9138ff;
+0cb5 : 15557480;
+0cb6 : 24ff8738;
+0cb7 : fbb43f87;
+0cb8 : 3d0d04fb;
+0cb9 : ad3fff15;
+0cba : 55ec39fb;
+0cbb : 3d0d7779;
+0cbc : 83e3ec08;
+0cbd : 83fffe06;
+0cbe : 83e3ec0c;
+0cbf : 56568075;
+0cc0 : 2580e538;
+0cc1 : 75708105;
+0cc2 : 57337084;
+0cc3 : 2a5254fc;
+0cc4 : 983f83e3;
+0cc5 : f8085383;
+0cc6 : e3ec0852;
+0cc7 : 83e3ec08;
+0cc8 : 810583e3;
+0cc9 : ec0c83e0;
+0cca : 800881ff;
+0ccb : 0651fab1;
+0ccc : 3f738f06;
+0ccd : 51fbf23f;
+0cce : 83e3f808;
+0ccf : 5383e3ec;
+0cd0 : 085283e3;
+0cd1 : ec088105;
+0cd2 : 83e3ec0c;
+0cd3 : 83e08008;
+0cd4 : 81ff0651;
+0cd5 : fa8b3f83;
+0cd6 : e3ec08a8;
+0cd7 : 2e8e38ff;
+0cd8 : 15557480;
+0cd9 : 24ff9d38;
+0cda : 873d0d04;
+0cdb : faa43fff;
+0cdc : 1555ef39;
+0cdd : 83e08c08;
+0cde : 0283e08c;
+0cdf : 0cfd3d0d;
+0ce0 : 805383e0;
+0ce1 : 8c088c05;
+0ce2 : 085283e0;
+0ce3 : 8c088805;
+0ce4 : 085183d4;
+0ce5 : 3f83e080;
+0ce6 : 087083e0;
+0ce7 : 800c5485;
+0ce8 : 3d0d83e0;
+0ce9 : 8c0c0483;
+0cea : e08c0802;
+0ceb : 83e08c0c;
+0cec : fd3d0d81;
+0ced : 5383e08c;
+0cee : 088c0508;
+0cef : 5283e08c;
+0cf0 : 08880508;
+0cf1 : 5183a13f;
+0cf2 : 83e08008;
+0cf3 : 7083e080;
+0cf4 : 0c54853d;
+0cf5 : 0d83e08c;
+0cf6 : 0c0483e0;
+0cf7 : 8c080283;
+0cf8 : e08c0cf9;
+0cf9 : 3d0d800b;
+0cfa : 83e08c08;
+0cfb : fc050c83;
+0cfc : e08c0888;
+0cfd : 05088025;
+0cfe : b93883e0;
+0cff : 8c088805;
+0d00 : 083083e0;
+0d01 : 8c088805;
+0d02 : 0c800b83;
+0d03 : e08c08f4;
+0d04 : 050c83e0;
+0d05 : 8c08fc05;
+0d06 : 088a3881;
+0d07 : 0b83e08c;
+0d08 : 08f4050c;
+0d09 : 83e08c08;
+0d0a : f4050883;
+0d0b : e08c08fc;
+0d0c : 050c83e0;
+0d0d : 8c088c05;
+0d0e : 088025b9;
+0d0f : 3883e08c;
+0d10 : 088c0508;
+0d11 : 3083e08c;
+0d12 : 088c050c;
+0d13 : 800b83e0;
+0d14 : 8c08f005;
+0d15 : 0c83e08c;
+0d16 : 08fc0508;
+0d17 : 8a38810b;
+0d18 : 83e08c08;
+0d19 : f0050c83;
+0d1a : e08c08f0;
+0d1b : 050883e0;
+0d1c : 8c08fc05;
+0d1d : 0c805383;
+0d1e : e08c088c;
+0d1f : 05085283;
+0d20 : e08c0888;
+0d21 : 05085181;
+0d22 : df3f83e0;
+0d23 : 80087083;
+0d24 : e08c08f8;
+0d25 : 050c5483;
+0d26 : e08c08fc;
+0d27 : 0508802e;
+0d28 : 903883e0;
+0d29 : 8c08f805;
+0d2a : 083083e0;
+0d2b : 8c08f805;
+0d2c : 0c83e08c;
+0d2d : 08f80508;
+0d2e : 7083e080;
+0d2f : 0c54893d;
+0d30 : 0d83e08c;
+0d31 : 0c0483e0;
+0d32 : 8c080283;
+0d33 : e08c0cfb;
+0d34 : 3d0d800b;
+0d35 : 83e08c08;
+0d36 : fc050c83;
+0d37 : e08c0888;
+0d38 : 05088025;
+0d39 : 993883e0;
+0d3a : 8c088805;
+0d3b : 083083e0;
+0d3c : 8c088805;
+0d3d : 0c810b83;
+0d3e : e08c08fc;
+0d3f : 050c83e0;
+0d40 : 8c088c05;
+0d41 : 08802590;
+0d42 : 3883e08c;
+0d43 : 088c0508;
+0d44 : 3083e08c;
+0d45 : 088c050c;
+0d46 : 815383e0;
+0d47 : 8c088c05;
+0d48 : 085283e0;
+0d49 : 8c088805;
+0d4a : 0851bd3f;
+0d4b : 83e08008;
+0d4c : 7083e08c;
+0d4d : 08f8050c;
+0d4e : 5483e08c;
+0d4f : 08fc0508;
+0d50 : 802e9038;
+0d51 : 83e08c08;
+0d52 : f8050830;
+0d53 : 83e08c08;
+0d54 : f8050c83;
+0d55 : e08c08f8;
+0d56 : 05087083;
+0d57 : e0800c54;
+0d58 : 873d0d83;
+0d59 : e08c0c04;
+0d5a : 83e08c08;
+0d5b : 0283e08c;
+0d5c : 0cfd3d0d;
+0d5d : 810b83e0;
+0d5e : 8c08fc05;
+0d5f : 0c800b83;
+0d60 : e08c08f8;
+0d61 : 050c83e0;
+0d62 : 8c088c05;
+0d63 : 0883e08c;
+0d64 : 08880508;
+0d65 : 27b93883;
+0d66 : e08c08fc;
+0d67 : 0508802e;
+0d68 : ae38800b;
+0d69 : 83e08c08;
+0d6a : 8c050824;
+0d6b : a23883e0;
+0d6c : 8c088c05;
+0d6d : 081083e0;
+0d6e : 8c088c05;
+0d6f : 0c83e08c;
+0d70 : 08fc0508;
+0d71 : 1083e08c;
+0d72 : 08fc050c;
+0d73 : ffb83983;
+0d74 : e08c08fc;
+0d75 : 0508802e;
+0d76 : 80e13883;
+0d77 : e08c088c;
+0d78 : 050883e0;
+0d79 : 8c088805;
+0d7a : 0826ad38;
+0d7b : 83e08c08;
+0d7c : 88050883;
+0d7d : e08c088c;
+0d7e : 05083183;
+0d7f : e08c0888;
+0d80 : 050c83e0;
+0d81 : 8c08f805;
+0d82 : 0883e08c;
+0d83 : 08fc0508;
+0d84 : 0783e08c;
+0d85 : 08f8050c;
+0d86 : 83e08c08;
+0d87 : fc050881;
+0d88 : 2a83e08c;
+0d89 : 08fc050c;
+0d8a : 83e08c08;
+0d8b : 8c050881;
+0d8c : 2a83e08c;
+0d8d : 088c050c;
+0d8e : ff953983;
+0d8f : e08c0890;
+0d90 : 0508802e;
+0d91 : 933883e0;
+0d92 : 8c088805;
+0d93 : 087083e0;
+0d94 : 8c08f405;
+0d95 : 0c519139;
+0d96 : 83e08c08;
+0d97 : f8050870;
+0d98 : 83e08c08;
+0d99 : f4050c51;
+0d9a : 83e08c08;
+0d9b : f4050883;
+0d9c : e0800c85;
+0d9d : 3d0d83e0;
+0d9e : 8c0c0483;
+0d9f : e08c0802;
+0da0 : 83e08c0c;
+0da1 : ff3d0d80;
+0da2 : 0b83e08c;
+0da3 : 08fc050c;
+0da4 : 83e08c08;
+0da5 : 88050881;
+0da6 : 06ff1170;
+0da7 : 097083e0;
+0da8 : 8c088c05;
+0da9 : 080683e0;
+0daa : 8c08fc05;
+0dab : 081183e0;
+0dac : 8c08fc05;
+0dad : 0c83e08c;
+0dae : 08880508;
+0daf : 812a83e0;
+0db0 : 8c088805;
+0db1 : 0c83e08c;
+0db2 : 088c0508;
+0db3 : 1083e08c;
+0db4 : 088c050c;
+0db5 : 51515151;
+0db6 : 83e08c08;
+0db7 : 88050880;
+0db8 : 2e8438ff;
+0db9 : ab3983e0;
+0dba : 8c08fc05;
+0dbb : 087083e0;
+0dbc : 800c5183;
+0dbd : 3d0d83e0;
+0dbe : 8c0c04fc;
+0dbf : 3d0d7670;
+0dc0 : 797b5555;
+0dc1 : 55558f72;
+0dc2 : 278c3872;
+0dc3 : 75078306;
+0dc4 : 5170802e;
+0dc5 : a938ff12;
+0dc6 : 5271ff2e;
+0dc7 : 98387270;
+0dc8 : 81055433;
+0dc9 : 74708105;
+0dca : 5634ff12;
+0dcb : 5271ff2e;
+0dcc : 098106ea;
+0dcd : 387483e0;
+0dce : 800c863d;
+0dcf : 0d047451;
+0dd0 : 72708405;
+0dd1 : 54087170;
+0dd2 : 8405530c;
+0dd3 : 72708405;
+0dd4 : 54087170;
+0dd5 : 8405530c;
+0dd6 : 72708405;
+0dd7 : 54087170;
+0dd8 : 8405530c;
+0dd9 : 72708405;
+0dda : 54087170;
+0ddb : 8405530c;
+0ddc : f0125271;
+0ddd : 8f26c938;
+0dde : 83722795;
+0ddf : 38727084;
+0de0 : 05540871;
+0de1 : 70840553;
+0de2 : 0cfc1252;
+0de3 : 718326ed;
+0de4 : 387054ff;
+0de5 : 81390000;
+0de6 : 00ffffff;
+0de7 : ff00ffff;
+0de8 : ffff00ff;
+0de9 : ffffff00;
+0dea : 70707042;
+0deb : 409c0202;
+0dec : 02020202;
+0ded : 02020202;
+0dee : 02020202;
+0def : 02020202;
+0df0 : 02020202;
+0df1 : 02704100;
+0df2 : 9c000000;
+0df3 : 0000175d;
+0df4 : 00001754;
+0df5 : 0000174b;
+0df6 : 00001742;
+0df7 : 00001739;
+0df8 : 00001730;
+0df9 : 00001727;
+0dfa : 000011b0;
+0dfb : 2f000000;
+0dfc : 4f70656e;
+0dfd : 696e673a;
+0dfe : 00000000;
+0dff : 6661696c;
+0e00 : 0a000000;
+0e01 : 6f6b0a00;
+0e02 : 436f756c;
+0e03 : 64206e6f;
+0e04 : 74207265;
+0e05 : 61642068;
+0e06 : 65616465;
+0e07 : 720a0000;
+0e08 : 556e6b6e;
+0e09 : 6f776e20;
+0e0a : 66696c65;
+0e0b : 20747970;
+0e0c : 65000000;
+0e0d : 41545220;
+0e0e : 00000000;
+0e0f : 58442000;
+0e10 : 300a0000;
+0e11 : 58464420;
+0e12 : 00000000;
+0e13 : 42414420;
+0e14 : 73656374;
+0e15 : 6f722073;
+0e16 : 697a6500;
+0e17 : 4d442000;
+0e18 : 58455820;
+0e19 : 00000000;
+0e1a : 53442000;
+0e1b : 44442000;
+0e1c : 44495220;
+0e1d : 00000000;
+0e1e : 6f70656e;
+0e1f : 64697220;
+0e20 : 6661696c;
+0e21 : 65640a00;
+0e22 : 426f6f74;
+0e23 : 696e672e;
+0e24 : 2e2e0000;
+0e25 : 53797374;
+0e26 : 656d2073;
+0e27 : 65747469;
+0e28 : 6e67730a;
+0e29 : 00000000;
+0e2a : 2d2d2d2d;
+0e2b : 2d2d2d2d;
+0e2c : 2d2d2d2d;
+0e2d : 2d2d2d0a;
+0e2e : 00000000;
+0e2f : 4d656d6f;
+0e30 : 72793a00;
+0e31 : 344d4221;
+0e32 : 00000000;
+0e33 : 524f4d20;
+0e34 : 62616e6b;
+0e35 : 3a000000;
+0e36 : 556e6b6e;
+0e37 : 6f776e00;
+0e38 : 53706565;
+0e39 : 643a0000;
+0e3a : 204b487a;
+0e3b : 0a44313a;
+0e3c : 00000000;
+0e3d : 0a44323a;
+0e3e : 00000000;
+0e3f : 0a44333a;
+0e40 : 00000000;
+0e41 : 0a44343a;
+0e42 : 00000000;
+0e43 : 0a526562;
+0e44 : 6f6f7400;
+0e45 : 0a457869;
+0e46 : 74000000;
+0e47 : 34202864;
+0e48 : 65666175;
+0e49 : 6c743a4f;
+0e4a : 53204220;
+0e4b : 2b206869;
+0e4c : 20737065;
+0e4d : 65642900;
+0e4e : 32202864;
+0e4f : 65666175;
+0e50 : 6c743a58;
+0e51 : 4c202b20;
+0e52 : 68692073;
+0e53 : 70656564;
+0e54 : 29000000;
+0e55 : 31202864;
+0e56 : 65666175;
+0e57 : 6c743a58;
+0e58 : 4c290000;
+0e59 : 33202864;
+0e5a : 65666175;
+0e5b : 6c743a55;
+0e5c : 6c74696d;
+0e5d : 6f6e2900;
+0e5e : 31303838;
+0e5f : 4b694220;
+0e60 : 52616d62;
+0e61 : 6f000000;
+0e62 : 3537364b;
+0e63 : 69422052;
+0e64 : 616d626f;
+0e65 : 00000000;
+0e66 : 3537364b;
+0e67 : 69422043;
+0e68 : 6f6d7079;
+0e69 : 2053686f;
+0e6a : 70000000;
+0e6b : 3332304b;
+0e6c : 69422052;
+0e6d : 616d626f;
+0e6e : 00000000;
+0e6f : 3332304b;
+0e70 : 69422043;
+0e71 : 6f6d7079;
+0e72 : 2053686f;
+0e73 : 70000000;
+0e74 : 3132384b;
+0e75 : 69420000;
+0e76 : 36344b69;
+0e77 : 42000000;
+0e78 : 636d643a;
+0e79 : 00000000;
+0e7a : 45525220;
+0e7b : 00000000;
+0e7c : 53504453;
+0e7d : 00000000;
+0e7e : 53504446;
+0e7f : 00000000;
+0e80 : 2873656e;
+0e81 : 643a0000;
+0e82 : 3a63686b;
+0e83 : 3a000000;
+0e84 : 73646361;
+0e85 : 72640a00;
+0e86 : 6469736b;
+0e87 : 5f696e69;
+0e88 : 743a0000;
+0e89 : 6d6f756e;
+0e8a : 743a0000;
+0e8b : 6f70656e;
+0e8c : 6469723a;
+0e8d : 00000000;
+0e8e : 424f4f54;
+0e8f : 2e415452;
+0e90 : 00000000;
+0e91 : 61746172;
+0e92 : 69726f6d;
+0e93 : 2e62696e;
+0e94 : 00000000;
+0e95 : 53746174;
+0e96 : 3a000000;
+0e97 : 3a646f6e;
+0e98 : 650a0000;
+0e99 : 53656374;
+0e9a : 6f723a00;
+0e9b : 20726563;
+0e9c : 65697665;
+0e9d : 3a000000;
+0e9e : 2073656e;
+0e9f : 64696e67;
+0ea0 : 0a000000;
+0ea1 : 64617461;
+0ea2 : 20000000;
+0ea3 : 626f6f74;
+0ea4 : 20000000;
+0ea5 : 6e616d65;
+0ea6 : 20000000;
+0ea7 : 6e756d74;
+0ea8 : 6f627566;
+0ea9 : 66657220;
+0eaa : 00000000;
+0eab : 00000000;
+0eac : 00000000;
+0ead : 72025f07;
+0eae : f807a900;
+0eaf : 8d04038d;
+0eb0 : 4402a907;
+0eb1 : 8d0503a9;
+0eb2 : 708d0a03;
+0eb3 : a9018d0b;
+0eb4 : 03850960;
+0eb5 : 7d8a4820;
+0eb6 : 53e488d0;
+0eb7 : fa68aa8c;
+0eb8 : 8e07ad7d;
+0eb9 : 07ee8e07;
+0eba : 60a9938d;
+0ebb : e202a907;
+0ebc : 8de302a2;
+0ebd : 0220da07;
+0ebe : 954320da;
+0ebf : 07954435;
+0ec0 : 43c9fff0;
+0ec1 : f0caca10;
+0ec2 : ec3006e6;
+0ec3 : 45d002e6;
+0ec4 : 4620da07;
+0ec5 : a2018144;
+0ec6 : b545d543;
+0ec7 : d0edca10;
+0ec8 : f720d207;
+0ec9 : 4c9407a9;
+0eca : 038d0fd2;
+0ecb : 6ce202ad;
+0ecc : 8e07cd7f;
+0ecd : 07d0abee;
+0ece : 0a03d003;
+0ecf : ee0b03ad;
+0ed0 : 7d070d7e;
+0ed1 : 07d08e20;
+0ed2 : d2076ce0;
+0ed3 : 0220da07;
+0ed4 : 8de00220;
+0ed5 : da078de1;
+0ed6 : 022de002;
+0ed7 : c9fff0ed;
+0ed8 : a9008d8e;
+0ed9 : 07f08200;
+0eda : 0001d20f;
+0edb : 0001d400;
+0edc : 0001d401;
+0edd : 0001d409;
+0ede : 0001d010;
+0edf : 0001d301;
+0ee0 : 0001d300;
+0ee1 : 0001d20a;
+0ee2 : 0001d01b;
+0ee3 : 0001d018;
+0ee4 : 0001d017;
+0ee5 : 0001d01a;
+0ee6 : 0001d403;
+0ee7 : 0001d402;
+0ee8 : 0001d40e;
+0ee9 : 0004007c;
+0eea : 00040078;
+0eeb : 00040074;
+0eec : 00040068;
+0eed : 00040060;
+0eee : 0004005c;
+0eef : 00040058;
+0ef0 : 00040054;
+0ef1 : 00040050;
+0ef2 : 0004004c;
+0ef3 : 00040048;
+0ef4 : 00040044;
+0ef5 : 00040040;
+0ef6 : 0004002c;
+0ef7 : 00040028;
+0ef8 : 00040024;
+0ef9 : 00040020;
+0efa : 0004001c;
+0efb : 00040018;
+0efc : 00040014;
+0efd : 00040010;
+0efe : 0004000c;
+0eff : 00040008;
+0f00 : 00040004;
+0f01 : 00040000;
 END; 
diff -ur atari800core_v1_20140121_mcc216/zpu_config_regs.vhdl atari800core_v1_20140312_mist/zpu_config_regs.vhdl
--- atari800core_v1_20140121_mcc216/zpu_config_regs.vhdl	2014-02-02 19:12:56.000000000 +0000
+++ atari800core_v1_20140312_mist/zpu_config_regs.vhdl	2014-03-09 18:09:38.000000000 +0000
@@ -46,11 +46,16 @@
 	-- SYSTEM CONFIG SETTINGS (legacy from switches - hardcoded to start with, then much fancier)
 	PAL : OUT STD_LOGIC;
 	USE_SDRAM : OUT STD_LOGIC;
-	RAM_SELECT : OUT STD_LOGIC_VECTOR(1 downto 0);
+	RAM_SELECT : OUT STD_LOGIC_VECTOR(3 downto 0);
 	VGA : OUT STD_LOGIC;
 	COMPOSITE_ON_HSYNC : OUT STD_LOGIC;
 	GPIO_ENABLE : OUT STD_LOGIC;
-	ROM_SELECT : out stD_logic_vector(1 downto 0);
+	ROM_SELECT : out stD_logic_vector(3 downto 0);
+	
+	-- sector buffer
+	sector : out std_logic_vector(31 downto 0);
+	sector_request : out std_logic;
+	sector_ready : in std_logic;
 
 	-- system reset/halt
 	PLL_LOCKED : IN STD_LOGIC; -- pll locked
@@ -161,10 +166,10 @@
 	
 	signal config_6502_next : std_logic_vector(7 downto 0);
 	signal config_6502_reg : std_logic_vector(7 downto 0);
-	signal ram_select_next : std_logic_vector(1 downto 0);
-	signal ram_select_reg : std_logic_vector(1 downto 0);
-	signal rom_select_next : std_logic_vector(1 downto 0);
-	signal rom_select_reg : std_logic_vector(1 downto 0);
+	signal ram_select_next : std_logic_vector(3 downto 0);
+	signal ram_select_reg : std_logic_vector(3 downto 0);
+	signal rom_select_next : std_logic_vector(3 downto 0);
+	signal rom_select_reg : std_logic_vector(3 downto 0);
 	signal gpio_enable_next : std_logic;
 	signal gpio_enable_reg : std_logic;
 	
@@ -207,6 +212,12 @@
 	signal zpu_hex_reg : std_logic_vector(15 downto 0);
 	
 	signal pokey_data_out : std_logic_vector(7 downto 0);
+	
+	signal sector_next : std_logic_vector(31 downto 0);
+	signal sector_reg : std_logic_vector(31 downto 0);
+	signal sector_request_next : std_logic;
+	signal sector_request_reg : std_logic; -- cleared when ready asserted
+	
 begin
 	-- register
 	process(clk,pll_locked)
@@ -214,8 +225,8 @@
 		if (clk'event and clk='1') then	
 			if (pll_locked = '0') then
 				config_6502_reg <= "1"&"0"&"011111"; -- reset_6502, halt_6502, run_every 32 cycles
-				rom_select_reg <= "01";
-				ram_select_reg <= "10";
+				rom_select_reg <= "0010";
+				ram_select_reg <= "0010";
 				gpio_enable_reg <= '0';
 				pause_reg <= (others=>'0');
 				paused_reg <= '0';
@@ -230,6 +241,9 @@
 				reset_n_reg <= '0';			
 				reset_zpu_reg <= '1';
 				reset_6502_cpu_reg <= '1';											
+				
+				sector_reg <= (others=>'0');
+				sector_request_reg <= '0';
 			else
 				config_6502_reg <= config_6502_next;
 				rom_select_reg <= rom_select_next;
@@ -248,6 +262,9 @@
 				reset_n_reg <= reset_n_next;			
 				reset_zpu_reg <= reset_zpu_next;
 				reset_6502_cpu_reg <= reset_6502_cpu_next;							
+				
+				sector_reg <= sector_next;
+				sector_request_reg <= sector_request_next;				
 			end if;
 		end if;
 	end process;
@@ -328,12 +345,15 @@
 	--    R(32 bits) 0=DE1
 	-- HEX digits
 	--    W(16 bits)
+	-- SECTOR
+	--   W(32 bits) - write here initiates a request_reset_zpu
+	--   R: 0=request_active
 	
 	-- TODO, ROM select, RAM select etc etc
 	-- TODO firmware with OSD!
 				
 	-- Writes to registers
-	process(cpu_data_in,wr_en,addr,addr_decoded, ledg_reg, ledr_reg, pause_reg, config_6502_reg, rom_select_reg, ram_select_reg, gpio_enable_reg, spi_speed_reg, spi_addr_reg, zpu_hex_reg)
+	process(cpu_data_in,wr_en,addr,addr_decoded, ledg_reg, ledr_reg, pause_reg, config_6502_reg, rom_select_reg, ram_select_reg, gpio_enable_reg, spi_speed_reg, spi_addr_reg, zpu_hex_reg, sector_request_reg, sector_ready, sector_reg)
 	begin
 		config_6502_next <= config_6502_reg;
 		rom_select_next <= rom_select_reg;
@@ -350,6 +370,9 @@
 		
 		zpu_hex_next <= zpu_hex_reg;
 		
+		sector_next <= sector_reg;
+		sector_request_next <= sector_request_reg and not(sector_ready);
+		
 		paused_next <= '0';
 		if (not(pause_reg = X"00000000")) then
 			pause_next <= std_LOGIC_VECTOR(unsigned(pause_reg)-to_unsigned(1,32));
@@ -359,8 +382,8 @@
 		if (wr_en = '1' and addr(4) = '0') then
 			if(addr_decoded(0) = '1') then
 				config_6502_next <= cpu_data_in(7 downto 0);
-				ram_select_next <= cpu_DATA_IN(9 downto 8);
-				rom_select_next <= cpu_DATA_IN(13 downto 12);
+				ram_select_next <= cpu_DATA_IN(11 downto 8);
+				rom_select_next <= cpu_DATA_IN(15 downto 12);
 				gpio_enable_next <= cpu_DATA_IN(16);
 			end if;	
 			
@@ -396,19 +419,24 @@
 				zpu_hex_next <= cpu_data_in(15 downto 0);
 			end if;	
 			
+			if(addr_decoded(11) = '1') then
+				sector_next <= cpu_data_in;
+				sector_request_next <= '1';
+			end if;
+			
 		end if;
 	end process;
 	
 	-- Read from registers
-	process(addr,addr_decoded, ledg_reg, ledr_reg, SWITCH, KEY, SIO_COMMAND_OUT, spi_rx_data, spi_busy, pokey_data_out, zpu_hex_reg, config_6502_reg, ram_select_reg, rom_select_reg, gpio_enable_reg)
+	process(addr,addr_decoded, ledg_reg, ledr_reg, SWITCH, KEY, SIO_COMMAND_OUT, spi_rx_data, spi_busy, pokey_data_out, zpu_hex_reg, config_6502_reg, ram_select_reg, rom_select_reg, gpio_enable_reg, sector_request_reg)
 	begin
 		data_out <= (others=>'0');
 
 		if (addr(4) = '0') then
 			if (addr_decoded(0) = '1') then
 				data_out(7 downto 0) <= config_6502_reg;
-				data_out(9 downto 8) <= ram_select_reg;
-				data_out(13 downto 12) <= rom_select_reg;
+				data_out(11 downto 8) <= ram_select_reg;
+				data_out(15 downto 12) <= rom_select_reg;
 				data_out(16) <= gpio_enable_reg;
 			end if;
 			
@@ -451,6 +479,11 @@
 			if (addr_decoded(10) = '1') then
 				data_out(15 downto 0) <= zpu_hex_reg;
 			end if;			
+			
+			if (addr_decoded(11) = '1') then
+				data_out(0) <= sector_request_reg;
+			end if;			
+			
 		else
 			data_out(7 downto 0) <= pokey_data_out;
 		end if;
@@ -480,6 +513,7 @@
 	SDCARD_DAT3 <= spi_chip_select(0);
 	
 	PAL <= '1'; -- TODO
+	--USE_SDRAM <= '1'; -- should not be all or nothing. can mix for higher ram settings...
 	USE_SDRAM <= '1'; -- should not be all or nothing. can mix for higher ram settings...
 	RAM_SELECT <= ram_select_reg;
 	VGA <= '1';
@@ -496,6 +530,9 @@
 	throttle_count_6502 <= config_6502_reg(5 downto 0); -- zpu software controlled	
 	
 	zpu_hex <= zpu_hex_reg;
+	
+	sector <= sector_reg;
+	sector_request <= sector_request_reg;
 end vhdl;
 
 
diff -ur atari800core_v1_20140121_mcc216/zpu_glue.vhdl atari800core_v1_20140312_mist/zpu_glue.vhdl
--- atari800core_v1_20140121_mcc216/zpu_glue.vhdl	2014-01-20 20:41:50.000000000 +0000
+++ atari800core_v1_20140312_mist/zpu_glue.vhdl	2014-03-06 06:02:49.000000000 +0000
@@ -24,6 +24,7 @@
 	ZPU_DI : in std_logic_vector(31 downto 0); -- response from general memory - for areas that only support 8/16 bit set top bits to 0
 	ZPU_ROM_DI : in std_logic_vector(31 downto 0); -- response from own program memory
 	ZPU_RAM_DI : in std_logic_vector(31 downto 0); -- response from own stack	
+	ZPU_SECTOR_DI : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
 	ZPU_CONFIG_DI : in std_logic_vector(31 downto 0); -- response from config registers
 	
 	ZPU_DO : out std_logic_vector(31 downto 0);
@@ -43,7 +44,7 @@
 	
 	-- stack request
 	ZPU_STACK_WRITE : out std_logic_vector(3 downto 0);
-	
+
 	-- response
 	MEMORY_READY : in std_logic
 );
@@ -114,22 +115,27 @@
 	signal config_mem : std_logic;
 	signal special_mem : std_logic;
 	
-	signal result_next : std_logic_vector(3 downto 0);
-	signal result_reg : std_logic_vector(3 downto 0);
-	constant result_external : std_logic_vector(3 downto 0) := "0000";
-	constant result_ram : std_logic_vector(3 downto 0) := "0001";
-	constant result_ram_8bit_0 : std_logic_vector(3 downto 0) := "0010";
-	constant result_ram_8bit_1 : std_logic_vector(3 downto 0) := "0011";
-	constant result_ram_8bit_2 : std_logic_vector(3 downto 0) := "0100";
-	constant result_ram_8bit_3 : std_logic_vector(3 downto 0) := "0101";
-	constant result_rom : std_logic_vector(3 downto 0) := "0110";
-	constant result_rom_8bit_0 : std_logic_vector(3 downto 0) := "0111";
-	constant result_rom_8bit_1 : std_logic_vector(3 downto 0) := "1000";
-	constant result_rom_8bit_2 : std_logic_vector(3 downto 0) := "1001";
-	constant result_rom_8bit_3 : std_logic_vector(3 downto 0) := "1010";	
-	constant result_config : std_logic_vector(3 downto 0) := "1011";	
-	constant result_external_special : std_logic_vector(3 downto 0) := "1100";
-
+	signal result_next : std_logic_vector(4 downto 0);
+	signal result_reg : std_logic_vector(4 downto 0);
+	constant result_external   : std_logic_vector(4 downto 0) := "00000";
+	constant result_ram        : std_logic_vector(4 downto 0) := "00001";
+	constant result_ram_8bit_0 : std_logic_vector(4 downto 0) := "00010";
+	constant result_ram_8bit_1 : std_logic_vector(4 downto 0) := "00011";
+	constant result_ram_8bit_2 : std_logic_vector(4 downto 0) := "00100";
+	constant result_ram_8bit_3 : std_logic_vector(4 downto 0) := "00101";
+	constant result_rom        : std_logic_vector(4 downto 0) := "00110";
+	constant result_rom_8bit_0 : std_logic_vector(4 downto 0) := "00111";
+	constant result_rom_8bit_1 : std_logic_vector(4 downto 0) := "01000";
+	constant result_rom_8bit_2 : std_logic_vector(4 downto 0) := "01001";
+	constant result_rom_8bit_3 : std_logic_vector(4 downto 0) := "01010";	
+	constant result_config     : std_logic_vector(4 downto 0) := "01011";	
+	constant result_external_special : std_logic_vector(4 downto 0) := "01100";
+	constant result_sec        : std_logic_vector(4 downto 0) := "01101";
+	constant result_sec_8bit_0 : std_logic_vector(4 downto 0) := "01110";
+	constant result_sec_8bit_1 : std_logic_vector(4 downto 0) := "01111";
+	constant result_sec_8bit_2 : std_logic_vector(4 downto 0) := "10000";
+	constant result_sec_8bit_3 : std_logic_vector(4 downto 0) := "10001";
+	
 	signal request_type : std_logic_vector(4 downto 0);
 	
 	signal zpu_di_use : std_logic_vector(31 downto 0);
@@ -196,7 +202,8 @@
 	ZPU_WRITE_TEMP<= zpu_32BIT_WRITE_ENABLE_temp or zpu_16BIT_WRITE_ENABLE_temp or zpu_8BIT_WRITE_ENABLE_temp;
 	process(zpu_addr_reg,pause,memory_ready,zpu_memory_fetch_pending_next,request_type, zpu_memory_fetch_pending_reg, memory_ready_reg, zpu_ADDR_unsigned, zpu_8bit_read_enable_temp, zpu_write_temp, result_reg, block_mem, config_mem, memORY_ACCESS,
 	        zpu_read_reg,zpu_8BIT_WRITE_ENABLE_reg, zpu_16BIT_WRITE_ENABLE_reg, zpu_32BIT_WRITE_ENABLE_reg,
-			  zpu_read_temp,zpu_8BIT_WRITE_ENABLE_temp, zpu_16BIT_WRITE_ENABLE_temp, zpu_32BIT_WRITE_ENABLE_temp
+			  zpu_read_temp,zpu_8BIT_WRITE_ENABLE_temp, zpu_16BIT_WRITE_ENABLE_temp, zpu_32BIT_WRITE_ENABLE_temp,
+			  special_mem
 			  )
 	begin
 		zpu_memory_fetch_pending_next <= zpu_memory_fetch_pending_reg;
@@ -234,19 +241,37 @@
 				zpu_16bit_write_enable_next <= zpu_16bit_write_enable_temp;
 				zpu_32bit_write_enable_next <= zpu_32bit_write_enable_temp;					
 			when "01010" =>
-				if (zpu_8bit_read_enable_temp='1') then
-					case (zpu_addr_unsigned(1 downto 0)) is
-					when "00" =>
-						result_next <= result_rom_8bit_3;										
-					when "01" =>
-						result_next <= result_rom_8bit_2;
-					when "10" =>
-						result_next <= result_rom_8bit_1;										
-					when "11" =>
-						result_next <= result_rom_8bit_0;
-					end case;
+				-- TODO - addr(14) should just feed 1 bit in result reg!
+				if (zpu_addr_unsigned(14) = '1') then
+					if (zpu_8bit_read_enable_temp='1') then
+						case (zpu_addr_unsigned(1 downto 0)) is
+						when "00" =>
+							result_next <= result_sec_8bit_0;										
+						when "01" =>
+							result_next <= result_sec_8bit_1;
+						when "10" =>
+							result_next <= result_sec_8bit_2;										
+						when "11" =>
+							result_next <= result_sec_8bit_3;
+						end case;
+					else
+						result_next <= result_sec;
+					end if;					
 				else
-					result_next <= result_rom;
+					if (zpu_8bit_read_enable_temp='1') then
+						case (zpu_addr_unsigned(1 downto 0)) is
+						when "00" =>
+							result_next <= result_rom_8bit_3;										
+						when "01" =>
+							result_next <= result_rom_8bit_2;
+						when "10" =>
+							result_next <= result_rom_8bit_1;										
+						when "11" =>
+							result_next <= result_rom_8bit_0;
+						end case;
+					else
+						result_next <= result_rom;
+					end if;
 				end if;
 				ZPU_MEM_BUSY <= '1';
 				zpu_addr_next <= std_logic_vector(zpu_addr_unsigned);
@@ -287,7 +312,7 @@
 	end process;
 
 	zpu_di_next <= zpu_di;
-	process(result_reg, zpu_di_reg, zpu_rom_di, zpu_ram_di, zpu_config_di)
+	process(result_reg, zpu_di_reg, zpu_rom_di, zpu_ram_di, zpu_config_di, zpu_sector_di)
 	begin
 		zpu_di_use <= (others=>'0');
 		case result_reg is 
@@ -315,6 +340,16 @@
 				zpu_di_use(7 downto 0) <= zpu_ram_DI(23 downto 16);
 			when result_ram_8bit_3 =>
 				zpu_di_use(7 downto 0) <= zpu_ram_DI(31 downto 24);				
+			when result_sec =>
+				zpu_di_use <= zpu_sector_DI;
+			when result_sec_8bit_0 =>
+				zpu_di_use(7 downto 0) <= zpu_sector_DI(7 downto 0);
+			when result_sec_8bit_1 =>
+				zpu_di_use(7 downto 0) <= zpu_sector_DI(15 downto 8);
+			when result_sec_8bit_2 =>
+				zpu_di_use(7 downto 0) <= zpu_sector_DI(23 downto 16);
+			when result_sec_8bit_3 =>
+				zpu_di_use(7 downto 0) <= zpu_sector_DI(31 downto 24);								
 			when result_config =>
 				zpu_di_use <= zpu_config_di;
 			when others =>
